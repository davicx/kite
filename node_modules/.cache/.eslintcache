[{"/Users/david/Desktop/David/www/kite/src/index.js":"1","/Users/david/Desktop/David/www/kite/src/App.js":"2","/Users/david/Desktop/David/www/kite/src/pages/GroupsPage.js":"3","/Users/david/Desktop/David/www/kite/src/pages/RegisterPage.js":"4","/Users/david/Desktop/David/www/kite/src/pages/LoginPage.js":"5","/Users/david/Desktop/David/www/kite/src/pages/Home.js":"6","/Users/david/Desktop/David/www/kite/src/pages/ProfilePage.js":"7","/Users/david/Desktop/David/www/kite/src/pages/NotFound.js":"8","/Users/david/Desktop/David/www/kite/src/pages/IndividualGroup.js":"9","/Users/david/Desktop/David/www/kite/src/functions/functions.js":"10","/Users/david/Desktop/David/www/kite/src/functions/context/LoginContext.js":"11","/Users/david/Desktop/David/www/kite/src/components/login/RegisterUser.js":"12","/Users/david/Desktop/David/www/kite/src/components/login/LogoutUser.js":"13","/Users/david/Desktop/David/www/kite/src/components/login/Refresh.js":"14","/Users/david/Desktop/David/www/kite/src/components/login/LoginUser.js":"15","/Users/david/Desktop/David/www/kite/src/components/login/LoginStatus.js":"16","/Users/david/Desktop/David/www/kite/src/components/posts/Posts.js":"17","/Users/david/Desktop/David/www/kite/src/components/groups/GroupList.js":"18","/Users/david/Desktop/David/www/kite/src/components/posts/IndividualPosts.js":"19"},{"size":405,"mtime":1669586604965,"results":"20","hashOfConfig":"21"},{"size":2152,"mtime":1673050545836,"results":"22","hashOfConfig":"21"},{"size":5963,"mtime":1674351192468,"results":"23","hashOfConfig":"21"},{"size":279,"mtime":1670546995990,"results":"24","hashOfConfig":"21"},{"size":3027,"mtime":1673050545839,"results":"25","hashOfConfig":"21"},{"size":591,"mtime":1670716549001,"results":"26","hashOfConfig":"21"},{"size":1911,"mtime":1673050545840,"results":"27","hashOfConfig":"21"},{"size":801,"mtime":1668985538692,"results":"28","hashOfConfig":"21"},{"size":1452,"mtime":1673050545839,"results":"29","hashOfConfig":"21"},{"size":890,"mtime":1669587595336,"results":"30","hashOfConfig":"21"},{"size":88,"mtime":1668985538691,"results":"31","hashOfConfig":"21"},{"size":6174,"mtime":1668985538690,"results":"32","hashOfConfig":"21"},{"size":6082,"mtime":1673137772450,"results":"33","hashOfConfig":"21"},{"size":982,"mtime":1671237368019,"results":"34","hashOfConfig":"21"},{"size":10995,"mtime":1673223712181,"results":"35","hashOfConfig":"21"},{"size":1412,"mtime":1670633943232,"results":"36","hashOfConfig":"21"},{"size":3486,"mtime":1673050545838,"results":"37","hashOfConfig":"21"},{"size":4584,"mtime":1674351124040,"results":"38","hashOfConfig":"21"},{"size":749,"mtime":1673050545838,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1bcufqt",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"42"},"/Users/david/Desktop/David/www/kite/src/index.js",[],["94","95"],"/Users/david/Desktop/David/www/kite/src/App.js",["96","97","98","99"],"import React, { useState, useEffect } from 'react';\nimport { Route, Routes, Link } from 'react-router-dom'\nimport { QueryClientProvider, QueryClient } from 'react-query';\n\n//Functions \nimport { sayHello } from './functions/functions';\n\n//Style \nimport './style/style.css';\nimport './style/external/normalize.css';\n\n//Pages\nimport Home from './pages/Home';\nimport Login from './pages/LoginPage';\nimport Register from './pages/RegisterPage';\nimport Groups from './pages/GroupsPage';\nimport Profile from './pages/ProfilePage';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\nimport { LoginContext } from './functions/context/LoginContext';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const [currentUser, setLoginState] = useState('null');\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n\n  useEffect(() => {\n     const data = localStorage.getItem(\"localStorageCurrentUser\");\n     const currentUserLoggedIn = JSON.parse(data);\n     setLoginState(currentUserLoggedIn);\n    if(currentUserLoggedIn == 'null') {\n      setUserLoggedIn(false);\n    } else {\n      setUserLoggedIn(true);\n    }\n  }, []);\n\n  return (\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <LoginContext.Provider value = {{currentUser, setLoginState}} > \n\n            <nav className=\"navBar\">\n              <Link className=\"navLink\" to=\"/login\">Login </Link>\n              <Link className=\"navLink\" to=\"/groups\"> Groups </Link>\n              <Link className=\"navLink\" to=\"/profile\"> Profile </Link>\n            </nav>  \n            \n            <Routes>      \n              <Route path=\"/\" element={<Home/>} />\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/groups\" element={<Groups/>} />\n              <Route path = \"/group/:groupID\" element = {<IndividualGroup />} />   =\n              <Route path=\"/profile\" element={<Profile/>} />\n              <Route path=\"*\" element={ <NotFound /> } />       \n            </Routes>\n          </LoginContext.Provider>   \n        </QueryClientProvider>\n      </div>\n\n  );\n}\n\nexport default App;\n\n\n\n","/Users/david/Desktop/David/www/kite/src/pages/GroupsPage.js",["100","101","102"],"/Users/david/Desktop/David/www/kite/src/pages/RegisterPage.js",["103"],"import React, { useState} from 'react'\nimport RegisterUser from '../components/login/RegisterUser';\n\n\nfunction RegisterPage() {  \n    return (\n      <div className=\"login\">\n       <p>Register</p>\n       <RegisterUser />\n      </div>\n    );\n  }\n\n  export default RegisterPage;\n  \n","/Users/david/Desktop/David/www/kite/src/pages/LoginPage.js",["104","105","106"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport LoginUser from '../components/login/LoginUser';\nimport LoginStatus from '../components/login/LoginStatus';\nimport { LoginContext } from \"../functions/context/LoginContext\";\n\n\nfunction LoginPage() {  \n\n  //Check Login Status \n  const { currentUser, setLoginState} = useContext(LoginContext);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn);\n\n    if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\n      setUserLoggedIn(false);\n      console.log(\"No one is logged in right now\");\n      console.log(\"Login Page: OK STAY HERE\");\n    } else {\n      setUserLoggedIn(true);\n      console.log(\"Login Page: DONT BE HERE\");\n      console.log(currentUserLoggedIn + \" is currently logged in\");\n    } \n}, []);\n    return (\n      <div className=\"login\">\n        <label>Current User: { currentUser } </label> \n        <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n        <LoginUser />\n        <LoginStatus />\n      </div>\n    );\n  }\n\nexport default LoginPage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nimport { useNavigate, useResolvedPath } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n//import LoginHeader from '../components/headers/LoginHeader';\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    //console.log(\"APP LOGIN PAGE \" + currentUserLoggedIn)\n    console.log(currentUserLoggedIn)\n    if(currentUserLoggedIn == 'null') {\n      //console.log(\"OK STAY HERE\")\n      //console.log(\"userLoggedIn = false\")\n    } else {\n      //console.log(\"DONT BE HERE\");\n      navigate(\"/groups\");\n      //console.log(\"userLoggedIn = true\")\n      \n    }\n  }, []);\n\nfunction Login() {\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n*/\n\n","/Users/david/Desktop/David/www/kite/src/pages/Home.js",["107","108"],"import React, { useEffect } from 'react';\nimport { useNavigate  } from \"react-router-dom\"\n\nfunction Home() {\n    //Login Status \n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const currentUserLoggedIn = JSON.parse(data);\n        if(currentUserLoggedIn == 'null') {\n            navigate(\"/login\");\n        } else {\n            navigate(\"/groups\");\n        }\n    }, []);\n\n    return (\n      <div className=\"user\">\n          <p> Home go to Login or Groups </p>\n      </div>\n    )\n}\n\nexport default Home;","/Users/david/Desktop/David/www/kite/src/pages/ProfilePage.js",["109","110"],"import React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\nimport LogoutUser from '../components/login/LogoutUser';\n\nfunction ProfilePage() {\n\n  //Login Status \n  const navigate = useNavigate();\n  const { currentUser, setLoginState} = useContext(LoginContext);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn);\n    //if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\n    if(currentUserLoggedIn == 'null') {\n      setUserLoggedIn(false);\n      console.log(\"Profile Page: DONT BE HERE\");\n      navigate(\"/login\");\n    } else {\n      setUserLoggedIn(true);\n      console.log(\"Profile Page: OK STAY HERE\")\n      console.log(currentUserLoggedIn + \" is currently logged in\");\n    }\n }, []);\n\n  return (\n    <div className=\"user\">\n        <p><b> Profile </b></p>\n        <p> Current User: { currentUser } </p>\n        <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n        <LogoutUser />\n    </div>\n  );\n}\n\nexport default ProfilePage;\n\n\n\n\n\n/*\nimport React, { useState, useContext } from 'react';\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\nimport LogoutUser from '../components/login/LogoutUser';\nimport { LoginContext } from \"../functions/context/LoginContext\";\n//import { LoggedInContext } from \"../functions/context/LoggedInContext\";\n\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Profile() {\n  const { currentUser, setLoginState} = useContext(LoginContext);\n      \n  return (\n    <div className=\"user\">\n        <p> Profile</p>\n\n    </div>\n  );\n}\n\nexport default Profile;\nexport default Profile;\n*/\n\n","/Users/david/Desktop/David/www/kite/src/pages/NotFound.js",["111","112","113","114","115"],"import React, { useState, useEffect } from 'react';\nimport { Navigate, BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\n\nfunction NotFound() {\n  const navigate = useNavigate()\n\n  useEffect(() =>{\n    setTimeout(() => {\n\n      }, 1000)\n  },[])\n\n    return (\n      <div className=\"user\">\n          <p> Not Found </p>\n      </div>\n    )\n}\n\nexport default NotFound;\n\n\n\n/*\n\n  useEffect(() =>{\n    setTimeout(() => {\n      navigate(\"/login\")\n      }, 1000)\n  },[])\n\nexport function NotFound() {\n  return <Navigate to = \"/login\" />\n\n}\n\n\n\n\nfunction NotFound() {\n\n  return (\n    <div className=\"user\">\n        <p> Not Found </p>\n    </div>\n  );\n}\n\nimport { Navigate, BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\n\nexport function NotFound() {\n    return <Navigate to = \"/login\" />\n}\n*/","/Users/david/Desktop/David/www/kite/src/pages/IndividualGroup.js",["116","117","118","119"],"import { useParams } from \"react-router\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\nimport Posts from '../components/posts/Posts';\n\n//import MakePost from './../components/posts/MakePost';\n\nconst IndividualGroup = () => {\n    const { groupID } = useParams()\n\n    //Login Status \n    const navigate = useNavigate();\n    const { currentUser, setLoginState} = useContext(LoginContext);\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\n  \n    useEffect(() => {\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const currentUserLoggedIn = JSON.parse(data);\n      setLoginState(currentUserLoggedIn);\n      if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\n        setUserLoggedIn(false);\n        console.log(\"Group Page: DONT BE HERE\");\n      } else {\n        setUserLoggedIn(true);\n        console.log(\"Group Page: OK STAY HERE\")\n      }\n   }, []);\n\n    return (\n        <div>\n            <Posts groupID = { groupID }/>\n            <p><b> Your on a group! </b></p>\n            <p> Group ID { groupID } </p>\n            <p> Current User: { currentUser } </p>\n            <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n            <Link className=\"\" to=\"/groups\"> Groups </Link>\n        </div>\n    )\n}\n\nexport default IndividualGroup;\n","/Users/david/Desktop/David/www/kite/src/functions/functions.js",["120","121","122"],"import { useState, useEffect } from 'react';\n\n/*\n\n/* FUNCTIONS \nFUNCTIONS A: Login Functions \n\t1) Function A1: Login a User \n\t2) Function A2: Logout a User  \n\t3) Function A3: Get Login Status \n\n*/\n//FUNCTIONS A: Login Functions \n//Function A1: Login a User \nexport function loginUser(userName) {\n    console.log(\"login \" + userName)\n}\n\n//Function A2: Logout a User \nexport function logouUser(userName) {\n    console.log(\"logout \" + userName)\n}\n\n//Function A3: Get Login Status \nexport function loginStatus(userName) {\n    let userStatus = {\n        isAuthenticated: false,\n        user: userName,\n    };\n\n    if(userName == 'null') {\n        userStatus.isAuthenticated = false;\n      } else {\n        userStatus.isAuthenticated = true;\n      }\n\n      return userStatus;\n}\n\nexport function sayHello(userName) {\n    console.log(\"hello \" + userName)\n}\n\n\n\n\n//export default { sayHi, sayHello };","/Users/david/Desktop/David/www/kite/src/functions/context/LoginContext.js",[],"/Users/david/Desktop/David/www/kite/src/components/login/RegisterUser.js",["123","124","125","126","127","128"],"import React, { useState, useContext } from 'react'\n//import { loginUser } from '../../functions/functions';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\n\n\nfunction RegisterUser() {  \n    const [userName, setUserName] = useState('david')\n    const [email, setEmail] = useState('davey@gmail.com')\n    const [fullName, setFullname] = useState('david v')\n    const [password, setPassword] = useState('password')\n\n    const handleChange = (event) => {\n      const { name, value } = event.target\n      if(name == \"username\") {\n        setUserName(value)\n      } else if (name == \"email\") {\n        setEmail(value)\n      } else if (name == \"fullname\") {\n        setFullname(value)\n      } else if (name == \"password\") {\n        setPassword(value)\n      }\n      console.log(name)\n      console.log(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        console.log(\"Register \" + userName, email, fullName, password)\n        //STEP 1: Call Login API\n\n        //STEP 2: Success\n        //Step 2A: Set local storage  \n        //localStorage.setItem('currentUserLoggedIn', JSON.stringify(userName));\n\n        //Step 2B: Set context\n        //setLoginState(userName)\n\n        //Step 2C: Redirect to Groups\n    }\n\n    return (\n      <div className = \"login\">\n          <form onSubmit={ handleSubmit }>\n              <label> </label> \n              <input name= \"username\" className=\"loginInput\" type=\"text\" value={ userName } onChange={handleChange} />\n              <input name= \"email\" className=\"loginInput\" type=\"text\" value={ email } onChange={handleChange} />\n              <input name= \"fullname\" className=\"loginInput\" type=\"text\" value={ fullName } onChange={handleChange} />\n              <input name= \"password\" className=\"loginInput\" type=\"text\" value={ password } onChange={handleChange} />\n              <button type=\"submit\" className=\"loginButton\" > Register </button>\n          </form>\n      </div>\n    );\n  }\n\nexport default RegisterUser;\n\n/*\n\nimport React, { Component, useState} from 'react'\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        /*\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        *//*\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n*/\n","/Users/david/Desktop/David/www/kite/src/components/login/LogoutUser.js",["129","130"],"import React, { useContext } from 'react';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction LogoutUser() {\n  const navigate = useNavigate();\n  const { currentUser, setLoginState} = useContext(LoginContext);\n  const logoutURL = \"http://localhost:3003/user/logout\"\n     \n    function logout() {\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const userName = JSON.parse(data);\n        console.log(\"you are loggin out\" + userName )\n        \n        //STEP 1: Call Logout API\n        axiosRequest.post(logoutURL, {\n          userName: userName,\n          refreshToken: \"token\"\n        })\n        .then(function (response) {\n          console.log(response.data)\n\n          if(response.data.userLoggedIn != \"notLoggedIn\"){\n            let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n            console.log(loginStatusMessage)\n            //setLoginStatus(loginStatusMessage);\n  \n          } else {\n            let loginStatusMessage = \"nobody logged in!\"\n            console.log(loginStatusMessage)\n            //setLoginStatus(loginStatusMessage);\n          }\n          \n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n        //Step 2A: Set local storage  \n        localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\"));   \n      \n        //Step 2B: Set context\n        setLoginState('null')\n\n        //Step 2C: Redirect to Login\n        navigate(\"/login\");\n        \n    }\n    \n    return (\n    <div className = \"holder\">\n        <p>LOGOUT</p>\n        <button className=\"loginButton\" onClick={() => logout() }> Logout </button>\n      </div>\n    );\n}\n\n\nexport default LogoutUser;\n\n\n\n\n\n\n\n/*\nimport React, { Component, useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\n\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      console.log(\"you are checking on \" + userInputName )\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        \n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n\n*/","/Users/david/Desktop/David/www/kite/src/components/login/Refresh.js",["131"],"import React, { useContext } from 'react';\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction Refresh() {\n    function refreshToken() {\n      const refreshURL = \"http://localhost:3003/refresh/tokens\"\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const userName = JSON.parse(data);\n        console.log(\"you are refreshing for\" + userName )\n        \n        //STEP 1: Call Logout API\n        axiosRequest.post(refreshURL, {\n          userName: userName,\n          refreshToken: \"dontneedheretoken\"\n        })\n        .then(function (response) {\n          console.log(response.data)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n    \n    return (\n    <div className = \"holder\">\n        <p>Refresh Token</p>\n        <button className=\"loginButton\" onClick={() => refreshToken() }> Refresh Token </button>\n      </div>\n    );\n}\n\n\nexport default Refresh;\n\n\n\n\n","/Users/david/Desktop/David/www/kite/src/components/login/LoginUser.js",["132","133","134","135","136","137","138","139","140"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useLocation, useNavigate, useResolvedPath } from \"react-router-dom\";\n//import { loginUser } from '../../functions/functions';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\n\nfunction LoginUser() {  \n    var loginURL = \"http://localhost:3003/user/login\"\n    const navigate = useNavigate();\n    const { currentUser, setLoginState} = useContext(LoginContext);\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\n    const [userName, setUserName] = useState('davey')\n    const [password, setPassword] = useState('password')\n\n    const handleChange = (event) => {\n      const { name, value } = event.target\n\n      if(name == \"username\") {\n        setUserName(value)\n      } else {\n        setPassword(value)\n      }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"logging in \" + userName + \" with password \"  + password)\n        \n        //STEP 1: Call Login API\n        var userInputName = userName\n        var userInputPassword = password\n        console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n    \n        axiosRequest.post(loginURL, {\n          userName: userInputName,\n          password: userInputPassword\n        })\n        .then(function (response) {\n          console.log(response.data);\n          const loginSuccess = response.data.loginSuccess;\n\n          //STEP 2: Success\n          if(loginSuccess == true) {\n            \n            //Step 2A: Set local storage  \n            localStorage.setItem('localStorageCurrentUser', JSON.stringify(userName));\n\n            //Step 2B: Set context\n            setLoginState(userName)\n \n            //Step 2C: Redirect to Groups\n            //navigate(\"/groups\");\n            navigate(\"/profile\");\n\n          } else {\n            console.log(\"Display error message\");\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n    }\n\n    return (\n      <div className = \"login\">\n          <form onSubmit={ handleSubmit }>\n              <input name= \"username\" className=\"loginInput\" type=\"text\" value={ userName } onChange={handleChange} />\n              <input name= \"password\" className=\"loginInput\" type=\"text\" value={ password } onChange={handleChange} />\n              <button type=\"submit\" className=\"loginButton\" > Login </button>\n          </form>\n      </div>\n    );\n  }\n\nexport default LoginUser;\n\n\n\n\n\n\n/*\nimport React, { Component, useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      console.log(\"you are checking on \" + userInputName )\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        /*\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        *//*\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n\nimport React, { Component, useState} from 'react'\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        /*\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        *//*\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n*/\n","/Users/david/Desktop/David/www/kite/src/components/login/LoginStatus.js",["141"],"import React, { useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction LoginStatus() {\n    const [loggedInStatus, setLoginStatus] = useState('');\n    var loginStatusURL = \"http://localhost:3003/login/status\"\n\n    const loginStatus = () => {\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const userName = JSON.parse(data);\n        console.log(\"you are checking on \" + userName )\n  \n        axiosRequest.post(loginStatusURL, {\n          userName: userName\n        })\n        .then(function (response) {\n          /*\n          if(response.data.userLoggedIn != \"notLoggedIn\"){\n            let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n            console.log(loginStatusMessage)\n            setLoginStatus(loginStatusMessage);\n  \n          } else {\n            let loginStatusMessage = \"nobody logged in!\"\n            console.log(loginStatusMessage)\n            setLoginStatus(loginStatusMessage);\n          }\n          */\n           console.log(response.data)\n          \n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      }\n\n    return (\n      <div className=\"login\">\n        <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n        <p>{ loggedInStatus }</p>\n      </div>\n    );\n  }\n\nexport default LoginStatus;\n","/Users/david/Desktop/David/www/kite/src/components/posts/Posts.js",["142","143"],"import React from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios'\nimport IndividualPosts from './IndividualPosts';\n\nconst axiosRequest = axios.create({\n    withCredentials: true\n  })  \n\nasync function refreshToken() {\n  const refreshURL = \"http://localhost:3003/refresh/tokens\"\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const userName = JSON.parse(data);\n    console.log(\"you are refreshing for\" + userName )\n    \n    //STEP 1: Call Logout API\n    axiosRequest.post(refreshURL, {\n      userName: userName,\n      refreshToken: \"dontneedheretoken\"\n    })\n    .then(function (response) {\n      console.log(response.data)\n      return response.data;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\n\naxiosRequest.interceptors.response.use(function (response) {\n  console.log(\"interceptors: GOOD \")\n  return response;\n}, function (error) {\n  console.log(\"interceptors: NEED NEW TOKEN \")\n  \n  if(error.response.status == 401) {\n    console.log(\"A new token was got!! Get a new token here\");\n    const refreshOutcome = refreshToken();\n    console.log(\"NEW TOKEN OUTCOME\")\n    console.log(refreshOutcome)\n  } \n  \n  return Promise.reject(error);\n  \n});\n\n\nasync function getPosts(groupID) {\n    const groupPostURL = \"http://localhost:3003/posts/group/\" + groupID; \n    const response = await axiosRequest.get(groupPostURL)\n  \n    return response.data\n  \n} \n\n//https://www.youtube.com/watch?v=CWEOYFzgOJs&ab_channel=TheNetNinja\nconst Posts = ({groupID}) => {\n    const localData = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUser = JSON.parse(localData);\n    console.log(\"Posts: Getting posts for the group \" + groupID)\n\n    const onError = (error) => {\n      console.log(\"Do something here if there is Error!\")\n      console.log(error)\n    }\n  \n    const { isLoading, data, isError, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID), \n      { refetchInterval: 10000000,\n        onError: onError\n      }\n    )\n\n    //Like Post\n    //Edit Post\n    //Delete Post \n\n    const currentPosts = data;\n\n  return (\n  <div className=\"posts\">\n       <p> Posts </p>\n       <div className = \"post-list\" >\n          { isLoading && <div> loading... </div>}\n          { isError && <div> There was an error fetching the posts { error.message } </div>}\n          {data && currentPosts.map((post) => (console.log(post)))}\n          { data && <IndividualPosts posts = { currentPosts } title=\"The posts!\" />}\n       </div>\n  </div>\n  );\n  }\n  \nexport default Posts;\n\n\n/*\n{data && currentPosts.map((currentPost) => (<IndividualPost post = { currentPost } />))}\n \n \n const IndividualPost = (props) => {\n    const posts = props.posts;\n    console.log(\"IndividualPost \" + posts)\n    const postID = posts.postID\n    const title = props.title;\n\n    const likePost = (e) => {\n      console.log(e.target);\n      console.log(\"you liked! \" + postID);\n    }\n\n    return (\n        <div className = \"post-list\">\n            { posts.map((post) => (\n                <div className=\"post\" key={ post.postID }>\n                    <p className = \"post-text\"> { post.postCaption } </p>\n                    <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>      \n                    <button onClick={ likePost }> Like </button>                         \n                </div>\n            ))}\n        </div>\n        );\n    }  \n\nexport default IndividualPost;\n*/","/Users/david/Desktop/David/www/kite/src/components/groups/GroupList.js",["144","145","146"],"/Users/david/Desktop/David/www/kite/src/components/posts/IndividualPosts.js",["147"],"const IndividualPosts = (props) => {\n    const posts = props.posts;\n\n    const title = props.title;\n\n    const likePost = (e) => {\n      console.log(e.target);\n      console.log(\"you liked! \");\n    }\n\n    return (\n        <div className = \"post-list\">\n            { posts.map((post) => (\n                <div className=\"post\" key={ post.postID }>\n                    <p className = \"post-text\"> { post.postCaption } </p>\n                    <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>      \n                    <button onClick={ likePost }> Like </button>                         \n                </div>\n            ))}\n        </div>\n        );\n    }  \n\nexport default IndividualPosts;\n\n",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":6,"column":10,"nodeType":"154","messageId":"155","endLine":6,"endColumn":18},{"ruleId":"152","severity":1,"message":"156","line":15,"column":8,"nodeType":"154","messageId":"155","endLine":15,"endColumn":16},{"ruleId":"152","severity":1,"message":"157","line":26,"column":10,"nodeType":"154","messageId":"155","endLine":26,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":32,"column":28,"nodeType":"160","messageId":"161","endLine":32,"endColumn":30},{"ruleId":"152","severity":1,"message":"157","line":13,"column":10,"nodeType":"154","messageId":"155","endLine":13,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":19,"column":28,"nodeType":"160","messageId":"161","endLine":19,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":30,"column":5,"nodeType":"164","endLine":30,"endColumn":7,"suggestions":"165"},{"ruleId":"152","severity":1,"message":"166","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"167","line":13,"column":9,"nodeType":"154","messageId":"155","endLine":13,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":20,"column":28,"nodeType":"160","messageId":"161","endLine":20,"endColumn":30},{"ruleId":"162","severity":1,"message":"168","line":29,"column":4,"nodeType":"164","endLine":29,"endColumn":6,"suggestions":"169"},{"ruleId":"158","severity":1,"message":"159","line":11,"column":32,"nodeType":"160","messageId":"161","endLine":11,"endColumn":34},{"ruleId":"162","severity":1,"message":"170","line":16,"column":8,"nodeType":"164","endLine":16,"endColumn":10,"suggestions":"171"},{"ruleId":"158","severity":1,"message":"159","line":18,"column":28,"nodeType":"160","messageId":"161","endLine":18,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":27,"column":5,"nodeType":"164","endLine":27,"endColumn":7,"suggestions":"172"},{"ruleId":"152","severity":1,"message":"166","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"173","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":18},{"ruleId":"152","severity":1,"message":"174","line":2,"column":20,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"175","line":2,"column":48,"nodeType":"154","messageId":"155","endLine":2,"endColumn":52},{"ruleId":"152","severity":1,"message":"167","line":5,"column":9,"nodeType":"154","messageId":"155","endLine":5,"endColumn":17},{"ruleId":"152","severity":1,"message":"174","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":23},{"ruleId":"152","severity":1,"message":"167","line":13,"column":11,"nodeType":"154","messageId":"155","endLine":13,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":21,"column":30,"nodeType":"160","messageId":"161","endLine":21,"endColumn":32},{"ruleId":"162","severity":1,"message":"168","line":28,"column":7,"nodeType":"164","endLine":28,"endColumn":9,"suggestions":"176"},{"ruleId":"152","severity":1,"message":"166","line":1,"column":10,"nodeType":"154","messageId":"155","endLine":1,"endColumn":18},{"ruleId":"152","severity":1,"message":"177","line":1,"column":20,"nodeType":"154","messageId":"155","endLine":1,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":30,"column":17,"nodeType":"160","messageId":"161","endLine":30,"endColumn":19},{"ruleId":"152","severity":1,"message":"178","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":37},{"ruleId":"152","severity":1,"message":"179","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":14,"column":15,"nodeType":"160","messageId":"161","endLine":14,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":16,"column":23,"nodeType":"160","messageId":"161","endLine":16,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":18,"column":23,"nodeType":"160","messageId":"161","endLine":18,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":20,"column":23,"nodeType":"160","messageId":"161","endLine":20,"endColumn":25},{"ruleId":"152","severity":1,"message":"180","line":12,"column":11,"nodeType":"154","messageId":"155","endLine":12,"endColumn":22},{"ruleId":"158","severity":1,"message":"181","line":28,"column":41,"nodeType":"160","messageId":"161","endLine":28,"endColumn":43},{"ruleId":"152","severity":1,"message":"178","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":27},{"ruleId":"152","severity":1,"message":"177","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"175","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":14},{"ruleId":"152","severity":1,"message":"182","line":2,"column":16,"nodeType":"154","messageId":"155","endLine":2,"endColumn":27},{"ruleId":"152","severity":1,"message":"183","line":2,"column":42,"nodeType":"154","messageId":"155","endLine":2,"endColumn":57},{"ruleId":"152","severity":1,"message":"180","line":15,"column":13,"nodeType":"154","messageId":"155","endLine":15,"endColumn":24},{"ruleId":"152","severity":1,"message":"157","line":16,"column":12,"nodeType":"154","messageId":"155","endLine":16,"endColumn":24},{"ruleId":"152","severity":1,"message":"184","line":16,"column":26,"nodeType":"154","messageId":"155","endLine":16,"endColumn":41},{"ruleId":"158","severity":1,"message":"159","line":23,"column":15,"nodeType":"160","messageId":"161","endLine":23,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":48,"column":27,"nodeType":"160","messageId":"161","endLine":48,"endColumn":29},{"ruleId":"152","severity":1,"message":"185","line":9,"column":28,"nodeType":"154","messageId":"155","endLine":9,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":37,"column":28,"nodeType":"160","messageId":"161","endLine":37,"endColumn":30},{"ruleId":"152","severity":1,"message":"180","line":60,"column":11,"nodeType":"154","messageId":"155","endLine":60,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":39,"column":28,"nodeType":"160","messageId":"161","endLine":39,"endColumn":30},{"ruleId":"152","severity":1,"message":"186","line":47,"column":11,"nodeType":"154","messageId":"155","endLine":47,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":65,"column":28,"nodeType":"160","messageId":"161","endLine":65,"endColumn":30},{"ruleId":"152","severity":1,"message":"187","line":4,"column":11,"nodeType":"154","messageId":"155","endLine":4,"endColumn":16},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'sayHello' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'userLoggedIn' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'setLoginState'. Either include them or remove the dependency array.","ArrayExpression",["190"],"'useState' is defined but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setLoginState'. Either include it or remove the dependency array.",["191"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["192"],["193"],"'Navigate' is defined but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.",["194"],"'useEffect' is defined but never used.","'useContext' is defined but never used.","'LoginContext' is defined but never used.","'currentUser' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useLocation' is defined but never used.","'useResolvedPath' is defined but never used.","'setUserLoggedIn' is assigned a value but never used.","'setLoginStatus' is assigned a value but never used.","'refreshOutcome' is assigned a value but never used.","'title' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"195","fix":"201"},{"desc":"197","fix":"202"},"Update the dependencies array to be: [navigate, setLoginState]",{"range":"203","text":"204"},"Update the dependencies array to be: [setLoginState]",{"range":"205","text":"206"},"Update the dependencies array to be: [navigate]",{"range":"207","text":"208"},{"range":"209","text":"204"},{"range":"210","text":"206"},[1044,1046],"[navigate, setLoginState]",[1046,1048],"[setLoginState]",[455,457],"[navigate]",[1002,1004],[1050,1052]]