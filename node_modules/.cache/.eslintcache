[{"/Users/david/Desktop/David/www/kite/src/index.js":"1","/Users/david/Desktop/David/www/kite/src/App.js":"2","/Users/david/Desktop/David/www/kite/src/pages/GroupsPage.js":"3","/Users/david/Desktop/David/www/kite/src/pages/RegisterPage.js":"4","/Users/david/Desktop/David/www/kite/src/pages/LoginPage.js":"5","/Users/david/Desktop/David/www/kite/src/pages/Home.js":"6","/Users/david/Desktop/David/www/kite/src/pages/ProfilePage.js":"7","/Users/david/Desktop/David/www/kite/src/pages/NotFound.js":"8","/Users/david/Desktop/David/www/kite/src/pages/IndividualGroup.js":"9","/Users/david/Desktop/David/www/kite/src/functions/functions.js":"10","/Users/david/Desktop/David/www/kite/src/functions/context/LoginContext.js":"11","/Users/david/Desktop/David/www/kite/src/components/login/RegisterUser.js":"12","/Users/david/Desktop/David/www/kite/src/components/login/LogoutUser.js":"13","/Users/david/Desktop/David/www/kite/src/components/login/Refresh.js":"14","/Users/david/Desktop/David/www/kite/src/components/login/LoginUser.js":"15","/Users/david/Desktop/David/www/kite/src/components/login/LoginStatus.js":"16","/Users/david/Desktop/David/www/kite/src/components/groups/GroupList.js":"17","/Users/david/Desktop/David/www/kite/src/functions/hooks/useHello.js":"18","/Users/david/Desktop/David/www/kite/src/functions/hooks/useLoginStatus.js":"19","/Users/david/Desktop/David/www/kite/src/functions/hooks/useRefreshToken.js":"20","/Users/david/Desktop/David/www/kite/src/pages/PostsPage.js":"21","/Users/david/Desktop/David/www/kite/src/components/posts/GroupPosts.js":"22","/Users/david/Desktop/David/www/kite/src/components/posts/display/PostList.js":"23","/Users/david/Desktop/David/www/kite/src/components/posts/actions/NewPost.js":"24","/Users/david/Desktop/David/www/kite/src/components/posts/display/IndividualPost.js":"25","/Users/david/Desktop/David/www/kite/src/components/posts/actions/EditPost.js":"26","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/Likes.js":"27","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/LikePost.js":"28","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/UnlikePost.js":"29","/Users/david/Desktop/David/www/kite/src/hooks/useDisplayName.js":"30","/Users/david/Desktop/David/www/kite/src/functions/apiFunctions.js":"31","/Users/david/Desktop/David/www/kite/src/components/posts/actions/DeletePost.js":"32","/Users/david/Desktop/David/www/kite/src/components/comments/display/IndividualComment.js":"33","/Users/david/Desktop/David/www/kite/src/components/notifications/NotificationList.js":"34","/Users/david/Desktop/David/www/kite/src/components/notifications/IndividualNotification.js":"35","/Users/david/Desktop/David/www/kite/src/pages/UsersPage.js":"36","/Users/david/Desktop/David/www/kite/src/components/friends/MyFriends.js":"37","/Users/david/Desktop/David/www/kite/src/components/users/UserProfile.js":"38","/Users/david/Desktop/David/www/kite/src/components/friends/PendingFriends.js":"39","/Users/david/Desktop/David/www/kite/src/components/users/display/AllUsers.js":"40","/Users/david/Desktop/David/www/kite/src/components/users/display/SimpleProfile.js":"41","/Users/david/Desktop/David/www/kite/src/components/friends/UserFriends.js":"42","/Users/david/Desktop/David/www/kite/src/pages/IndividualFriendPage.js":"43","/Users/david/Desktop/David/www/kite/src/pages/FriendPage.js":"44","/Users/david/Desktop/David/www/kite/src/components/friends/FriendList.js":"45","/Users/david/Desktop/David/www/kite/src/hooks/useCurrentUser.js":"46","/Users/david/Desktop/David/www/kite/src/components/friends/actions/AddFriend.js":"47","/Users/david/Desktop/David/www/kite/src/components/friends/actions/FriendInvite.js":"48","/Users/david/Desktop/David/www/kite/src/components/friends/actions/FriendRequest.js":"49","/Users/david/Desktop/David/www/kite/src/components/friends/actions/AcceptFriendInvite.js":"50","/Users/david/Desktop/David/www/kite/src/components/friends/actions/DeclineFriendInvite.js":"51","/Users/david/Desktop/David/www/kite/src/components/groups/GroupUsers.js":"52","/Users/david/Desktop/David/www/kite/src/functions/hooks/useCurrentUser.js":"53","/Users/david/Desktop/David/www/kite/src/components/comments/Comments.js":"54","/Users/david/Desktop/David/www/kite/src/components/comments/actions/NewComment.js":"55","/Users/david/Desktop/David/www/kite/src/components/comments/display/CommentList.js":"56","/Users/david/Desktop/David/www/kite/src/pages/Playground.js":"57","/Users/david/Desktop/David/www/kite/src/components/search/FriendSearch.js":"58","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleGetUsers.js":"59","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleCheckbox.js":"60","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleEdit.js":"61","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleAddUser.js":"62","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleUserSearch.js":"63","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleInput.js":"64","/Users/david/Desktop/David/www/kite/src/hooks/useUpdateLogger.js":"65","/Users/david/Desktop/David/www/kite/src/hooks/useLocalStorage.js":"66","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleAddGroupUser.js":"67","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleLocalStorage.js":"68","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleArray.js":"69","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleChild.js":"70","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleParent.js":"71","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleUseEffect.js":"72","/Users/david/Desktop/David/www/kite/src/components/playground/IndividualGroupUser.js":"73","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleButtonParent.js":"74","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleSaveToStateAPI.js":"75","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleButtonChild.js":"76","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleAddGroupUserLS.js":"77","/Users/david/Desktop/David/www/kite/src/components/playground/NewGroupUser.js":"78","/Users/david/Desktop/David/www/kite/src/pages/NewGroupPage.js":"79","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/Example.js":"80","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/Learning.js":"81","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/AutoComplete.js":"82","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/components/SearchResultsList.js":"83","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/components/SearchBar.js":"84","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/components/SearchResult.js":"85","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/MainApp.js":"86","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/components/MyAPI.js":"87","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/components/Activities.js":"88","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/components/PostList.js":"89","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/hooks/useFetch.js":"90","/Users/david/Desktop/David/www/kite/src/components/groups/actions/NewGroup.js":"91","/Users/david/Desktop/David/www/kite/src/components/search/NewGroupSearchTS.js":"92","/Users/david/Desktop/David/www/kite/src/components/search/NewGroupSearch.js":"93","/Users/david/Desktop/David/www/kite/src/functions/hooks/useFetch.js":"94","/Users/david/Desktop/David/www/kite/src/functions/hooks/useGroupFriendsFetch.js":"95","/Users/david/Desktop/David/www/kite/src/components/groups/users/AddGroupUser.js":"96","/Users/david/Desktop/David/www/kite/src/components/groups/users/RemoveGroupUser.js":"97","/Users/david/Desktop/David/www/kite/src/components/groups/actions/CreateGroup.js":"98"},{"size":405,"mtime":1708297375000,"results":"99","hashOfConfig":"100"},{"size":3237,"mtime":1708297375000,"results":"101","hashOfConfig":"100"},{"size":1605,"mtime":1709427250470,"results":"102","hashOfConfig":"100"},{"size":279,"mtime":1708297375000,"results":"103","hashOfConfig":"100"},{"size":3027,"mtime":1708297375000,"results":"104","hashOfConfig":"100"},{"size":591,"mtime":1708297375000,"results":"105","hashOfConfig":"100"},{"size":2469,"mtime":1708297375000,"results":"106","hashOfConfig":"100"},{"size":801,"mtime":1708297375000,"results":"107","hashOfConfig":"100"},{"size":1076,"mtime":1708297375000,"results":"108","hashOfConfig":"100"},{"size":1992,"mtime":1708297375000,"results":"109","hashOfConfig":"100"},{"size":115,"mtime":1708297375000,"results":"110","hashOfConfig":"100"},{"size":6174,"mtime":1708297375000,"results":"111","hashOfConfig":"100"},{"size":6150,"mtime":1708297375000,"results":"112","hashOfConfig":"100"},{"size":982,"mtime":1671237368019,"results":"113","hashOfConfig":"100"},{"size":2712,"mtime":1708297375000,"results":"114","hashOfConfig":"100"},{"size":1412,"mtime":1708297375000,"results":"115","hashOfConfig":"100"},{"size":3358,"mtime":1708297375000,"results":"116","hashOfConfig":"100"},{"size":1433,"mtime":1674954755473,"results":"117","hashOfConfig":"100"},{"size":2889,"mtime":1708297375000,"results":"118","hashOfConfig":"100"},{"size":2203,"mtime":1675038575078,"results":"119","hashOfConfig":"100"},{"size":985,"mtime":1708297375000,"results":"120","hashOfConfig":"100"},{"size":342,"mtime":1708297375000,"results":"121","hashOfConfig":"100"},{"size":1503,"mtime":1708297375000,"results":"122","hashOfConfig":"100"},{"size":2333,"mtime":1708297375000,"results":"123","hashOfConfig":"100"},{"size":1292,"mtime":1708563755000,"results":"124","hashOfConfig":"100"},{"size":4069,"mtime":1708297375000,"results":"125","hashOfConfig":"100"},{"size":14087,"mtime":1708297375000,"results":"126","hashOfConfig":"100"},{"size":2160,"mtime":1708297375000,"results":"127","hashOfConfig":"100"},{"size":4128,"mtime":1708297375000,"results":"128","hashOfConfig":"100"},{"size":287,"mtime":1679266570914,"results":"129","hashOfConfig":"100"},{"size":1954,"mtime":1708297375000,"results":"130","hashOfConfig":"100"},{"size":1699,"mtime":1708297375000,"results":"131","hashOfConfig":"100"},{"size":422,"mtime":1708297375000,"results":"132","hashOfConfig":"100"},{"size":2178,"mtime":1690157187964,"results":"133","hashOfConfig":"100"},{"size":649,"mtime":1683504450213,"results":"134","hashOfConfig":"100"},{"size":941,"mtime":1708297375000,"results":"135","hashOfConfig":"100"},{"size":2168,"mtime":1708297375000,"results":"136","hashOfConfig":"100"},{"size":630,"mtime":1708297375000,"results":"137","hashOfConfig":"100"},{"size":1333,"mtime":1687133307702,"results":"138","hashOfConfig":"100"},{"size":3917,"mtime":1708297375000,"results":"139","hashOfConfig":"100"},{"size":3130,"mtime":1708297375000,"results":"140","hashOfConfig":"100"},{"size":1314,"mtime":1690155014537,"results":"141","hashOfConfig":"100"},{"size":1032,"mtime":1690156788799,"results":"142","hashOfConfig":"100"},{"size":1161,"mtime":1708297375000,"results":"143","hashOfConfig":"100"},{"size":2234,"mtime":1708297375000,"results":"144","hashOfConfig":"100"},{"size":1014,"mtime":1708297375000,"results":"145","hashOfConfig":"100"},{"size":5827,"mtime":1708297375000,"results":"146","hashOfConfig":"100"},{"size":750,"mtime":1708297375000,"results":"147","hashOfConfig":"100"},{"size":2648,"mtime":1708297375000,"results":"148","hashOfConfig":"100"},{"size":2450,"mtime":1708297375000,"results":"149","hashOfConfig":"100"},{"size":2457,"mtime":1708297375000,"results":"150","hashOfConfig":"100"},{"size":1371,"mtime":1708297375000,"results":"151","hashOfConfig":"100"},{"size":301,"mtime":1699136230796,"results":"152","hashOfConfig":"100"},{"size":794,"mtime":1708297375000,"results":"153","hashOfConfig":"100"},{"size":2575,"mtime":1708297375000,"results":"154","hashOfConfig":"100"},{"size":2438,"mtime":1708297375000,"results":"155","hashOfConfig":"100"},{"size":3574,"mtime":1708995829000,"results":"156","hashOfConfig":"100"},{"size":6977,"mtime":1708297375000,"results":"157","hashOfConfig":"100"},{"size":2469,"mtime":1708297375000,"results":"158","hashOfConfig":"100"},{"size":880,"mtime":1708297375000,"results":"159","hashOfConfig":"100"},{"size":1239,"mtime":1708297375000,"results":"160","hashOfConfig":"100"},{"size":1136,"mtime":1708297375000,"results":"161","hashOfConfig":"100"},{"size":2816,"mtime":1708297375000,"results":"162","hashOfConfig":"100"},{"size":278,"mtime":1708297375000,"results":"163","hashOfConfig":"100"},{"size":182,"mtime":1708297375000,"results":"164","hashOfConfig":"100"},{"size":589,"mtime":1708297375000,"results":"165","hashOfConfig":"100"},{"size":6735,"mtime":1706405006675,"results":"166","hashOfConfig":"100"},{"size":1689,"mtime":1708297375000,"results":"167","hashOfConfig":"100"},{"size":912,"mtime":1708297375000,"results":"168","hashOfConfig":"100"},{"size":371,"mtime":1705195227036,"results":"169","hashOfConfig":"100"},{"size":5815,"mtime":1705195405921,"results":"170","hashOfConfig":"100"},{"size":2033,"mtime":1708297375000,"results":"171","hashOfConfig":"100"},{"size":444,"mtime":1708297375000,"results":"172","hashOfConfig":"100"},{"size":886,"mtime":1708995829000,"results":"173","hashOfConfig":"100"},{"size":700,"mtime":1708297375000,"results":"174","hashOfConfig":"100"},{"size":580,"mtime":1708297375000,"results":"175","hashOfConfig":"100"},{"size":8128,"mtime":1708297375000,"results":"176","hashOfConfig":"100"},{"size":435,"mtime":1708297375000,"results":"177","hashOfConfig":"100"},{"size":704,"mtime":1709426683864,"results":"178","hashOfConfig":"100"},{"size":3929,"mtime":1708297375000,"results":"179","hashOfConfig":"100"},{"size":1597,"mtime":1708297375000,"results":"180","hashOfConfig":"100"},{"size":3093,"mtime":1708297375000,"results":"181","hashOfConfig":"100"},{"size":332,"mtime":1708297375000,"results":"182","hashOfConfig":"100"},{"size":1841,"mtime":1708297375000,"results":"183","hashOfConfig":"100"},{"size":208,"mtime":1708297375000,"results":"184","hashOfConfig":"100"},{"size":247,"mtime":1708995829000,"results":"185","hashOfConfig":"100"},{"size":6218,"mtime":1708995829000,"results":"186","hashOfConfig":"100"},{"size":2001,"mtime":1708995829000,"results":"187","hashOfConfig":"100"},{"size":266,"mtime":1708995829000,"results":"188","hashOfConfig":"100"},{"size":770,"mtime":1708995829000,"results":"189","hashOfConfig":"100"},{"size":6646,"mtime":1709426861997,"results":"190","hashOfConfig":"100"},{"size":8087,"mtime":1708995829000,"results":"191","hashOfConfig":"100"},{"size":0,"mtime":1708821421445,"results":"192","hashOfConfig":"100"},{"size":773,"mtime":1708822812420,"results":"193","hashOfConfig":"100"},{"size":851,"mtime":1709167307000,"results":"194","hashOfConfig":"100"},{"size":357,"mtime":1709080671000,"results":"195","hashOfConfig":"100"},{"size":372,"mtime":1709080798000,"results":"196","hashOfConfig":"100"},{"size":6279,"mtime":1709427215999,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"1bcufqt",{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"200"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"200"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"200"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"200"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"200"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"200"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"200"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"200"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"200"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"200"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"200"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"200"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"200"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"200"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"200"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"200"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"200"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"200"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"200"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"200"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"200"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"200"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"200"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"200"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"200"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"200"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"200"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"200"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"200"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"200"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"200"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"200"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"200"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"200"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"200"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"200"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"200"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"200"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"200"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"200"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"387"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"387"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"200"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"200"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"200"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"200"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"200"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"200"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"200"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"200"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"200"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"200"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"447"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"200"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"200"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/david/Desktop/David/www/kite/src/index.js",[],["458","459"],"/Users/david/Desktop/David/www/kite/src/App.js",["460","461","462","463"],"import React, { useState, useEffect } from 'react';\nimport { Route, Routes, Link } from 'react-router-dom'\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\n//Functions \nimport { sayHello } from './functions/functions';\n\n//Style \nimport './style/styleOLD.css';\nimport './style/style.css';\nimport './style/external/normalize.css';\n\n//Pages\nimport Home from './pages/Home';\nimport Login from './pages/LoginPage';\nimport Register from './pages/RegisterPage';\nimport Groups from './pages/GroupsPage';\nimport NewGroup from './pages/NewGroupPage';\nimport Profile from './pages/ProfilePage';\nimport Posts from './pages/PostsPage';\nimport Users from './pages/UsersPage';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\nimport Playground from './pages/Playground';\n//import PlaygroundCheckbox from './pages/PlaygroundCheckbox';\n//import IndividualFriend from './pages/IndividualFriendPage';\n//This is temp above works\nimport IndividualFriend from './pages/FriendPage';\n//\nimport { LoginContext } from './functions/context/LoginContext';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const [currentUser, setLoginState] = useState('null');\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n\n  useEffect(() => {\n     const data = localStorage.getItem(\"localStorageCurrentUser\");\n     const currentUserLoggedIn = JSON.parse(data);\n     setLoginState(currentUserLoggedIn);\n    if(currentUserLoggedIn == \"null\") {\n      setUserLoggedIn(false);\n    } else {\n      setUserLoggedIn(true);\n    }\n  }, []);\n\n  return (\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <LoginContext.Provider value = {{currentUser, setLoginState}} > \n\n            <nav className=\"navBar\">\n              <Link className=\"navLink\" to=\"/login\">Login </Link>\n              <Link className=\"navLink\" to=\"/groups\"> Groups </Link>\n              <Link className=\"navLink\" to=\"/profile\"> Profile </Link>\n              <Link className=\"navLink\" to=\"/posts\"> Posts </Link>\n              <Link className=\"navLink\" to=\"/users\"> Users </Link>\n              <Link className=\"navLink\" to=\"/playground\"> Playground </Link>\n            </nav>  \n            \n            <Routes>      \n              <Route path=\"/\" element={<Home/>} />\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/groups\" element={<Groups/>} />\n              <Route path=\"/groups/new\" element={<NewGroup/>} />\n              <Route path = \"/group/:groupID\" element = {<IndividualGroup />} />   \n              <Route path = \"/friends/:friendName\" element = {<IndividualFriend />} />   \n              <Route path=\"/profile\" element={<Profile/>} />\n              <Route path=\"/posts\" element={<Posts/>} />\n              <Route path=\"/users\" element={<Users/>} />\n              <Route path=\"/playground\" element={<Playground/>} />\n              <Route path=\"*\" element={ <NotFound /> } />       \n            </Routes>\n          </LoginContext.Provider> \n          <ReactQueryDevtools initialIsOpen={false} position='bottom-right'/>  \n        </QueryClientProvider>\n      </div>\n\n  );\n}\n\nexport default App;\n","/Users/david/Desktop/David/www/kite/src/pages/GroupsPage.js",["464","465","466","467"],"/Users/david/Desktop/David/www/kite/src/pages/RegisterPage.js",["468"],"import React, { useState} from 'react'\nimport RegisterUser from '../components/login/RegisterUser';\n\n\nfunction RegisterPage() {  \n    return (\n      <div className=\"login\">\n       <p>Register</p>\n       <RegisterUser />\n      </div>\n    );\n  }\n\n  export default RegisterPage;\n  \n","/Users/david/Desktop/David/www/kite/src/pages/LoginPage.js",["469","470","471"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport LoginUser from '../components/login/LoginUser';\nimport LoginStatus from '../components/login/LoginStatus';\nimport { LoginContext } from \"../functions/context/LoginContext\";\n\n\nfunction LoginPage() {  \n\n  //Check Login Status \n  const { currentUser, setLoginState} = useContext(LoginContext);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn);\n\n    if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\n      setUserLoggedIn(false);\n      console.log(\"No one is logged in right now\");\n      console.log(\"Login Page: OK STAY HERE\");\n    } else {\n      setUserLoggedIn(true);\n      console.log(\"Login Page: DONT BE HERE\");\n      console.log(currentUserLoggedIn + \" is currently logged in\");\n    } \n}, []);\n    return (\n      <div className=\"login\">\n        <label>Current User: { currentUser } </label> \n        <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n        <LoginUser />\n        <LoginStatus />\n      </div>\n    );\n  }\n\nexport default LoginPage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nimport { useNavigate, useResolvedPath } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n//import LoginHeader from '../components/headers/LoginHeader';\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    //console.log(\"APP LOGIN PAGE \" + currentUserLoggedIn)\n    console.log(currentUserLoggedIn)\n    if(currentUserLoggedIn == 'null') {\n      //console.log(\"OK STAY HERE\")\n      //console.log(\"userLoggedIn = false\")\n    } else {\n      //console.log(\"DONT BE HERE\");\n      navigate(\"/groups\");\n      //console.log(\"userLoggedIn = true\")\n      \n    }\n  }, []);\n\nfunction Login() {\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n*/\n\n","/Users/david/Desktop/David/www/kite/src/pages/Home.js",["472","473"],"import React, { useEffect } from 'react';\nimport { useNavigate  } from \"react-router-dom\"\n\nfunction Home() {\n    //Login Status \n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const currentUserLoggedIn = JSON.parse(data);\n        if(currentUserLoggedIn == 'null') {\n            navigate(\"/login\");\n        } else {\n            navigate(\"/groups\");\n        }\n    }, []);\n\n    return (\n      <div className=\"user\">\n          <p> Home go to Login or Groups </p>\n      </div>\n    )\n}\n\nexport default Home;","/Users/david/Desktop/David/www/kite/src/pages/ProfilePage.js",["474","475"],"import React from 'react';\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport apiFunctions from '../functions/apiFunctions';\nimport UserProfile from '../components/users/UserProfile';\nimport LogoutUser from '../components/login/LogoutUser';\nimport useCurrentUser from '../hooks/useCurrentUser';\n\n\nconst axiosRequest = apiFunctions.getAPI();\n\nfunction ProfilePage() {\n\n    //STEP 1: Check user is logged in\n    const loggedInMessage = useLoginStatus();\n\n    //STEP 2: Get the current User\n    var [currentUser, setCurrentUser] = useCurrentUser();\n  \n  return (\n    <div className=\"user\">\n        <h4> PROFILE PAGE </h4>\n        <p> Current User: {currentUser}</p>\n        \n        <UserProfile currentUser = { currentUser } api = { axiosRequest } /> \n        <LogoutUser />\n    </div>\n  );\n}\n\nexport default ProfilePage;\n\n\n/*\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\nimport UserProfile from '../components/users/UserProfile';\nimport LogoutUser from '../components/login/LogoutUser';\n\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport axios from 'axios'\n\n\n\nfunction ProfilePage() {\n  console.log(\"PAGE: ProfilePage\")\n  //const { currentUser, setLoginState} = useContext(LoginContext);\n  //const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const { currentUser, userLoggedIn  } = useLoginStatus();\n  \n  return (\n    <div className=\"user\">\n        <p><b> Profile </b></p>\n        <p> Current User: { currentUser } </p>\n        <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n        <UserProfile currentUser = { currentUser } api = { axiosRequest } /> \n        <LogoutUser />\n    </div>\n  );\n}\n\nexport default ProfilePage;\n*/\n\n\n\n\n\n/*\n\nimport React, { useState, useContext } from 'react';\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\nimport LogoutUser from '../components/login/LogoutUser';\nimport { LoginContext } from \"../functions/context/LoginContext\";\n//import { LoggedInContext } from \"../functions/context/LoggedInContext\";\n\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Profile() {\n  const { currentUser, setLoginState} = useContext(LoginContext);\n      \n  return (\n    <div className=\"user\">\n        <p> Profile</p>\n\n    </div>\n  );\n}\n\nexport default Profile;\nexport default Profile;\n*/\n\n","/Users/david/Desktop/David/www/kite/src/pages/NotFound.js",["476","477","478","479","480"],"import React, { useState, useEffect } from 'react';\nimport { Navigate, BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\n\nfunction NotFound() {\n  const navigate = useNavigate()\n\n  useEffect(() =>{\n    setTimeout(() => {\n\n      }, 1000)\n  },[])\n\n    return (\n      <div className=\"user\">\n          <p> Not Found </p>\n      </div>\n    )\n}\n\nexport default NotFound;\n\n\n\n/*\n\n  useEffect(() =>{\n    setTimeout(() => {\n      navigate(\"/login\")\n      }, 1000)\n  },[])\n\nexport function NotFound() {\n  return <Navigate to = \"/login\" />\n\n}\n\n\n\n\nfunction NotFound() {\n\n  return (\n    <div className=\"user\">\n        <p> Not Found </p>\n    </div>\n  );\n}\n\nimport { Navigate, BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\n\nexport function NotFound() {\n    return <Navigate to = \"/login\" />\n}\n*/","/Users/david/Desktop/David/www/kite/src/pages/IndividualGroup.js",["481","482"],"import React from 'react';\nimport { useParams } from \"react-router\";\nimport { Link  } from \"react-router-dom\"\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport apiFunctions from '../functions/apiFunctions';\nimport GroupPosts from '../components/posts/GroupPosts';\nimport useCurrentUser from '../hooks/useCurrentUser';\nimport GroupUsers from '../components/groups/GroupUsers';\n\nconst axiosRequest = apiFunctions.getAPI();\n\nfunction IndividualGroup() {\n    const { groupID } = useParams()\n\n    //STEP 1: Check user is logged in\n    const loggedInMessage = useLoginStatus();\n\n    //STEP 2: Get the current User\n    var [currentUser, setCurrentUser] = useCurrentUser();\n  \n  return (\n    <div className=\"user\">\n        <p> Current User: {currentUser}</p>\n        <GroupPosts groupID = { groupID } currentUser = { currentUser } api = { axiosRequest } />\n        <Link className=\"\" to=\"/groups\"> Groups </Link> \n        <GroupUsers groupID = { groupID } currentUser = { currentUser } api = { axiosRequest } />\n    </div>\n  );\n}\n\nexport default IndividualGroup;\n","/Users/david/Desktop/David/www/kite/src/functions/functions.js",["483","484"],"import axios from 'axios'\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})  \n\n/* \nFUNCTIONS A: Login Functions \n\t1) Function A1: Login a User \n\t2) Function A2: Logout a User  \n\t3) Function A3: Get Login Status \n\t4) Function A4: Request new Refresh Token\n\n*/\n\n//FUNCTIONS A: Login Functions \n//Function A1: Login a User \nfunction loginUser(userName) {\n    console.log(\"login \" + userName)\n}\n\n//Function A2: Logout a User \nfunction logoutUser() {\n    //const navigate = useNavigate();\n    console.log(\"logout \")\n\n    //Step 2A: Set local storage  \n    localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\"));   \n\n    //Step 2B: Redirect to Login\n    //navigate(\"/login\");\n}\n\n//Function A3: Get Login Status \nfunction loginStatus(userName) {\n    let userStatus = {\n        isAuthenticated: false,\n        user: userName,\n    };\n\n    if(userName == 'null') {\n        userStatus.isAuthenticated = false;\n      } else {\n        userStatus.isAuthenticated = true;\n      }\n\n      return userStatus;\n}\n\nfunction sayHello(userName) {\n    console.log(\"hello \" + userName)\n}\n\n//Function A4: Request new Refresh Token\nasync function refreshToken() {\n  console.log(\"ATTEMPTING TO REFRESH TOKEN: refreshToken()\")\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const userName = JSON.parse(data);\n      console.log(\"refreshToken: you are refreshing for\" + userName)\n\n      //STEP 1: Call Logout API\n      axiosRequest.post(refreshURL, {\n        userName: userName,\n        refreshToken: \"dontneedheretoken\"\n      })\n      .then(function (response) {\n        console.log(\"refreshToken(): We got a new access token!\")\n        return response.data;\n      })\n      .catch(function (error) {\n        console.log(\"refreshToken(): We failed to get a new access token!\")\n        //console.log(error);\n      });\n  \n  }\n\nexport default { loginUser, logoutUser, loginStatus, refreshToken, sayHello };","/Users/david/Desktop/David/www/kite/src/functions/context/LoginContext.js",[],"/Users/david/Desktop/David/www/kite/src/components/login/RegisterUser.js",["485","486","487","488","489","490"],"import React, { useState, useContext } from 'react'\n//import { loginUser } from '../../functions/functions';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\n\n\nfunction RegisterUser() {  \n    const [userName, setUserName] = useState('david')\n    const [email, setEmail] = useState('davey@gmail.com')\n    const [fullName, setFullname] = useState('david v')\n    const [password, setPassword] = useState('password')\n\n    const handleChange = (event) => {\n      const { name, value } = event.target\n      if(name == \"username\") {\n        setUserName(value)\n      } else if (name == \"email\") {\n        setEmail(value)\n      } else if (name == \"fullname\") {\n        setFullname(value)\n      } else if (name == \"password\") {\n        setPassword(value)\n      }\n      console.log(name)\n      console.log(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        console.log(\"Register \" + userName, email, fullName, password)\n        //STEP 1: Call Login API\n\n        //STEP 2: Success\n        //Step 2A: Set local storage  \n        //localStorage.setItem('currentUserLoggedIn', JSON.stringify(userName));\n\n        //Step 2B: Set context\n        //setLoginState(userName)\n\n        //Step 2C: Redirect to Groups\n    }\n\n    return (\n      <div className = \"login\">\n          <form onSubmit={ handleSubmit }>\n              <label> </label> \n              <input name= \"username\" className=\"loginInput\" type=\"text\" value={ userName } onChange={handleChange} />\n              <input name= \"email\" className=\"loginInput\" type=\"text\" value={ email } onChange={handleChange} />\n              <input name= \"fullname\" className=\"loginInput\" type=\"text\" value={ fullName } onChange={handleChange} />\n              <input name= \"password\" className=\"loginInput\" type=\"text\" value={ password } onChange={handleChange} />\n              <button type=\"submit\" className=\"loginButton\" > Register </button>\n          </form>\n      </div>\n    );\n  }\n\nexport default RegisterUser;\n\n/*\n\nimport React, { Component, useState} from 'react'\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        /*\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        *//*\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n*/\n","/Users/david/Desktop/David/www/kite/src/components/login/LogoutUser.js",["491","492"],"import React, { useContext } from 'react';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\nimport functions from \"../../functions/functions\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction LogoutUser() {\n  const navigate = useNavigate();\n  const { currentUser, setLoginState} = useContext(LoginContext);\n  const logoutURL = \"http://localhost:3003/user/logout\"\n     \n    function logout() {\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const userName = JSON.parse(data);\n        console.log(\"you are loggin out\" + userName )\n        \n        //STEP 1: Call Logout API\n        axiosRequest.post(logoutURL, {\n          userName: userName,\n          refreshToken: \"token\"\n        })\n        .then(function (response) {\n          console.log(response.data)\n\n          if(response.data.userLoggedIn != \"notLoggedIn\"){\n            let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n            console.log(loginStatusMessage)\n            //setLoginStatus(loginStatusMessage);\n  \n          } else {\n            let loginStatusMessage = \"nobody logged in!\"\n            console.log(loginStatusMessage)\n            //setLoginStatus(loginStatusMessage);\n          }\n          \n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n        //Step 2A: Set local storage  \n        localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\"));   \n      \n        //Step 2B: Set context\n        setLoginState('null')\n\n        //Step 2C: Redirect to Login\n        navigate(\"/login\");\n        \n    }\n    \n    return (\n    <div className = \"holder\">\n        <p>LOGOUT { currentUser } </p>\n        <button className=\"loginButton\" onClick={() => logout() }> Logout </button>\n      </div>\n    );\n}\n\n\nexport default LogoutUser;\n\n\n\n\n\n\n\n/*\nimport React, { Component, useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\n\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      console.log(\"you are checking on \" + userInputName )\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        \n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n\n*/","/Users/david/Desktop/David/www/kite/src/components/login/Refresh.js",["493"],"import React, { useContext } from 'react';\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction Refresh() {\n    function refreshToken() {\n      const refreshURL = \"http://localhost:3003/refresh/tokens\"\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const userName = JSON.parse(data);\n        console.log(\"you are refreshing for\" + userName )\n        \n        //STEP 1: Call Logout API\n        axiosRequest.post(refreshURL, {\n          userName: userName,\n          refreshToken: \"dontneedheretoken\"\n        })\n        .then(function (response) {\n          console.log(response.data)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n    \n    return (\n    <div className = \"holder\">\n        <p>Refresh Token</p>\n        <button className=\"loginButton\" onClick={() => refreshToken() }> Refresh Token </button>\n      </div>\n    );\n}\n\n\nexport default Refresh;\n\n\n\n\n",["494","495"],"/Users/david/Desktop/David/www/kite/src/components/login/LoginUser.js",["496","497","498","499","500","501","502","503","504"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useLocation, useNavigate, useResolvedPath } from \"react-router-dom\";\n//import { loginUser } from '../../functions/functions';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\n\nfunction LoginUser() {  \n    var loginURL = \"http://localhost:3003/user/login\"\n    const navigate = useNavigate();\n    const { currentUser, setLoginState} = useContext(LoginContext);\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\n    const [userName, setUserName] = useState('davey')\n    const [password, setPassword] = useState('password')\n\n    const handleChange = (event) => {\n      const { name, value } = event.target\n\n      if(name == \"username\") {\n        setUserName(value)\n      } else {\n        setPassword(value)\n      }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"logging in \" + userName + \" with password \"  + password)\n        \n        //STEP 1: Call Login API\n        var userInputName = userName\n        var userInputPassword = password\n        console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n    \n        axiosRequest.post(loginURL, {\n          userName: userInputName,\n          password: userInputPassword\n        })\n        .then(function (response) {\n          console.log(response.data);\n   \n          const loginSuccess = response.data.data.loginSuccess;\n          const currentUser = response.data.data.loggedInUser;\n\n          //var userNameServer = \n\n          //STEP 2: Success\n          if(loginSuccess == true) {\n            \n            //Step 2A: Set local storage  \n            localStorage.setItem('localStorageCurrentUser', JSON.stringify(currentUser));\n\n            //Step 2B: Set context\n            setLoginState(currentUser)\n \n            //Step 2C: Redirect to Groups\n            //navigate(\"/groups\");\n            navigate(\"/profile\");\n\n          } else {\n            console.log(\"Display error message\");\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n    }\n\n    return (\n      <div className = \"login\">\n          <form onSubmit={ handleSubmit }>\n              <input name= \"username\" className=\"loginInput\" type=\"text\" value={ userName } onChange={handleChange} />\n              <input name= \"password\" className=\"loginInput\" type=\"text\" value={ password } onChange={handleChange} />\n              <button type=\"submit\" className=\"loginButton\" > Login </button>\n          </form>\n      </div>\n    );\n  }\n\nexport default LoginUser;\n\n\n\n\n","/Users/david/Desktop/David/www/kite/src/components/login/LoginStatus.js",["505"],"import React, { useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction LoginStatus() {\n    const [loggedInStatus, setLoginStatus] = useState('');\n    var loginStatusURL = \"http://localhost:3003/login/status\"\n\n    const loginStatus = () => {\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const userName = JSON.parse(data);\n        console.log(\"you are checking on \" + userName )\n  \n        axiosRequest.post(loginStatusURL, {\n          userName: userName\n        })\n        .then(function (response) {\n          /*\n          if(response.data.userLoggedIn != \"notLoggedIn\"){\n            let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n            console.log(loginStatusMessage)\n            setLoginStatus(loginStatusMessage);\n  \n          } else {\n            let loginStatusMessage = \"nobody logged in!\"\n            console.log(loginStatusMessage)\n            setLoginStatus(loginStatusMessage);\n          }\n          */\n           console.log(response.data)\n          \n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      }\n\n    return (\n      <div className=\"login\">\n        <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n        <p>{ loggedInStatus }</p>\n      </div>\n    );\n  }\n\nexport default LoginStatus;\n","/Users/david/Desktop/David/www/kite/src/components/groups/GroupList.js",["506","507","508"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\n//import  functions from \"../../functions/functions\";\n//import useHello from '../../functions/hooks/useHello';\n\nasync function getGroups(currentUser, api) {\n  if(currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n   \n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser; \n  const { data } = await api.get(groupURL)\n\n  return data\n} \n\n\nconst GroupList = (props) => {\n  const currentUser = props.currentUser;\n  const api = props.api;\n  \n  //const { hello} = useHello();\n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser, api), \n    { refetchInterval: 10000000 }\n  )\n\n  var groups = data;\n\n  return (\n  <div className=\"groups\">\n      { isLoading && <div> loading... </div>}\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\n      { data && console.log()}\n      {data && groups.groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n          </div>\n      ))}\n  </div>\n  );\n  }\n  \nexport default GroupList;\n\n\n\n//import useRefreshToken from '../../functions/hooks/useRefreshToken';\n//import axios from 'axios'\n\n/*\nasync function refreshToken() {\n  const refreshURL = \"http://localhost:3003/refresh/tokens\"\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const userName = JSON.parse(data);\n    //console.log(\"REFRESH TOKEN: you are refreshing for\" + userName )\n    //STEP 1: Call Logout API\n    axiosRequest.post(refreshURL, {\n      userName: userName,\n      refreshToken: \"dontneedheretoken\"\n    })\n    .then(function (response) {\n      console.log(response.data)\n      return response.data;\n    })\n    .catch(function (error) {\n      //console.log(error);\n    });\n}\n*/\n\n/*\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})  \n\n\n//STATUS 200: Good Request \naxiosRequest.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  console.log(\"INTERCEPTOR: Looks good! \")\n  return response;\n}, function (error) {\n  \n  //STATUS 498:  Need to get a access token\n  console.log(\"INTERCEPTOR: Need to get a access token or logout the user\")\n  if(error.response.status == 498) {\n    console.log(\"INTERCEPTOR 498: We got a 498 so we need a new access token. Will send refresh token \")\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n\n    //const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\n    //const { data, error, isPending } = useRefreshToken(refreshURL);\n    const refreshOutcome = functions.refreshToken();\n    console.log(\"Got a 498: Here is the status if we could get a new refresh token!\")\n\n  } \n\n  //STATUS 440: Logout User\n  if(error.response.status == 440) {\n    console.log(\"INTERCEPTOR 440: We got a 440 we couldn't refresh the access token because the refresh token was no good need to logout the user\")  \n    localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\")); \n    window.location.href = '/login';\n  }\n  \n  return Promise.reject(error);\n  \n});\n\n*/\n","/Users/david/Desktop/David/www/kite/src/functions/hooks/useHello.js",["509"],"import { useEffect } from 'react'\n\nfunction useHello() {\n  const hello = \"hello\"\n\n    return { hello }\n}\n\nexport default useHello\n\n/*\nimport { useDebugValue, useEffect, useState } from 'react'\n\nfunction useDisplayName() {\n    const [name, setName] = useState('name')\n\n    useEffect(() => {\n      const dataName = \"Frodo from database\"\n      setName(dataName)\n    }, []);\n\n    return name\n}\n\nexport default useDisplayName\n*/\n/*\nimport { useState, useEffect } from 'react';\n\nconst useFetchPosts = (postsURL) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(postsURL)\n      .then(res => {\n        if (!res.ok) { \n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch(err => {\n        setIsPending(false);\n        setError(err.message);\n      })\n    }, 1000);\n  }, [postsURL])\n\n  return { data, isPending, error };\n}\n \nexport default useFetchPosts;\n*/\n//DEBUG\n/*\nfunction useDisplayName() {\n    const [name, setName] = useState('name')\n\n    useEffect(() => {\n      const dataName = \"Frodo from database\"\n      setName(dataName)\n    }, []);\n\n    useDebugValue(name ?? '... loading!')\n\n    return name\n}\n*/\n",["510","511"],"/Users/david/Desktop/David/www/kite/src/functions/hooks/useLoginStatus.js",["512","513","514","515"],"import { useEffect, useState, useContext } from 'react'\nimport { useNavigate  } from \"react-router-dom\"\n//import { LoginContext } from \"../context/LoginContext\";\n\nfunction useLoginStatus() {\n    const navigate = useNavigate();\n    //const { currentUser, setLoginState} = useContext(LoginContext);\n\n    useEffect(() => {\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const currentUserLoggedIn = JSON.parse(data);\n      //setLoginState(currentUserLoggedIn);\n\n      if(currentUserLoggedIn == \"null\") {\n        console.log(\"Current user is null so you should be on login page\");\n        //navigate(\"/login\");\n      } else {\n        console.log(currentUserLoggedIn + \" is Logged In should be on one of their pages\")\n      }\n   }, []);\n\n    return \"useLoginStatus called\"\n}\n\nexport default useLoginStatus;\n\n\n\n/*\n  //Login Status \n  const navigate = useNavigate();\n  const { currentUser, setLoginState} = useContext(LoginContext);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn);\n    //if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\n    if(currentUserLoggedIn == 'null') {\n      setUserLoggedIn(false);\n      console.log(\"Profile Page: DONT BE HERE\");\n      //navigate(\"/login\");\n    } else {\n      setUserLoggedIn(true);\n      console.log(\"Profile Page: OK STAY HERE\")\n      console.log(currentUserLoggedIn + \" is currently logged in\");\n    }\n }, []);\n */\n\n/*\n\nimport { useDebugValue, useEffect, useState } from 'react'\n\nfunction useDisplayName() {\n    const [name, setName] = useState('name')\n\n    useEffect(() => {\n      const dataName = \"Frodo from database\"\n      setName(dataName)\n    }, []);\n\n    return name\n}\n\nexport default useDisplayName\n*/\n/*\nimport { useState, useEffect } from 'react';\n\nconst useFetchPosts = (postsURL) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(postsURL)\n      .then(res => {\n        if (!res.ok) { \n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch(err => {\n        setIsPending(false);\n        setError(err.message);\n      })\n    }, 1000);\n  }, [postsURL])\n\n  return { data, isPending, error };\n}\n \nexport default useFetchPosts;\n*/\n//DEBUG\n/*\nfunction useDisplayName() {\n    const [name, setName] = useState('name')\n\n    useEffect(() => {\n      const dataName = \"Frodo from database\"\n      setName(dataName)\n    }, []);\n\n    useDebugValue(name ?? '... loading!')\n\n    return name\n}\n*/\n","/Users/david/Desktop/David/www/kite/src/functions/hooks/useRefreshToken.js",["516"],"/Users/david/Desktop/David/www/kite/src/pages/PostsPage.js",["517","518","519","520","521","522","523","524"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { useNavigate  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport functions from \"../functions/functions\";\n\nimport PostList from '../components/posts/display/PostList';\nimport NewPost from '../components/posts/actions/NewPost';\n\nimport axios from 'axios'\n\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})  \n\n\nfunction PostsPage() {\n  \n  /*\n  //STEP 1: Check user is logged in\n    const loggedInMessage = useLoginStatus();\n\n    //STEP 3: Get the current User\n    var [currentUser, setCurrentUser] = useCurrentUser();\n  */\n\n  return (\n    <div className=\"user\">\n        <PostList groupID = { 70 } api = { axiosRequest }/>\n        <NewPost currentUser = \"davey\" groupID = { 70 } api = { axiosRequest }/>\n\n    </div>\n  );\n}\n\nexport default PostsPage;\n","/Users/david/Desktop/David/www/kite/src/components/posts/GroupPosts.js",[],"/Users/david/Desktop/David/www/kite/src/components/posts/display/PostList.js",[],"/Users/david/Desktop/David/www/kite/src/components/posts/actions/NewPost.js",["525","526"],"import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//FUNCTION 1: New Post API\nasync function makePostAPI(post) {\n    const postURL = \"http://localhost:3003/post/text\";\n    const response = await axios.post(postURL, post);\n\n    return response.data;\n} \n\nfunction NewPost({ groupID, currentUser, api }) {\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        //console.log(newPost)\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> {postCaption}</p>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPost;\n\n\n","/Users/david/Desktop/David/www/kite/src/components/posts/display/IndividualPost.js",[],"/Users/david/Desktop/David/www/kite/src/components/posts/actions/EditPost.js",["527","528","529","530"],"import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//WORKING ON EDIT POST\nconst api = axios.create({\n  \n})\n\nasync function editPostAPI(editedPost) {\n    const postURL = \"http://localhost:3003/post/caption/edit/\";\n    const response = await axios.post(postURL, editedPost);\n    console.log(\"editPostAPI(editedPost)\")\n    console.log(response.data)\n\n    return response.data;\n} \n\n//<EditPost api = { api } groupID = { groupID } post = { post } currentUser = {currentUser}  /> \nfunction EditPost({ api, groupID, post, currentUser}) {\n    const queryClient = useQueryClient();\n    const [newPostCaption, setPostCaption] = useState(post.postCaption)\n    \n    const { isLoading, mutate } = useMutation(editPostAPI, {\n        onSuccess: (returnedData) => {\n           //queryClient.invalidateQueries(['group-posts', groupID])\n           //console.log(\"returnedData\")\n           //console.log(returnedData.data[0].postID)\n           const updatedPostID = returnedData.data[0].postID;\n           const newPostCaption = returnedData.data[0].newPostCaption;\n\n           queryClient.setQueryData(['group-posts', groupID], (oldPostData) => {\n                var updatedPostData= structuredClone(oldPostData);\n\n                for (let i = 0; i < updatedPostData.length; i++) {\n                    if(updatedPostData[i].postID == updatedPostID) {\n                        updatedPostData[i].postCaption = newPostCaption;\n                    }\n                }\n    \n                return updatedPostData;\n            })\n        }\n    })\n    \n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var editedPost = {\n            postID: post.postID,\n            currentUser: currentUser,\n            newPostCaption: newPostCaption,\n        }\n\n        mutate(editedPost)\n        \n    }\n\n    return (\n    <div className=\"new-post\">\n         <form onSubmit={ handleSubmit }>\n            <label> </label> \n            <input name= \"postCaption\" type=\"text\" value={ newPostCaption } onChange={handleChange} />\n            <p> {newPostCaption}</p>\n            <button type=\"submit\"> Edit Post </button>\n        </form>\n    </div>\n    );\n}\n\n\nexport default EditPost;\n\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n\n})\n\nasync function editPostAPI(deletePost) {\n  const postURL = \"http://localhost:3003/post/delete/\"\n  const response = await axios.post(postURL, deletePost);\n  console.log(response.data)\n\n  return response.data;\n  } \n  \n\nconst EditPost = ({ groupID, currentUser, postID}) => {\n  const queryClient = useQueryClient();\n\n  const handleEditPost = (currentUser, postID) => {\n    var editPost = {\n        postID: postID,\n        currentUser: currentUser   \n    }\n    console.log(\"EDIT ME! \")\n    console.log(editPost)\n    //mutate(deletePost) \n  }\n\n    const { isLoading, mutate } = useMutation(editPostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n            //queryClient.invalidateQueries(['group-posts', groupID]) \n\n            var updatedQueryData = [];\n\n            //STEP 1: Remove post with this ID\n            var deletedPostID = returnedData.data[0].postID\n\n            for (let i = 0; i < originalQueryData.length; i++) {\n                if(originalQueryData[i].postID != deletedPostID) {\n                    updatedQueryData.push(originalQueryData[i])\n                }\n            }\n    \n            return updatedQueryData;\n            \n            })    \n        }\n      })\n      \n\n    return (     \n        <div className=\"\">\n            \n            <button type=\"submit\" className = \"\" onClick={() => { handleEditPost(currentUser, postID) }}>Edit Me</button>                 \n        </div>       \n        );\n    }  \n\nexport default EditPost;\n*/","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/Likes.js",["531","532","533","534","535","536"],"import React, { useState, useEffect } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\nimport LikePost from './LikePost';\nimport UnlikePost from './UnlikePost';\n\n\n\nasync function unlikePostAPI(likedPost) {\n    const postURL = \"http://localhost:3003/post/unlike\"\n    const response = await axios.post(postURL, likedPost);\n    //console.log(response)\n\n    return response.data;\n} \n\n\nconst Likes = ({groupID, post, currentUser}) => {\n    var postID = post.postID\n    const postLikes = post.postLikesArray;\n    const simplePostLikes = post.simpleLikesArray;\n \n\n    const handleUnLikePost = (postID, currentUser) => {\n        console.log(currentUser + \" you liked \" + postID)\n        var likedPost = {\n            postID: postID,\n            currentUser: currentUser   \n        }\n\n        unlikePostAPI(likedPost)\n    }\n\n    return (     \n        <div className=\"post\" >\n            <p className = \"post-text\">total Likes { postLikes.length } </p>  \n            <ul> { postLikes.map((postLike) => (\n              <li className= \"like-list\" key = { postLike.postLikeID } > { postLike.likedByUserName } </li> \n            ))}</ul>  \n\n\n            { simplePostLikes.includes(currentUser) ? \n                <UnlikePost groupID = { groupID } post = { post } currentUser = {currentUser} /> : \n                <LikePost groupID = { groupID } post = { post } currentUser = {currentUser} />\n            }\n        </div>       \n        );\n    }  \n\nexport default Likes;\n\n\n\n//FROM SIMPLE\n/*\nimport React, { useState, useEffect } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nvar groupID = 72;\n\nconst api = axios.create({\n  \n})\n\nasync function likePostAPI(likedPost) {\n    const postURL = \"http://localhost:3003/api/post/like\"\n    const response = await axios.post(postURL, likedPost);\n\n    return response.data;\n} \n\n\nconst Likes = (props) => {\n    const queryClient = useQueryClient();\n    const currentUser = props.currentUser;\n    const post = props.post;\n\n    const totalLikes = props.post.totalLikes;\n    const postLikesArray = props.post.postLikesArray;\n    const postID = props.post.postID;\n    \n\n    const handleLikePost = (postID, currentUser) => {\n        var likedPost = {\n            postID: postID,\n            likedBy: currentUser   \n        }\n\n        mutate(likedPost)\n        //console.log(currentUser + \" you liked \" + postID)\n    }\n    const { isLoading, mutate } = useMutation(likePostAPI, {\n        onSuccess: (returnedData) => {\n            //queryClient.invalidateQueries(['posts'])\n   \n            queryClient.setQueryData(['group', groupID], (originalQueryData) => {\n                console.log(\"returnedData\")\n                console.log(returnedData)\n                console.log(\"originalQueryData\")\n                console.log(originalQueryData)\n\n                //STEP 1: Get post ID of updated post and new like array \n                const postID = returnedData.postID;\n                const postLikesArray = returnedData.postLikesArray;\n                console.log(\"postID\")\n                console.log(postID)\n                console.log(\"postLikesArray\")\n                console.log(postLikesArray)  \n                var updatedQueryData = structuredClone(originalQueryData);\n\n                for (let i = 0; i < updatedQueryData.length; i++) {\n                    //console.log(updatedQueryData[i].postID + \" \" + postID)\n                    if(updatedQueryData[i].postID == postID) {\n                        console.log(\"Change this post! \" + postID)\n\n                        \n                        //Create the new array of users who have liked this\n                        updatedQueryData[i].postLikesArray = []\n                        updatedQueryData[i].postLikesArray = returnedData.postLikesArray\n                        updatedQueryData[i].totalLikes = returnedData.postLikesArray.length\n\n\n                    }\n                }\n\n                return updatedQueryData;\n                //return [data];\n            })\n        }\n    })\n\n    return (\n        <div className=\"\">\n            <p className = \"post-text\">total Likes { totalLikes } </p>  \n            <ul> { postLikesArray.map((likedBy) => (\n                <li key = { likedBy}  > { likedBy } </li> \n            ))}</ul>\n            { postLikesArray.includes(currentUser) ? \n                <button type=\"submit\" className = \"post-liked\" onClick={() => { handleLikePost(postID, currentUser) }}>Like</button>: \n                <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like</button>\n            }\n        </div>\n        );\n    } \n  \nexport default Likes;\n*/\n\n\n\n\n//CODE\n/*\nimport React, { useState, useEffect } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nvar groupID = 72;\n\n\nconst api = axios.create({\n  \n})\n\nasync function likePostAPI(likedPost) {\n    const postURL = \"http://localhost:3003/api/post/like\"\n    const response = await axios.post(postURL, likedPost);\n\n    return response.data;\n} \n\n\nconst Likes = (props) => {\n    const queryClient = useQueryClient();\n    const currentUser = props.currentUser;\n    const post = props.post;\n\n    const totalLikes = props.post.totalLikes;\n    const postLikesArray = props.post.postLikesArray;\n    const postID = props.post.postID;\n    \n\n    const handleLikePost = (postID, currentUser) => {\n        var likedPost = {\n            postID: postID,\n            likedBy: currentUser   \n        }\n\n        mutate(likedPost)\n        //console.log(currentUser + \" you liked \" + postID)\n    }\n    const { isLoading, mutate } = useMutation(likePostAPI, {\n        onSuccess: (returnedData) => {\n            //queryClient.invalidateQueries(['posts'])\n   \n            queryClient.setQueryData(['group', groupID], (originalQueryData) => {\n                console.log(\"returnedData\")\n                console.log(returnedData)\n                console.log(\"originalQueryData\")\n                console.log(originalQueryData)\n\n                //STEP 1: Get post ID of updated post and new like array \n                const postID = returnedData.postID;\n                const postLikesArray = returnedData.postLikesArray;\n                console.log(\"postID\")\n                console.log(postID)\n                console.log(\"postLikesArray\")\n                console.log(postLikesArray)  \n                var updatedQueryData = structuredClone(originalQueryData);\n\n                for (let i = 0; i < updatedQueryData.length; i++) {\n                    //console.log(updatedQueryData[i].postID + \" \" + postID)\n                    if(updatedQueryData[i].postID == postID) {\n                        console.log(\"Change this post! \" + postID)\n\n                        \n                        //Create the new array of users who have liked this\n                        updatedQueryData[i].postLikesArray = []\n                        updatedQueryData[i].postLikesArray = returnedData.postLikesArray\n                        updatedQueryData[i].totalLikes = returnedData.postLikesArray.length\n\n\n                    }\n                }\n\n                return updatedQueryData;\n                //return [data];\n            })\n        }\n    })\n\n    return (\n        <div className=\"\">\n            <p className = \"post-text\">total Likes { totalLikes } </p>  \n            <ul> { postLikesArray.map((likedBy) => (\n                <li key = { likedBy}  > { likedBy } </li> \n            ))}</ul>\n            { postLikesArray.includes(currentUser) ? \n                <button type=\"submit\" className = \"post-liked\" onClick={() => { handleLikePost(postID, currentUser) }}>Like</button>: \n                <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like</button>\n            }\n        </div>\n        );\n    } \n  \nexport default Likes;\n*/\n/*\n//WORKS\nconst Likes = (props) => {\n    const handleLike = props.handleLike;\n    const currentUser = props.currentUser;\n    const post = props.post;\n\n    const totalLikes = props.post.totalLikes;\n    const postLikesArray = props.post.postLikesArray;\n    const postID = props.post.postID;\n\n    return (\n        <div className=\"\">\n            <p className = \"post-text\">total Likes { totalLikes } </p>  \n            <ul> { postLikesArray.map((likedBy) => (\n                <li key = { likedBy}  > { likedBy } </li> \n            ))}</ul>\n            { postLikesArray.includes(currentUser) ? \n                <button type=\"submit\" className = \"post-liked\" onClick={() => { handleLike(post) }}>Like</button>: \n                <button type=\"submit\" className = \"\" onClick={() => { handleLike(post) }}>Like</button>\n            }\n        </div>\n        );\n    } \n  \nexport default Likes;\n*/\n/*\nconst { isLoading, mutate } = useMutation(likePost, {\n    onSuccess: (data) => {\n        queryClient.invalidateQueries(['group', groupID])\n        \n        const newPost = data;\n\n        queryClient.setQueryData(['group', groupID], (oldPostData) => {\n            oldPostData.unshift(newPost);\n\n            return oldPostData;\n        })\n        \n    }\n})\n*/\n\n\n/*\nconst [youLikedPost, setYouLikedPost] = useState(false);\nYou liked { youLikedPost ? \"yep!\" : \"nope\"} | \n    //Maybe don't need \n    useEffect(() => {\n        if(postLikesArray.includes(currentUser)) {\n            setYouLikedPost(true)\n        } else {\n            setYouLikedPost(false)\n        }   \n    }, [youLikedPost]); \nconsole.log(currentUser)\nconsole.log(postLikesArray)\nconsole.log(postLikesArray.includes(currentUser))\n*/\n\n/*\n\n    /*\n\n\n  for (let i = 0; i < posts.length; i++) {\n    //console.log(posts[i].postID + \" \" + postID)\n    if(posts[i].postID == postID) {\n      if(posts[i].postLikesArray.includes(currentUser)) {\n        console.log(currentUser + \" Had already liked this post so we will unlike! \")\n        const index = posts[i].postLikesArray.indexOf(currentUser);\n        if (index > -1) { \n          posts[i].postLikesArray.splice(index, 1); \n        }\n        posts[i].totalLikes = posts[i].postLikesArray.length\n      } else {\n        console.log(currentUser + \" Liked this post!\")\n        posts[i].postLikesArray.push(currentUser);\n        posts[i].totalLikes = posts[i].postLikesArray.length\n\n      }\n      posts[i].postLikesArray.includes(currentUser)\n    }\n    res.json(posts[i])\n    return \n  } \n\n    \n    const { isLoading, mutate } = useMutation(likePostAPI, {\n        onSuccess: (oldData) => {\n            //queryClient.invalidateQueries(['group', groupID])\n            console.log(oldData)\n        }\n    })\n*/\n            //const postID = 5;\n\n            //var newData = structuredClone(oldData);\n            \n            /*\n            queryClient.setQueryData(['group', groupID], (oldPostData) => {\n                return oldPostData;\n            })\n\n            */\n            //Works\n            /*\n            queryClient.setQueryData(['group', groupID], (oldData) => {\n\n                for (let i = 0; i < oldData.length; i++) {\n                    if(posts[i].postID == postID) {\n                        console.log(\"updated post \")\n                        console.log(posts[i])\n                    }      \n                } \n              return newData;  \n            })\n            */\n                    /*\n                    const oldObj = {a: {b: 10}};\n                    const newObj = {...oldObj};\n                      if(posts[i].postLikesArray.includes(currentUser)) {\n                        console.log(currentUser + \" Had already liked this post so we will unlike! \")\n                        const index = posts[i].postLikesArray.indexOf(currentUser);\n                        if (index > -1) { \n                          posts[i].postLikesArray.splice(index, 1); \n                        }\n                        posts[i].totalLikes = posts[i].postLikesArray.length\n                \n                      } else {\n                        console.log(currentUser + \" Liked this post!\")\n                        posts[i].postLikesArray.push(currentUser);\n                        posts[i].totalLikes = posts[i].postLikesArray.length\n                \n                      }\n                      posts[i].postLikesArray.includes(currentUser)\n                      */\n                    \n\n                //return oldData;\n      \n            \n\n            /*\n                await queryClient.cancelQueries({ queryKey: ['todos', newTodo.id] })\n\n                // Snapshot the previous value\n                const previousTodo = queryClient.getQueryData(['todos', newTodo.id])\n\n                // Optimistically update to the new value\n                queryClient.setQueryData(['todos', newTodo.id], newTodo)\n\n                // Return a context with the previous and new todo\n                return { previousTodo, newTodo }\n\n            queryClient.setQueryData(\n                ['posts', { id }],\n                //this is the way\n                (oldData) => oldData ? {\n                    ...oldData,\n                    title: 'my new post title'\n                } : oldData\n            )\n\n              */\n            /*\n            const newPost = data;\n\n            queryClient.setQueryData(['group', groupID], (oldPostData) => {\n                oldPostData.unshift(newPost);\n\n                return oldPostData;\n            })\n            */\n        \n    \n\n/*\n            <LikePost post = { post } currentUser = {currentUser} />\n<Likes post = { post } currentUser = {currentUser}  />   \n<li key = { postLikes.postLikeID }  > { postLikes.likedByName } </li> \n          <ul> { postLikesArray.map((postLikes) => (\n                <li key = { postLikes.likedByName }  > { postLikes.likedByName } </li> \n            ))}</ul>        \n\n<ul> { postLikesArray.map((likedBy) => (\n                <li key = { likedBy}  > { likedBy } </li> \n            ))}</ul>    \n\n\"postLikes\": [\n    {\n        \"postLikeID\": 92,\n        \"postID\": 70,\n        \"likedByName\": \"sam\",\n        \"likedByImage\": \"12.jpg\",\n        \"likedByFirstName\": \"David\",\n        \"likedByLastName\": \"Vasquez\"\n    }\n]*/\n\n","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/LikePost.js",["537","538","539","540"],"import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n\n//Create the API to call \nconst api = axios.create({\n\n})\n\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\"\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n//COMPONENT: Like Post  \nfunction LikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  //const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser,\n        groupID: groupID\n    }\n\n    mutate(likedPost)\n\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n        console.log(returnedData)\n        \n          //STEP 1: Get post ID of updated post and new like array \n          var updatedQueryData = structuredClone(originalQueryData);\n          console.log(\"updatedQueryData\")\n          console.log(updatedQueryData)\n          console.log(\"updatedQueryData\")\n\n          const postID = returnedData.postID;\n          const currentUser = returnedData.currentUser;\n\n          for (let i = 0; i < updatedQueryData.length; i++) {\n\n              if(updatedQueryData[i].postID == postID) {\n\n                  var postLike = returnedData.newLike[0];\n\n                  //Create the new array of users who have liked this\n                  updatedQueryData[i].postLikesArray.push(postLike)\n                  updatedQueryData[i].simpleLikesArray.push(currentUser)\n                  updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n              }\n          }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/UnlikePost.js",["541","542","543","544","545"],"import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n\n})\n\nasync function unlikePostAPI(unlikePost) {\n  const postURL = \"http://localhost:3003/post/unlike\"\n  const response = await axios.post(postURL, unlikePost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n\nfunction UnlikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n  const handleUnlikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser   \n    }\n\n    mutate(likedPost)\n  }\n\n  const { isLoading, mutate } = useMutation(unlikePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n      console.log(returnedData)\n      //queryClient.invalidateQueries(['group-posts', groupID]) \n      var updatedQueryData = structuredClone(originalQueryData);\n      const postID = returnedData.postID;\n      const currentUser = returnedData.currentUser;\n\n      for (let i = 0; i < updatedQueryData.length; i++) {\n        if(updatedQueryData[i].postID == postID) {\n          \n          //Remove the Like from the Complex Like\n          let newPostLikesArray = updatedQueryData[i].postLikesArray.filter(function( obj ) {\n            return obj.likedByUserName !== currentUser;\n          });\n\n          //Remove the Like from the Simple Like\n          let newSimpleLikesArray = [];\n          \n          for (let j = 0; j < updatedQueryData[i].simpleLikesArray.length; j++) {\n            if(updatedQueryData[i].simpleLikesArray[j] != currentUser){\n              newSimpleLikesArray.push(updatedQueryData[i].simpleLikesArray[j])\n            }\n          }\n            console.log(updatedQueryData[i].postLikesArray);\n            console.log(newPostLikesArray);\n\n            console.log(updatedQueryData[i].simpleLikesArray);\n            console.log(newSimpleLikesArray);\n\n            updatedQueryData[i].postLikesArray = []\n            updatedQueryData[i].postLikesArray = newPostLikesArray\n\n            updatedQueryData[i].simpleLikesArray = []\n            updatedQueryData[i].simpleLikesArray = newSimpleLikesArray\n\n          }\n      }\n      \n      return updatedQueryData;\n    })\n      \n    }\n  })\n\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleUnlikePost(postID, currentUser) }}>UnLike Me</button>\n    </div>\n  );\n}\n\n\nexport default UnlikePost;\n\n\n\n//\n/*\n\n\n\nfunction LikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser   \n    }\n\n    mutate(likedPost)\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n\n        //STEP 1: Get post ID of updated post and new like array \n        var updatedQueryData = structuredClone(originalQueryData);\n        const postID = returnedData.postID;\n        const currentUser = returnedData.currentUser;\n\n        for (let i = 0; i < updatedQueryData.length; i++) {\n\n            if(updatedQueryData[i].postID == postID) {\n\n                var postLike = returnedData.newLike[0];\n\n                //Create the new array of users who have liked this\n                updatedQueryData[i].postLikesArray.push(postLike)\n                updatedQueryData[i].simpleLikesArray.push(currentUser)\n                updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n            }\n        }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n\n    </div>\n  );\n}\n\n\nexport default LikePost;\n*/\n","/Users/david/Desktop/David/www/kite/src/hooks/useDisplayName.js",["546"],"/Users/david/Desktop/David/www/kite/src/functions/apiFunctions.js",["547","548","549","550","551"],"import axios from 'axios'\nimport functions from \"./functions\";\n\nfunction getAPI() {\n    const axiosRequest = axios.create({\n        withCredentials: true\n      })  \n    \n      axiosRequest.interceptors.response.use(function (response) {\n        // Any status code that lie within the range of 2xx cause this function to trigger\n        //console.log(\"__________________________\")\n        //console.log(\"INTERCEPTOR: Looks good! \")\n        //console.log(\"Status: 200\")\n        //console.log(\"Message you are logged in\")\n        //console.log(\"__________________________\")\n\n        return response;\n      }, function (error) {\n        console.log(error.response.status)\n        console.log(error.response)\n        \n        //STATUS 498:  Need to get a access token\n        if(error.response.status == 498) {\n          console.log(\"__________________________\")\n          console.log(\"INTERCEPTOR 498: We got a 498 so we need a new access token. Will send refresh token \")\n          console.log(\"Status: 498\")\n          const refreshURL = \"http://localhost:3003/refresh/tokens\"\n          const refreshOutcome = functions.refreshToken();\n          console.log(\"Message: We refreshed the access token!\")\n          console.log(\"__________________________\")\n        } \n      \n        //STATUS 440: Logout User\n        if(error.response.status == 440) {\n          console.log(\"__________________________\")\n          console.log(\"INTERCEPTOR 440: We got a 440 we couldn't refresh the access token because the refresh token was no good need to logout the user\")  \n          console.log(\"Status: 440\")\n          console.log(\"Message: Logout the user!\")\n          localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\")); \n          window.location.href = '/login';\n          console.log(\"__________________________\")\n        }\n        \n        return Promise.reject(error);\n        \n      });\n\n      return axiosRequest;\n}\n\nexport default { getAPI };\n","/Users/david/Desktop/David/www/kite/src/components/posts/actions/DeletePost.js",["552","553","554","555"],"import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n\n})\n\nasync function deletePostAPI(deletePost) {\n  const postURL = \"http://localhost:3003/post/delete/\"\n  const response = await axios.post(postURL, deletePost);\n  console.log(response.data)\n\n  return response.data;\n  } \n  \n\nconst DeletePost = ({ groupID, currentUser, postID}) => {\n  const queryClient = useQueryClient();\n\n  const handleDeletePost = (currentUser, postID) => {\n    var deletePost = {\n        postID: postID,\n        currentUser: currentUser   \n    }\n    console.log(\"DELETE \")\n    console.log(deletePost)\n    mutate(deletePost) \n  }\n\n    const { isLoading, mutate } = useMutation(deletePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n            //queryClient.invalidateQueries(['group-posts', groupID]) \n\n            var updatedQueryData = [];\n\n            //STEP 1: Remove post with this ID\n            var deletedPostID = returnedData.data[0].postID\n\n            for (let i = 0; i < originalQueryData.length; i++) {\n                if(originalQueryData[i].postID != deletedPostID) {\n                    updatedQueryData.push(originalQueryData[i])\n                }\n            }\n    \n            return updatedQueryData;\n            \n            })    \n        }\n      })\n      \n\n    return (     \n        <div className=\"\" >\n            <button type=\"submit\" className = \"\" onClick={() => { handleDeletePost(currentUser, postID) }}>Delete Me</button>                 \n        </div>       \n        );\n    }  \n\nexport default DeletePost;\n","/Users/david/Desktop/David/www/kite/src/components/comments/display/IndividualComment.js",[],"/Users/david/Desktop/David/www/kite/src/components/notifications/NotificationList.js",[],["556","557"],"/Users/david/Desktop/David/www/kite/src/components/notifications/IndividualNotification.js",[],"/Users/david/Desktop/David/www/kite/src/pages/UsersPage.js",["558","559"],"import React from 'react';\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport apiFunctions from '../functions/apiFunctions';\nimport LogoutUser from '../components/login/LogoutUser';\n//import useCurrentUser from '../hooks/useCurrentUser';\nimport useCurrentUser from '../hooks/useCurrentUser';\n\nimport MyFriends from '../components/friends/MyFriends';\nimport AllUsers from '../components/users/display/AllUsers';\n\nconst axiosRequest = apiFunctions.getAPI();\n\nfunction UsersPage() {\n\n    //STEP 1: Check user is logged in \n    const loggedInMessage = useLoginStatus();\n\n    //STEP 2: Get the current User\n    var [currentUser, setCurrentUser] = useCurrentUser();\n\n  \n  return (\n    <div className=\"user\">\n        <MyFriends currentUser = { currentUser} api = { axiosRequest } /> \n        <AllUsers currentUser = { currentUser} api = { axiosRequest } /> \n        <LogoutUser />\n    </div>\n  );\n}\n\n\nexport default UsersPage;\n\n","/Users/david/Desktop/David/www/kite/src/components/friends/MyFriends.js",["560","561","562"],"import React from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\n\nimport SimpleProfile from '../users/display/SimpleProfile';\n\nasync function getYourFriends(currentUser, api) {\n  if(currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n   \n  const myFriendsURL = \"http://localhost:3003/friends/\" + currentUser; \n  const { data } = await api.get(myFriendsURL)\n  //console.log(data)\n  return data\n} \n\n\nconst MyFriends = (props) => {\n    const currentUser = props.currentUser;\n    const api = props.api;\n\n    const { isLoading, data, isError, error  } = useQuery(['my-friends-', currentUser], () => getYourFriends(currentUser, api), \n        { refetchInterval: 10000000 }\n    )\n\n    return (\n        <div>\n            { isLoading && <div> loading... </div>}\n\n            <p> My Friends {currentUser}  </p>\n            {data && data.data.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.friendID }/>\n             ))}\n            {data && data.data.map((friend) => (\n                console.log(\"friend\")\n             ))}\n        </div>\n    )\n}\n\nexport default MyFriends;\n\n/*\n\n            { isError && <div> There was an error fetching the posts { error.message } </div>}\n            { data && console.log(data.friendsArray)}\n\n            \n            {data && data.friendsArray.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.friendID }/>\n             ))}\n\n    var groups = data;\n\n    return (\n    <div className=\"groups\">\n        {data && groups.groups.map(group => (\n            <div className=\"group\" key={ group.groupID } >\n                <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n            </div>\n        ))}\n    </div>\n    );\n    }\n    \n\n//import SimpleProfile from '../../users/SimpleProfile';\n\n//import apiFunctions from '../functions/apiFunctions';\n//import useLoginStatus from '../functions/hooks/useLoginStatus';\n\n//const axiosRequest = apiFunctions.getAPI();\n\n<SimpleProfile />  \n*/","/Users/david/Desktop/David/www/kite/src/components/users/UserProfile.js",[],"/Users/david/Desktop/David/www/kite/src/components/friends/PendingFriends.js",["563"],"import React from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\n\nimport SimpleProfile from '../users/profiles/SimpleProfile';\n\nasync function getYourFriends(currentUser, api) {\n  if(currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n  //http://localhost:3003/friends/pending/davey/ \n  const myPendingFriendsURL = \"http://localhost:3003/friends/pending/\" + currentUser; \n  const { data } = await api.get(myPendingFriendsURL)\n\n  return data\n} \n\n\nconst MyFriends = (props) => {\n    const currentUser = props.currentUser;\n    const api = props.api;\n\n    const { isLoading, data, isError, error  } = useQuery(['pending-friends', currentUser], () => getYourFriends(currentUser, api), \n        { refetchInterval: 10000000 }\n    )\n\n    return (\n        <div>\n            { isLoading && <div> loading... </div>}\n            { isError && <div> There was an error fetching the posts { error.message } </div>}\n            { data && console.log(data.friendsArray)}\n            <p> My Pending Friends {currentUser}  </p>\n            {data && data.friendsArray.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.friendID }/>\n             ))}\n        </div>\n    )\n}\n\nexport default MyFriends;\n",["564","565"],"/Users/david/Desktop/David/www/kite/src/components/users/display/AllUsers.js",[],"/Users/david/Desktop/David/www/kite/src/components/users/display/SimpleProfile.js",[],"/Users/david/Desktop/David/www/kite/src/components/friends/UserFriends.js",["566"],"/Users/david/Desktop/David/www/kite/src/pages/IndividualFriendPage.js",["567","568"],"/Users/david/Desktop/David/www/kite/src/pages/FriendPage.js",["569","570","571","572","573","574","575"],"import { useParams } from \"react-router\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate, Link  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\n//import { refreshToken } from \"../functions/functions\";\n//import GroupPosts from '../components/posts/GroupPosts';\nimport FriendList from '../components/friends/FriendList';\nimport apiFunctions from '../functions/apiFunctions';\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport useCurrentUser from '../hooks/useCurrentUser';\n\nconst axiosRequest = apiFunctions.getAPI();\n\nconst FriendPage = (props) => {\n\n    //STEP 1: Get friend name from URL\n    const { friendName } = useParams()\n\n    //STEP 2: Check user is logged in \n    const loggedInMessage = useLoginStatus();\n\n    //STEP 3: Get the current User\n    var [currentUser, setCurrentUser] = useCurrentUser();\n\n    return (\n        <div>\n          <FriendList currentUser = { currentUser } friendName = { friendName } api = { axiosRequest } />\n          <Link className=\"\" to=\"/users\"> My Profile </Link>   \n        </div>\n    )\n}\n\nexport default FriendPage;\n\n\n","/Users/david/Desktop/David/www/kite/src/components/friends/FriendList.js",[],"/Users/david/Desktop/David/www/kite/src/hooks/useCurrentUser.js",[],"/Users/david/Desktop/David/www/kite/src/components/friends/actions/AddFriend.js",["576","577","578","579"],"import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//PART 1: API Call\nasync function addFriendAPI(addFriendRequest) {\n    const requestAPI = addFriendRequest.api\n    const requestBody = addFriendRequest.addFriendBody\n    console.log(\"addFriend\")\n    console.log(requestBody)\n    console.log(\"addFriend\")\n    const addFriendURL = \"http://localhost:3003/friend/request/\"\n    const response = await requestAPI.post(addFriendURL, requestBody);\n    //console.log(response.data)\n  \n    return response.data;\n} \n\n//COMPONENT: Add Friend \nconst AddFriend = ({api, currentUser, friend}) => {\n    const queryClient = useQueryClient();\n\n    //Button: Add a Friend on Button Click \n    const handleAddFriend = (api, currentUser, friendName) => {\n        //console.log(currentUser + \" wants to add \" + friend.friendName + \" as a friend!\")\n        var addFriendBody = {\n            masterSite: \"kite\",\n            currentUser: currentUser,\n            addFriendName: friendName\n        }\n\n        var addFriendRequest = {\n            api: api,\n            addFriendBody: addFriendBody\n        }\n\n        mutate(addFriendRequest)\n    }\n\n    //Action: Use React Query to make call\n    const { isLoading, mutate } = useMutation(addFriendAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['all-users'], (originalQueryData) => {\n            var updatedQueryData = structuredClone(originalQueryData);\n            const statusCode = returnedData.statusCode\n            const currentUser = returnedData.data.currentUser\n            const newFriend = returnedData.data.friendName\n \n            //Loop over all the users and update the new friend to be request pending\n            for (let i = 0; i < updatedQueryData.data.length; i++) {\n                //console.log(updatedQueryData.data[i].friendName + \" \" + newFriend)\n                if(updatedQueryData.data[i].friendName.toUpperCase() === newFriend.toUpperCase()) {\n                    //console.log(\"update this one!\")\n                    updatedQueryData.data[i].friendshipKey = \"request_pending\"\n\n                }\n            }\n            \n            return updatedQueryData;\n    \n            })\n                \n        }\n      })\n\n    return (     \n        <div className=\"\" >\n            <button type=\"submit\" className = \"\" onClick={() => { handleAddFriend(api, currentUser, friend.friendName) }}>Add a Friend!</button>\n        </div>       \n        );\n    }  \n\nexport default AddFriend;\n\n\n\n\n\n//RESPONSE\n\n//WORKS NO REACT QUERY\n/*\nimport React from 'react';\n//import { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//PART 1: API Call\nasync function addFriendAPI(api, currentUser, friend) {\n    const addFriendURL = \"http://localhost:3003/friend/request/\"\n    \n    const addFriendBody = {\n        \"masterSite\": \"kite\",\n        \"currentUser\": currentUser,\n        \"addFriendName\": friend.friendName           \n    }\n\n    //console.log(addFriendBody)\n    \n    //const response = await axios.post(postURL, likedPost);\n    const response = await api.post(addFriendURL, addFriendBody);\n    console.log(response.data)\n  \n    return response.data;\n} \n\n\n\nconst handleAddFriend = (api, currentUser, friend) => {\n    console.log(currentUser + \" wants to add \" + friend.friendName + \" as a friend!\")\n    addFriendAPI(api, currentUser, friend)\n    /*\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser,\n        groupID: groupID\n    }\n    */\n   /*\n    //mutate(likedPost)\n\n}\n\n\nconst AddFriend = ({api, currentUser, friend}) => {\n    return (     \n        <div className=\"\" >\n            <button type=\"submit\" className = \"\" onClick={() => { handleAddFriend(api, currentUser, friend) }}>Add a Friend!</button>\n        </div>       \n        );\n    }  \n\nexport default AddFriend;\n*/\n\n//EXAMPLE\n\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n\n})\n\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\"\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n\nfunction LikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser,\n        groupID: groupID\n    }\n\n    mutate(likedPost)\n\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n        console.log(returnedData)\n        //STEP 1: Get post ID of updated post and new like array \n        var updatedQueryData = structuredClone(originalQueryData);\n        const postID = returnedData.postID;\n        const currentUser = returnedData.currentUser;\n\n        for (let i = 0; i < updatedQueryData.length; i++) {\n\n            if(updatedQueryData[i].postID == postID) {\n\n                var postLike = returnedData.newLike[0];\n\n                //Create the new array of users who have liked this\n                updatedQueryData[i].postLikesArray.push(postLike)\n                updatedQueryData[i].simpleLikesArray.push(currentUser)\n                updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n            }\n        }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n\n*/","/Users/david/Desktop/David/www/kite/src/components/friends/actions/FriendInvite.js",["580","581","582"],"import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nimport AcceptFriendInvite from './AcceptFriendInvite';\nimport DeclineFriendInvite from './DeclineFriendInvite';\n\n//COMPONENT: Friend Request\nconst FriendInvite = ({api, currentUser, friend}) => {\n    return (     \n        <div className=\"\" >\n            <p> Friendship Invite Pending (you can accept or decline) - \"invite_pending\"</p>\n            <AcceptFriendInvite api = { api } friend = { friend } currentUser = {currentUser}  />\n            <p> </p> \n            <DeclineFriendInvite api = { api } friend = { friend } currentUser = {currentUser}  />\n        </div>       \n        \n        );\n    }  \n\nexport default FriendInvite;\n\n\n\n","/Users/david/Desktop/David/www/kite/src/components/friends/actions/FriendRequest.js",["583","584","585","586"],"import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\n\nimport axios from 'axios'\n\n//PART 1: API Call\nasync function cancelFriendRequestAPI(cancelFriendRequest) {\n    const requestAPI = cancelFriendRequest.api\n    const requestBody = cancelFriendRequest.cancelFriendRequestBody\n\n    const cancelFriendRequestURL = \"http://localhost:3003/friend/cancel/\"\n    const response = await requestAPI.post(cancelFriendRequestURL, requestBody);\n    //console.log(response.data)\n  \n    return response.data;\n} \n\n//COMPONENT: Friend Request\nconst FriendRequest = ({api, currentUser, friend}) => {\n    const queryClient = useQueryClient();\n\n    //Button: Add a Friend on Button Click \n    const handleCancelFriendRequest = (api, currentUser, friendName) => {\n        console.log(currentUser + \" wants to cancel \" + friend.friendName + \" as a friend!\")\n        var cancelFriendRequestBody = {\n            masterSite: \"kite\",\n            currentUser: currentUser,\n            friendName: friendName\n        }\n\n        var cancelFriendRequest = {\n            api: api,\n            cancelFriendRequestBody: cancelFriendRequestBody\n        }\n\n        mutate(cancelFriendRequest)\n       \n    }\n\n    //Action: Use React Query to make call\n    const { isLoading, mutate } = useMutation(cancelFriendRequestAPI, {\n        onSuccess: (returnedData) => {\n            queryClient.setQueryData(['all-users'], (originalQueryData) => {\n            var updatedQueryData = structuredClone(originalQueryData);\n            const statusCode = returnedData.statusCode\n            const currentUser = returnedData.data.currentUser\n            const newFriend = returnedData.data.friendName\n\n            //Loop over all the users and update the new friend to be request pending\n            for (let i = 0; i < updatedQueryData.data.length; i++) {\n                //console.log(updatedQueryData.data[i].friendName + \" \" + newFriend)\n                if(updatedQueryData.data[i].friendName.toUpperCase() === newFriend.toUpperCase()) {\n                    updatedQueryData.data[i].friendshipKey = \"not_friends\"\n                }\n            }\n            \n            return updatedQueryData;\n    \n            })\n        \n        }\n        })\n\n    return (     \n        <div className=\"\" >\n            <p> Friend Request </p>\n            <p> Friendship Request Pending (they have to response and you can cancel) - \"request_pending\"</p>\n            <button type=\"submit\" className = \"\" onClick={() => { handleCancelFriendRequest(api, currentUser, friend.friendName) }}>Cancel</button>\n        </div>       \n        );\n    }  \n\nexport default FriendRequest;\n\n\n\n","/Users/david/Desktop/David/www/kite/src/components/friends/actions/AcceptFriendInvite.js",["587","588","589"],"import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//PART 1: API Call\nasync function acceptFriendInviteAPI(acceptFriendInvite) {\n    const requestAPI = acceptFriendInvite.api\n    const requestBody = acceptFriendInvite.acceptFriendInviteBody\n\n    const acceptFriendInviteURL = \"http://localhost:3003/friend/accept/\"\n    const response = await requestAPI.post(acceptFriendInviteURL, requestBody);\n    //console.log(response.data)\n  \n    return response.data;\n} \n\n\n//COMPONENT: Friend Request\nconst AcceptFriendInvite = ({api, currentUser, friend}) => {\n    const queryClient = useQueryClient();\n\n    //Button: Add a Friend on Button Click \n    const handleAcceptFriendInvite = (api, currentUser, friendName) => {\n        console.log(currentUser + \" wants to accept \" + friendName + \" as a friend!\")\n        \n        var acceptFriendInviteBody = {\n            masterSite: \"kite\",\n            currentUser: currentUser,\n            friendName: friendName\n        }\n\n        var acceptFriendInvite = {\n            api: api,\n            acceptFriendInviteBody: acceptFriendInviteBody\n        }\n\n        mutate(acceptFriendInvite)\n       \n    }\n\n    //Action: Use React Query to make call\n    const { isLoading, mutate } = useMutation(acceptFriendInviteAPI, {\n        onSuccess: (returnedData) => {\n            queryClient.setQueryData(['all-users'], (originalQueryData) => {\n            var updatedQueryData = structuredClone(originalQueryData);\n            const currentUser = returnedData.data.currentUser\n            const newFriend = returnedData.data.friendName\n    \n            //Loop over all the users and update the new friend to be request pending\n            for (let i = 0; i < updatedQueryData.data.length; i++) {\n                //console.log(updatedQueryData.data[i].friendName + \" \" + newFriend)\n                if(updatedQueryData.data[i].friendName.toUpperCase() === newFriend.toUpperCase()) {\n                    updatedQueryData.data[i].friendshipKey = \"friends\"\n                }\n            }\n            \n            return updatedQueryData;\n    \n            })\n        \n        }\n    })\n\n            \n    return (     \n        <div className=\"\" >\n            <button type=\"submit\" className = \"\" onClick={() => { handleAcceptFriendInvite(api, currentUser, friend.friendName) }}>Accept</button>\n        </div>       \n        );\n    }  \n\nexport default AcceptFriendInvite;\n","/Users/david/Desktop/David/www/kite/src/components/friends/actions/DeclineFriendInvite.js",["590","591","592"],"import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n\n//PART 1: API Call\nasync function declineFriendInviteAPI(declineFriendInvite) {\n    const requestAPI = declineFriendInvite.api\n    const requestBody = declineFriendInvite.declineFriendInviteBody\n\n    const declineFriendInviteURL = \"http://localhost:3003/friend/decline/\"\n    const response = await requestAPI.post(declineFriendInviteURL, requestBody);\n    //console.log(response.data)\n  \n    return response.data;\n} \n\n//COMPONENT: Friend Request\nconst DeclineFriendInvite = ({api, currentUser, friend}) => {\n    const queryClient = useQueryClient();\n\n    //Button: Add a Friend on Button Click \n    const handleDeclineFriendInvite = (api, currentUser, friendName) => {\n        console.log(currentUser + \" wants to decline \" + friendName + \" as a friend!\")\n\n        var declineFriendInviteBody = {\n            masterSite: \"kite\",\n            currentUser: currentUser,\n            friendName: friendName\n        }\n\n        var declineFriendInvite = {\n            api: api,\n            declineFriendInviteBody: declineFriendInviteBody\n        }\n\n        mutate(declineFriendInvite)\n    \n       \n    }\n\n    //Action: Use React Query to make call\n    const { isLoading, mutate } = useMutation(declineFriendInviteAPI, {\n        onSuccess: (returnedData) => {\n            queryClient.setQueryData(['all-users'], (originalQueryData) => {\n            var updatedQueryData = structuredClone(originalQueryData);\n            const currentUser = returnedData.data.currentUser\n            const newFriend = returnedData.data.friendName\n    \n            //Loop over all the users and update the new friend to be request pending\n            for (let i = 0; i < updatedQueryData.data.length; i++) {\n                //console.log(updatedQueryData.data[i].friendName + \" \" + newFriend)\n                if(updatedQueryData.data[i].friendName.toUpperCase() === newFriend.toUpperCase()) {\n                    updatedQueryData.data[i].friendshipKey = \"not_friends\"\n                }\n            }\n            \n            return updatedQueryData;\n    \n            })\n        \n        }\n    })\n\n    return (     \n        <div className=\"\" >\n            <button type=\"submit\" className = \"\" onClick={() => { handleDeclineFriendInvite(api, currentUser, friend.friendName) }}>Decline</button>\n       </div>       \n        );\n    }  \n\nexport default DeclineFriendInvite;\n","/Users/david/Desktop/David/www/kite/src/components/groups/GroupUsers.js",["593","594","595","596","597"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\n\nasync function getGroupUsers(groupID, api) {\n  const groupUsersURL = \"http://localhost:3003/group/users/\" + groupID; \n  const { data } = await api.get(groupUsersURL)\n\n  return data\n} \n\n\nconst GroupUsers = (props) => {\n    const groupID = props.groupID;\n    const currentUser = props.currentUser;\n    const api = props.api;\n  \n    const { isLoading, data, isError, error  } = useQuery(['group-users-', groupID], () => getGroupUsers(groupID, api), \n        { refetchInterval: 10000000 }\n    )\n\n    return (\n        <div className=\"groups\">\n            <p><b> Active Group Users </b></p>\n            { isLoading && <div> loading... </div>}\n            { isError && <div> There was an error fetching the posts { error.message } </div>}\n     \n            {data && data.data.activeGroupUsers.map((user) => (\n                <p key={user}>{user}</p>\n            ))}\n                 \n            <p><b> Pending Group Users </b></p>\n            {data && data.data.pendingGroupUsers.map((user) => (\n                <p key={user}>{user}</p>\n            ))}\n        </div>\n    );\n}\n  \nexport default GroupUsers;\n\n/*\n//Group Users\n{ data && console.log(data.data.activeGroupUsers)}\n{ data && console.log(data.data.pendingGroupUsers)}\n\n*/","/Users/david/Desktop/David/www/kite/src/functions/hooks/useCurrentUser.js",[],"/Users/david/Desktop/David/www/kite/src/components/comments/Comments.js",[],"/Users/david/Desktop/David/www/kite/src/components/comments/actions/NewComment.js",["598","599","600"],"import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//FUNCTION 1: New Post API\nasync function newCommentAPI(comment) {\n    const commentURL = \"http://localhost:3003/comment\";\n    const response = await axios.post(commentURL, comment);\n\n    return response.data;\n} \n\nfunction NewComment({ api, postComments, groupID, postID, postTo, currentUser }) {\n\n    //FUNCTION 2: Handle New Comment Submit Button\n    const [commentCaption, setCommentCaption] = useState('Yes lets go hike!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setCommentCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newComment = {\n            masterSite: \"kite\",\n            commentCaption: commentCaption,\n            commentType: \"post\",\n            commentFrom: currentUser,\n            groupID: groupID,\n            postID: postID,\n            listID: 0,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n\n        mutate(newComment)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(newCommentAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                var postID = returnedData.data.postID\n                var newComment = returnedData.data;\n\n                //Inser the new comment into the post that the comment was made too \n                for (let i = 0; i < updatedPostData.length; i++) {\n                    if(updatedPostData[i].postID == postID) {\n                        updatedPostData[i].commentsArray.push(newComment)\n                    }\n                    \n                }\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <form onSubmit={ handleSubmit }>\n                <label> New Comment </label> \n                <input name= \"postCaption\" type=\"text\" value={ commentCaption } onChange={handleChange} />\n                <p> {commentCaption}</p>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewComment;\n\n\n","/Users/david/Desktop/David/www/kite/src/components/comments/display/CommentList.js",["601"],"import React from 'react';\nimport { useQuery } from \"react-query\";\nimport IndividualComment from './IndividualComment';\n//<CommentList groupID = { groupID } postComments={ postComments } api = { api }/>\n//api = { api } postComments = {post.commentsArray} groupID = { groupID } postID = { post.postID } currentUser = {currentUser}\nconst CommentList = ({api, groupID, postComments}) => {\n  return (\n    <div className=\"posts\">\n        <p><b> Comments</b> </p>\n        <div className = \"post-list\" >\n        {postComments && postComments.map((comment) => (\n              <IndividualComment api = { api } comment = { comment }  groupID = { groupID }  key = { comment.commentID }/>\n            ))}\n        </div>\n    </div>\n  );\n  }\n  \nexport default CommentList;\n\n\n\n\n//BACKUP\n/*\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport IndividualComment from './IndividualComment';\n\n//<Comments api = { api } groupID = { groupID } postID = { post.postID } currentUser = {currentUser}  /> \n\n\nasync function getComments(postID, api) {\n    const commentPostURL = \"http://localhost:3003/comments/\" + postID; \n    const response = await api.get(commentPostURL)\n    //console.log(\"response\")\n    //console.log(response)\n    //console.log(\"response\")\n  \n    return response.data\n  \n} \n\n\n//This does not need API just send as a prop\nconst CommentList = ({api, groupID, postComments, postID}) => {\n    const localData = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUser = JSON.parse(localData);\n    //console.log(\"Posts: Getting Comments for the post \" + postID)\n\n    \n    const onError = (error) => {\n      console.log(\"Do something here if there is Error!\")\n      console.log(error)\n    }\n  \n    const { isLoading, data, isError, error  } = useQuery(['post-comments', postID], () => getComments(postID, api), \n      { refetchInterval: 10000000,\n        onError: onError\n      }\n    )\n\n    const currentPosts = data;\n    \n//<IndividualComment api = { api } post = { post }  groupID = { groupID } currentUser = {currentUser} key = { post.postID }/>\n  return (\n  <div className=\"posts\">\n       <p><b> Comments</b> </p>\n       <div className = \"post-list\" >\n       {postComments && postComments.map((comment) => (\n            <IndividualComment api = { api } comment = { comment }  groupID = { groupID }  key = { comment.commentID }/>\n          ))}\n       </div>\n  </div>\n  );\n  }\n  \nexport default CommentList;\n*/\n","/Users/david/Desktop/David/www/kite/src/pages/Playground.js",["602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { useNavigate  } from \"react-router-dom\" \nimport useLoginStatus from '../functions/hooks/useLoginStatus';\n\n//import functions from \"../functions/functions\";\n//import apiFunctions from '../functions/apiFunctions';\nimport SimpleGetUsers from '../components/playground/SimpleGetUsers';\nimport SimpleCheckbox from '../components/playground/SimpleCheckbox';\nimport SimpleEdit from '../components/playground/SimpleEdit';\nimport SimpleAddUser from '../components/playground/SimpleAddUser';\nimport SimpleUserSearch from '../components/playground/SimpleUserSearch';\nimport SimpleInput from '../components/playground/SimpleInput';\nimport SimpleLocalStorage from '../components/playground/SimpleLocalStorage';\nimport SimpleArray from '../components/playground/SimpleArray';\nimport SimpleButtonParent from '../components/playground/SimpleButtonParent';\n//import SimpleAddGroupUser from '../components/playground/SimpleAddGroupUser';\nimport SimpleAddGroupUser from '../components/playground/SimpleAddGroupUserLS';\nimport SimpleUseEffect from '../components/playground/SimpleUseEffect';\nimport SimpleSaveToStateAPI from '../components/playground/SimpleSaveToStateAPI';\nimport Example from '../components/playground/tutorials/Example';\nimport Learning from '../components/playground/tutorials/Learning';\n//import AutoComplete from '../components/playground/tutorials/autoComplete/AutoComplete';\nimport AutoComplete from '../components/playground/tutorials/autoComplete/AutoComplete';\nimport MainApp from '../components/playground/tutorials/learnAPI/MainApp';\nimport NewGroup from '../components/groups/actions/NewGroup';\nimport apiFunctions from '../functions/apiFunctions';\n\n\n//import axios from 'axios'\n\nconst axiosRequest = apiFunctions.getAPI();\n\nfunction Playground() {\n    let currentUser = \"davey\"\n    let searchString = \"fro\"\n\n    return (\n        <div className=\"user\">\n            <NewGroup api = { axiosRequest } currentUser = { \"davey\" } />\n        </div>\n    );\n}\n\nexport default Playground;\n\n/*\n\nconst axiosRequest = apiFunctions.getAPI();\n\nfunction GroupsPage() {\n  const data = localStorage.getItem(\"localStorageCurrentUser\");\n  const currentUser = JSON.parse(data);\n  //const { currentUser, userLoggedIn  } = useLoginStatus();\n  console.log(\"GroupsPage\")\n  console.log(\"Current User \" + currentUser)\n  \n  return (\n    <div className=\"user\">\n        <p> Current User: {currentUser}</p>\n        <Groups currentUser = { currentUser } api = { axiosRequest } /> \n        <CreateGroup api = { axiosRequest } currentUser = { currentUser } />\n        <Link className=\"navLink center\" to=\"/groups/new\"> New Group </Link>\n        \n    </div>\n  );\n}\n\n<AutoComplete />   \n            <Example /> \n<SimpleAddGroupUser />    \n<SimpleSaveToStateAPI /> \n<SimpleUseEffect api = { axiosRequest } currentUser = { currentUser } /> \n<SimpleLocalStorage /> \n<SimpleParent api = { axiosRequest } currentUser = { currentUser } /> \n<SimpleAddGroupUser api = { axiosRequest } currentUser = { currentUser } /> \n<SimpleArray api = { axiosRequest } currentUser = { currentUser } /> \n\n<SimpleHook /> \n<SimpleAddLocalStorage /> \n<SimpleGetUsers api = { axiosRequest } currentUser = { currentUser } /> \n<SimpleUserSearch api = { axiosRequest } currentUser = { currentUser } searchString = { searchString }/> \n<SimpleAddUser api = { axiosRequest } currentUser = { currentUser }/> \n<SimpleGetUsers api = { axiosRequest } currentUser = { currentUser } /> \n<SimpleCheckbox /> \n<SimpleEdit /> \n*/\n\n","/Users/david/Desktop/David/www/kite/src/components/search/FriendSearch.js",["626","627","628","629","630","631"],"import React, { useState } from 'react';\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//FUNCTION 1: Search for Friends API\nasync function friendSearchAPI(currentUser,searchString) {   \n    if (searchString.length > 0) {\n        const friendSearchURL = \"http://localhost:3003/search/user/\" + currentUser + \"/string/\" + searchString; \n        const { data } = await axios.get(friendSearchURL)\n\n        return data\n    } \n\n} \n\nfunction FriendSearch({ api, currentUser }) {\n    const [searchString, setSearchString] = useState('')\n\n    //FUNCTION 2: Handle user typing\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setSearchString(value);\n    }\n\n     //FUNCTION 3: React Query \n    const { isLoading, data, isError, error  } = useQuery(['friend-search', searchString], () => friendSearchAPI(currentUser, searchString), \n        {  staleTime: 60000 }\n    )\n\n    return (\n        <div className=\"new-post\">\n            <p className = \"single-line\">Friend Name</p>\n            \n            { data && console.log(data.data)}\n            {data && data.data.map(user => (\n                console.log(user.friendName)\n            ))}\n\n            <input name= \"group-name\" className=\"friend-search-input-box\" type=\"text\" value={ searchString } onChange={ handleChange} />\n            <p className = \"single-line\"> Typed { searchString } </p>\n        </div>\n    );\n}\n\nexport default FriendSearch;\n\n/*\n      {data && groups.groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n          </div>\n      ))}\n*/\n\n\n\n//WORKS\n/*\n//FUNCTION 1: Search for Friends API\nasync function friendSearchAPI(currentUser, searchString) {     \n    const friendSearchURL = \"http://localhost:3003/search/user/\" + currentUser + \"/string/\" + searchString; \n    const { data } = await axios.get(friendSearchURL)\n\n    return data\n} \n  \n\nfunction FriendSearch({ api, currentUser }) {\n    const [searchString, setSearchString] = useState('')\n\n    //FUNCTION 3: Handle user typing\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setSearchString(value);\n\n        //Fetch Current Data\n        let currentSearchString = value\n        if(currentSearchString.length > 0) {\n            friendSearchAPI(currentUser, value)\n        }\n    }\n\n    return (\n        <div className=\"new-post\">\n            <p className = \"single-line\">Friend Name</p>\n            <input name= \"group-name\" className=\"\" type=\"text\" value={ searchString } onChange={ handleChange} />\n            <p className = \"single-line\"> Typed { searchString } </p>\n        </div>\n    );\n}\n*/\n\n\n\n\n\n\n\n/* \n\nfunction NewPost({ groupID, currentUser, api }) {\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        //console.log(newPost)\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> {postCaption}</p>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\n\n//EXAMPLE\n//FUNCTION 1: New Post API\nasync function makePostAPI(post) {\n    const postURL = \"http://localhost:3003/post/text\";\n    const response = await axios.post(postURL, post);\n\n    return response.data;\n} \n\nfunction NewPost({ groupID, currentUser, api }) {\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        //console.log(newPost)\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> {postCaption}</p>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPost;\n\n*/","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleGetUsers.js",[],"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleCheckbox.js",[],"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleEdit.js",["632","633","634"],"import React, { useState } from 'react';\n\nfunction SimpleEdit() {\n  const [postCaption, editPostCaption] = useState('Hi Edit Me! Wanna go on a hike today the weather is perfect!')\n  const [postCaptionArea, showPostCaption] = useState('show')\n  const [editPostArea, showEditPost] = useState('hide')\n  \n  //POST AREA\n  function handleEditPostSubmit() {\n    showPostCaption('hide')\n    showEditPost('show')\n  }\n  \n  //EDIT AREA\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    editPostCaption(value)\n  }\n\n  //SUBMIT\n  const handleSubmit = (event) => {\n      event.preventDefault();\n      const { name, value } = event.target\n      showPostCaption('show')\n      showEditPost('hide')\n  }\n\n  return (\n    <div className=\"user\">\n      <div className = {postCaptionArea}> \n        <p>{ postCaption } </p>\n        <button className=\"\" onClick={() => handleEditPostSubmit() }> Edit Post </button>  \n      </div>\n\n      <div className = {editPostArea}> \n        <form onSubmit={ handleSubmit }>\n          <label> </label>\n          <textarea value={ postCaption } onChange={ handleChange } />\n          <button type=\"submit\"> Submit </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SimpleEdit;\n","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleAddUser.js",[],"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleUserSearch.js",["635"],"import React, { useState } from 'react';\nimport { useQuery } from \"react-query\";\n//import useLoginStatus from '../../functions/hooks/useLoginStatus';\n//import SimpleProfile from '../users/display/SimpleProfile';\n\n\n//http://localhost:3003/search/user/davey/string/fro\nasync function searchUsersAPI(api, currentUser, searchString) { \n    //http://localhost:3003/search/user/davey/string/fro\n    //const getSimpleUsersURL = \"http://localhost:3003/simple/users/\" + currentUser; \n    const simpleSearchURL = \"http://localhost:3003/search/user/\" + currentUser + \"/string/\" + searchString;\n    //console.log(simpleSearchURL) \n    //const getSimpleUsersURL = \"http://localhost:3003/search/user/davey/string/fro\"; \n    const { data } = await api.get(simpleSearchURL)\n  \n    return data\n  } \n  \n  const SimpleUserSearch = ({ api, currentUser }) => {\n        const [searchString, setSearchString] = useState('fro')\n\n      const { isLoading, data, isError, error  } = useQuery(['simple-get-users', currentUser], () => searchUsersAPI(api, currentUser, searchString), \n          { refetchInterval: 10000000 }\n      )\n      \n      return (\n          <div>\n              { isLoading && <div> loading... </div>}\n              { isError && <div> There was an error fetching the posts { error.message } </div>}   \n              {data && console.log(data)}\n              {data && data.data.map((user) => (\n                <p key = {user.friendName}> Username: {user.friendName } | Name: {user.firstName} | Image: {user.friendImage} </p>\n             ))}\n          </div>\n      )\n  }\n  \n  export default SimpleUserSearch;\n  \n\n\n\n/*\n        {data && data.data.map((user) => (\n                console.log()\n             ))}\nimport React from 'react';\nimport { useQuery } from \"react-query\";\n//import useLoginStatus from '../../functions/hooks/useLoginStatus';\nimport SimpleProfile from '../users/display/SimpleProfile';\n\n\nasync function getUserFriends(currentUser, friendName, api) { \n  const getFriendsURL = \"http://localhost:3003/friend/\" + friendName + \"/user/\" + currentUser; \n  const { data } = await api.get(getFriendsURL)\n\n  //console.log(data.data)\n\n  return data\n} \n\n\nconst FriendList = ({ currentUser, friendName, api }) => {\n    const { isLoading, data, isError, error  } = useQuery(['user-friends', friendName], () => getUserFriends(currentUser, friendName, api), \n        { refetchInterval: 10000000 }\n    )\n\n    return (\n        <div>\n            { isLoading && <div> loading... </div>}\n            { isError && <div> There was an error fetching the posts { error.message } </div>}\n\n            {data && data.data.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.friendID }/>\n             ))}\n        </div>\n    )\n}\n\nexport default FriendList;\n\n\n\n*/","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleInput.js",[],"/Users/david/Desktop/David/www/kite/src/hooks/useUpdateLogger.js",["636"],"import { useEffect, useState } from \"react\";\n\n\nexport default function useUpdateLogger(value) {\n    useEffect(() => {\n        console.log(value)\n    }, [value])\n\n    return [value]\n}","/Users/david/Desktop/David/www/kite/src/hooks/useLocalStorage.js",["637"],"import { useEffect, useState } from \"react\";\n\n\nfunction getSavedValue(key, initialValue) {\n    const savedValue = JSON.parse(localStorage.getItem(key))\n\n    if(savedValue) { return savedValue } \n    \n    if(initialValue instanceof Function) { return initialValue() }\n    \n    return initialValue\n}\n\nexport default function useLocalStorage(key, initialValue) {\n    const [value, setValue] = useState(() => {\n        return getSavedValue(key, initialValue)\n    })\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value))\n    }, [value])\n\n    return [value, setValue]\n}","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleAddGroupUser.js",["638","639","640"],"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleLocalStorage.js",["641"],"import React, { useState } from 'react'\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport useUpdateLogger from '../../hooks/useUpdateLogger';\n\n//TYPE 2: My Learning \nconst SimpleLocalStorage = () => {\n    const [name, setName] = useLocalStorage('name', '')\n    useUpdateLogger(name)\n\n    return (\n        <div>\n            <input type=\"text\" value={name} onChange={e => setName(e.target.value)} />\n        </div>\n    )\n}\n\nexport default SimpleLocalStorage;\n\n\n//TYPE 1: Example (Working)\n/*\nconst SimpleLocalStorage = () => {\n  const [name, setName] = useLocalStorage('name', '')\n  useUpdateLogger(name)\n\n  return (\n      <div>\n          <input type=\"text\" value={name} onChange={e => setName(e.target.value)} />\n      </div>\n  )\n}\n\nexport default SimpleLocalStorage;\n*/\n\n\n\n\n\n\n//APPENDIX\n/*\nimport React, { useState } from 'react';\n\nfunction SimpleCheckbox() {\n    const [isChecked, setIsChecked] = useState(false);\n  \n    //POST AREA\n    const handleChange = (event) => {\n      const { name, value } = event.target\n      console.log(value)\n      console.log(name)\n  \n      setIsChecked(!isChecked);\n    }\n  \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"hi\")\n    }\n  \n    return (\n      <div className=\"user\">\n          <form onSubmit={ handleSubmit }>\n          <div className=\"topping\">\n          <input type=\"checkbox\" id=\"user\" name=\"user\" value=\"Sam\" checked={isChecked} onChange={handleChange} /> Sam\n        </div>\n            <p> is checked: {isChecked ? \"checked\" : \"un-checked\"}</p>\n            <button type=\"submit\"> Submit </button>\n          </form>\n      </div>\n    );\n  }\n  \n  export default SimpleCheckbox;\n  \n*/","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleArray.js",[],"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleChild.js",["642","643","644"],"import React, { useState } from 'react'\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport useUpdateLogger from '../../hooks/useUpdateLogger';\n\nconst SimpleChild = ({ user }) => {\n  let userID = user.userID\n  let userName = user.userName\n\n  return (\n      <div> \n        <p> {userID } | {userName} </p>\n      </div>\n  );\n}\n\n\nexport default SimpleChild;\n\n\n\n",["645","646"],"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleParent.js",["647"],"import React, { useState } from 'react'\n\nimport SimpleChild from './SimpleChild'\n\nconst SimpleClickParent = () => {\n    let david = {\n        userID: 1,\n        userName: \"david\",\n      }\n      let sam = {\n        userID: 2,\n        userName: \"sam\",\n      }\n      let frodo = {\n        userID: 3,\n        userName: \"frodo\",\n      }\n    \n      let usersArray = [david, sam, frodo]\n    \n      const [users, addUser] = useState(usersArray)\n    \n\n  return (\n      <div>\n          <p> hi </p>\n          {users.map((user) => (\n              <SimpleChild key = { user.userID } user = {user}/>\n          ))} \n      </div>\n  )\n}\n\nexport default SimpleClickParent;\n\n\n/*\n\nimport { useEffect, useState } from \"react\";\nimport BlogList from \"./BlogList\";\nimport useFetch from \"../hooks/useFetch\";\n\nconst Home = () => {\n  const { error, isPending, data: blogs } = useFetch('http://localhost:8000/blogs')\n\n  return (\n    <div className=\"home\">\n      { error && <div>{ error }</div> }\n      { isPending && <div>Loading...</div> }\n      { blogs && <BlogList blogs={blogs} /> }\n    </div>\n  );\n}\n \nexport default Home;\n\n*/\n/*\nimport { Link } from 'react-router-dom';\n\nconst BlogList = ({ blogs }) => {\n  return (\n    <div className=\"blog-list\">\n      {blogs.map(blog => (\n        <div className=\"blog-preview\" key={blog.id} >\n          <Link to={`/blogs/${blog.id}`}>\n            <h2>{ blog.title }</h2>\n            <p>Written by { blog.author }</p>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n}\n \nexport default BlogList;\nconst BlogList = ({ blogs, title, handleDelete }) => {\n    // const blogs = props.blogs;\n    // const title = props.title;\n    // console.log(blogs);\n  \n    return (\n      <div className=\"blog-list\">\n        <h2>{ title }</h2>\n        {blogs.map(blog => (\n          <div className=\"blog-preview\" key={blog.id} >\n            <h2>{ blog.title }</h2>\n            <p>Written by { blog.author }</p>\n            <button onClick={() => handleDelete(blog.id)}>delete blog</button>\n          </div>\n        ))}\n      </div>\n    );\n  }\n   \n  export default BlogList;\n  */\n \n//<BlogList blogs={blogs.filter(blog => blog.author === 'mario')} title=\"Mario's Blogs\" />\n\n\n//Simple\n/*\nimport { useState } from \"react\";\n\nconst Home = () => {\n  const [blogs, setBlogs] = useState([\n    { title: 'My new website', body: 'lorem ipsum...', author: 'mario', id: 1 },\n    { title: 'Welcome party!', body: 'lorem ipsum...', author: 'yoshi', id: 2 },\n    { title: 'Web dev top tips', body: 'lorem ipsum...', author: 'mario', id: 3 }\n  ])\n\n  return (\n    <div className=\"home\">\n      {blogs.map(blog => (\n        <div className=\"blog-preview\" key={blog.id} >\n          <h2>{ blog.title }</h2>\n          <p>Written by { blog.author }</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n \nexport default Home;\n*/\n\n//Simple 2: Use Effect \n\n/*\nconst Home = () => {\n  const [blogs, setBlogs] = useState([\n    { title: 'My new website', body: 'lorem ipsum...', author: 'mario', id: 1 },\n    { title: 'Welcome party!', body: 'lorem ipsum...', author: 'yoshi', id: 2 },\n    { title: 'Web dev top tips', body: 'lorem ipsum...', author: 'mario', id: 3 }\n  ])\n\n  const handleDelete = (id) => {\n    const newBlogs = blogs.filter(blog => blog.id !== id);\n    setBlogs(newBlogs);\n  }\n\n  useEffect(() => {\n    console.log('use effect ran');\n    console.log(blogs);\n  })\n\n  return (\n    <div className=\"home\">\n      <BlogList blogs={blogs} title=\"All Blogs\" handleDelete={handleDelete} />\n    </div>\n  );\n}\n \nexport default Home;\n*/\n\n\n//Simple 3\n/*\nimport { useEffect, useState } from \"react\";\nimport BlogList from \"./BlogList\";\n\nconst Home = () => {\n  const [blogs, setBlogs] = useState([\n    { title: 'My new website', body: 'lorem ipsum...', author: 'mario', id: 1 },\n    { title: 'Welcome party!', body: 'lorem ipsum...', author: 'yoshi', id: 2 },\n    { title: 'Web dev top tips', body: 'lorem ipsum...', author: 'mario', id: 3 }\n  ])\n\n  const [name, setName] = useState('mario');\n\n  const handleDelete = (id) => {\n    const newBlogs = blogs.filter(blog => blog.id !== id);\n    setBlogs(newBlogs);\n  }\n\n  useEffect(() => {\n    console.log('use effect ran');\n    console.log(blogs);\n  }, [name])\n\n  return (\n    <div className=\"home\">\n      <BlogList blogs={blogs} title=\"All Blogs\" handleDelete={handleDelete} />\n      <button onClick={() => setName('luigi')}>change name</button>\n    </div>\n  );\n}\n \nexport default Home;\n\n*/\n\n//Simple 4\n/*\nconst Home = () => {\n  const [blogs, setBlogs] = useState(null)\n\n  useEffect(() => {\n    fetch('http://localhost:8000/blogs')\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        setBlogs(data);\n      })\n  }, [])\n\n  return (\n    <div className=\"home\">\n      {blogs && <BlogList blogs={blogs} />}\n    </div>\n  );\n}\n \nexport default Home;\n*/\n\n//Lesson 19\n/*\nimport { useEffect, useState } from \"react\";\nimport BlogList from \"./BlogList\";\n\nconst Home = () => {\n  const [blogs, setBlogs] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch('http://localhost:8000/blogs')\n      .then(res => {\n        if (!res.ok) { // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setBlogs(data);\n        setError(null);\n      })\n      .catch(err => {\n        // auto catches network / connection error\n        setIsPending(false);\n        setError(err.message);\n      })\n    }, 1000);\n  }, [])\n\n  return (\n    <div className=\"home\">\n      { error && <div>{ error }</div> }\n      { isPending && <div>Loading...</div> }\n      { blogs && <BlogList blogs={blogs} /> }\n    </div>\n  );\n}\n \nexport default Home;\n*/","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleUseEffect.js",[],"/Users/david/Desktop/David/www/kite/src/components/playground/IndividualGroupUser.js",["648"],"import React, { useState } from 'react'\n\n\nconst IndividualGroupUser = ({addGroupUser, removeGroupUser, user }) => {\n  let userID = user.userID\n  let userName = user.userName\n\n  return (\n      <div> \n        <div className=''> \n          <p> {userID } | {userName} </p>\n          <button onClick={() => addGroupUser(userName)}>Add Me to your Group | {userName}</button> \n        </div>\n      </div>\n  );\n}\n\n\nexport default IndividualGroupUser;\n\n","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleButtonParent.js",[],"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleSaveToStateAPI.js",[],"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleButtonChild.js",["649","650","651"],"import React, { useState } from 'react'\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport useUpdateLogger from '../../hooks/useUpdateLogger';\n\nconst SimpleButtonChild = ({ user, handleClicking, handleDelete }) => {\n  let userID = user.userID\n  let userName = user.userName\n\n  return (\n      <div> \n        <p> {userID } | {userName} </p>\n        <button onClick={() => handleClicking(userID)}>Click Me {userName}</button>\n        <button onClick={() => handleDelete(userID)}>Delete Me {userName}</button>\n      </div>\n  );\n}\n\n\nexport default SimpleButtonChild;\n\n\n\n","/Users/david/Desktop/David/www/kite/src/components/playground/SimpleAddGroupUserLS.js",["652","653"],"import React, { useState, useEffect } from 'react'\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport IndividualGroupUser from './IndividualGroupUser';\nimport NewGroupUser from './NewGroupUser';\n\nvar david = {\n  userID: 1,\n  userName: \"david\",\n}\nvar sam = {\n  userID: 2,\n  userName: \"sam\",\n}\nvar frodo = {\n  userID: 3,\n  userName: \"frodo\",\n}\nvar merry = {\n  userID: 4,\n  userName: \"merry\",\n}\n\nvar friendsArray = [david, sam, frodo]\nvar localStorageBaseArray = []\n\nconst SimpleAddGroupUserLS = ({ currentUser, api }) => {\n  const [currentGroupUsers, updateCurrentGroupUsers] = useLocalStorage('newGroupUser', localStorageBaseArray)\n  const [availableFriends, updateAvailableFriends] = useState(friendsArray)\n\n  //STEP 1: Get Current Users from Local Storage \n  useEffect(() => {\n    console.log(\"Remove Users from availableFriends who are in local storage\")\n    let currentAvailableFriends = [...availableFriends];\n\n    for(let i = 0; i < currentGroupUsers.length; i++){\n      console.log(currentGroupUsers[i].userName)\n      currentAvailableFriends = currentAvailableFriends.filter(user => user.userName !== currentGroupUsers[i].userName);\n   }\n   updateAvailableFriends(currentAvailableFriends)\n\n  }, [])\n\n\n  //FUNCTIONS: Add or Remove Users\n  //Add Group User \n  const addGroupUser = (userName) => {\n\n    console.log(currentGroupUsers)\n    //Step 1: Add New Group User to Local Storage Pending Group\n    console.log(\"You are going to add \" + userName)\n    let updatedCurrentGroupUsersArray = [...currentGroupUsers];\n    let newUser = availableFriends.find(x => x.userName === userName);\n\n    updatedCurrentGroupUsersArray.push(newUser);\n    updateCurrentGroupUsers(updatedCurrentGroupUsersArray);\n \n    //Step 2: Remove User from Current available Friends\n    const updatedFriendsArray = availableFriends.filter(user => user.userName !== userName);\n    updateAvailableFriends(updatedFriendsArray)  \n  \n  }\n\n  //Remove Group User \n  const removeGroupUser = (userName) => {\n\n      //Step 1: Remove New Group User from Pending Group \n      console.log(\"You will remove \" + userName)\n      const updatedCurrentGroupUsers = currentGroupUsers.filter(user => user.userName !== userName);\n      updateCurrentGroupUsers(updatedCurrentGroupUsers);\n\n      //Step 2: Add User back to available Friends\n      let updatedAvailableFriendsArray = [...availableFriends];\n      let selectedUser = currentGroupUsers.find(x => x.userName === userName);\n\n      updatedAvailableFriendsArray.push(selectedUser);\n      updateAvailableFriends(updatedAvailableFriendsArray);\n   \n  }\n\n\n  return (\n      <div> \n          <div className='simple-border'>\n          <h4> Friends you can Add </h4>\n            {availableFriends.map((user) => (\n                <IndividualGroupUser key = { user.userName } addGroupUser = {addGroupUser} removeGroupUser = {removeGroupUser} user = {user} />\n            ))} \n            <hr />\n            <hr />\n            <p> New Group Users </p>\n            {currentGroupUsers.map((user) => (\n                <NewGroupUser key = { user.userName } addGroupUser = {addGroupUser} removeGroupUser = {removeGroupUser} user = {user} />\n            ))} \n\n          </div>\n\n      </div>\n  );\n}\n\n\nexport default SimpleAddGroupUserLS;\n\n\n//TEMP CODE\n/*\n            {currentGroupUsers.map((user) => (\n                console.log(user)\n            ))} \n\n  //localStorage.setItem(\"newGroupUser\", '');\n  //localStorage.getItem(\"temp\");\n  //console.log(theTemp)\n\n          <h4> New Group Users</h4>\n          <div className='simple-border'>\n          {newGroupUser.map((user) => (\n                <p key = {user}> {user } </p>\n            ))} \n            </div>\n\n*/\n\n\n//BACKUP\n/*\n\nconst SimpleAddGroupUsers= ({ currentUser, api }) => {\n  /*\n  let newGroupUsersLocalStorage = [\"sam\", \"frodo\"] \n  let string = JSON.stringify(students) \n  localStorage.setItem(\"students\", string) \n  *//*\n       ////\n    // If I have this array:\n    var myArray = [\"david\", \"sam\", \"frodo\"];\n\n    // and this one:\n    var toRemove = [\"sam\"];\n    myArray = myArray.filter( ( el ) => !toRemove.includes( el ) );\n\n\n    console.log(myArray)\n    console.log(toRemove)\n    console.log(myArray)\n    ////\n\n\n  useEffect(() => {\n    console.log(\"users\")\n    console.log(users)\n    console.log(\"newGroupUser\")\n    console.log(newGroupUser)\n    let david = {\n      userID: 1,\n      userName: \"david\",\n    }\n    for(let i = 0; i < users.length; i++){\n      console.log(users[i].userName)\n   }\n    //let stillCanAddUsers = users.filter(user => user.userName !== userName);\n\n\n    let newUsers = [david]\n    addUser(newUsers)\n\n\n  }, [])\n\n  //PART 1: Local Storage Users \n  let baseArray = []\n  const [newGroupUser, setNewGroupUser] = useLocalStorage('newGroupUser', baseArray)\n\n  //PART 2: Current Friends (you can add to new group)\n  let david = {\n    userID: 1,\n    userName: \"david\",\n  }\n  let sam = {\n    userID: 2,\n    userName: \"sam\",\n  }\n  let frodo = {\n    userID: 3,\n    userName: \"frodo\",\n  }\n\n  let usersArray = [david, sam, frodo]\n\n  const [users, addUser] = useState(usersArray)\n  \n  //PART 3: Actions \n  //Part 3A: Add  a Friend to a new Group\n  const addNewGroupUser = (userName) => {\n    console.log(\"You are going to add \" + userName)\n    \n    //Step 1: Add New Group User to Local Storage Array \n    let currentGroupUserArray = [...newGroupUser];\n    console.log(newGroupUser)\n    console.log(typeof(newGroupUser))\n    console.log(currentGroupUserArray)\n    console.log(typeof(currentGroupUserArray))\n\n    //let currentGroupUserArray = JSON.parse(newGroupUser);\n    if(!currentGroupUserArray.includes(userName)) {\n      currentGroupUserArray.push(userName)\n\n      setNewGroupUser(currentGroupUserArray)\n        \n    } else {\n      console.log(\"already in the group\")\n    }\n\n    \n    /*\n    let retString = localStorage.getItem(\"students\") \n    let retArray = JSON.parse(retString) \n    console.log(retArray); \n    console.log(oldGroupUserArray);\n    oldGroupUserArray.push(userName);\n\n    let newGroupUserArray = oldGroupUserArray;\n    console.log(newGroupUserArray);\n    setNewGroupUser(newGroupUserArray)\n    *//*\n\n    //Step 2: Remove User from Current available Friends\n    const newUsers = users.filter(user => user.userName !== userName);\n    addUser(newUsers)  \n    \n\n  }\n\n  //Part 3B: Add a friend from the new group \n  const removeNewGroupUser = (userID) => {\n      console.log(\"You will remove \" + userID)\n      //Step 1: Remove New Group User from Local Storage Array \n      localStorage.getItem(\"temp\");\n\n      //Step 2: Add User back to available Friends\n  \n  }\n\n\n  //localStorage.setItem(\"newGroupUser\", '');\n  //localStorage.getItem(\"temp\");\n  //console.log(theTemp)\n\n  return (\n      <div> \n          <div className='simple-border'>\n          <h4> Friends you can Add </h4>\n            {users.map((user) => (\n                <IndividualGroupUser key = { user.userName } addNewGroupUser = {addNewGroupUser} removeNewGroupUser = {removeNewGroupUser} user = {user} />\n            ))} \n          </div>\n          <h4> New Group Users</h4>\n          <div className='simple-border'>\n          {newGroupUser.map((user) => (\n                <p key = {user}> {user } </p>\n            ))} \n            </div>\n\n      </div>\n  );\n}\n\n\nexport default SimpleAddGroupUsers;\n\n*/\n\n\n//APPENDIX\n/*\nconst SimpleAddLocalStorage = () => {\n    const [isChecked, setIsChecked] = useState(false);\n  \n    //POST AREA\n    const handleChange = (event) => {\n      const { name, value } = event.target\n      console.log(value)\n      console.log(name)\n  \n      setIsChecked(!isChecked);\n    }\n  \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"hi\")\n    }\n  \n    return (\n      <div className=\"user\">\n          <form onSubmit={ handleSubmit }>\n          <div className=\"topping\">\n          <input type=\"checkbox\" id=\"user\" name=\"user\" value=\"Sam\" checked={isChecked} onChange={handleChange} /> Sam\n        </div>\n            <p> is checked: {isChecked ? \"checked\" : \"un-checked\"}</p>\n            <button type=\"submit\"> Submit </button>\n          </form>\n      </div>\n    );\n}\n\nexport default SimpleAddLocalStorage;\n*/","/Users/david/Desktop/David/www/kite/src/components/playground/NewGroupUser.js",["654"],"import React, { useState } from 'react'\n\n\nconst IndividualGroupUser = ({addGroupUser, removeGroupUser, user }) => {\n  let userID = user.userID\n  let userName = user.userName\n\n  return (\n      <div> \n        <div className=''> \n          <p> {userID } | {userName} </p>\n          <button onClick={() => removeGroupUser(userName)}>Remove Me | {userName}</button>\n        </div>\n      </div>\n  );\n}\n\n\nexport default IndividualGroupUser;\n\n","/Users/david/Desktop/David/www/kite/src/pages/NewGroupPage.js",["655","656"],"/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/Example.js",["657","658"],"import React, { useState, useRef, useMemo } from 'react';\n\nfunction Example() {   \n    const [items, setItems] = useState([\"first\"])\n    const [query, setQuery] = useState(\"\")\n    const inputRef = useRef()\n\n    const filteredItems = useMemo(() => {\n      return items.filter(item => {\n        console.log(query)\n        return item.toLowerCase().includes(query.toLowerCase())\n      })\n    \n    }, [items, query])\n\n\n    //PLAYGROUND\n    function onChange(e) {\n      const value = e.target.value;\n    }\n    \n    function onSubmit(e) {\n      e.preventDefault();\n      let value = inputRef.current.value;\n      \n      //value = \"hi\"\n      if(value === \"\") {\n        console.log(\"empty\")\n        return ;\n      } else {\n        setItems(prev => {\n          return [...prev, value]\n        })\n      }  \n      inputRef.current.value = \"\"\n    } \n\n\n\n    return (\n      <div className = \"login\">\n        <p> Search </p>\n        <input \n          value = {query} \n          onChange= {e => setQuery(e.target.value)} \n          type=\"search\" /> \n          <br /><br />\n\n        <form onSubmit={onSubmit}>\n            New Item: <input ref={inputRef} type=\"text\"  />\n            <button type=\"submit\" > Add </button>\n        </form>\n\n\n        <h4> Items </h4>\n        { items.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n        <h4> Filtered Items </h4>\n        { filteredItems.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n      </div>\n    );\n  }\n\nexport default Example;\n\n//WORKING 2: Better\n/*\nfunction Example() {   \n    const [items, setItems] = useState([\"first\"])\n    const [query, setQuery] = useState([\"\"])\n    const inputRef = useRef()\n\n    const filteredItems = items.filter(item => {\n      return item.toLowerCase().includes(query.toLowerCase())\n    })\n\n    //PLAYGROUND\n    function onChange(e) {\n      const value = e.target.value;\n    }\n    \n    function onSubmit(e) {\n      e.preventDefault();\n      let value = inputRef.current.value;\n      \n      //value = \"hi\"\n      if(value === \"\") {\n        console.log(\"empty\")\n        return ;\n      } else {\n        setItems(prev => {\n          return [...prev, value]\n        })\n      }  \n      inputRef.current.value = \"\"\n    } \n\n\n\n    return (\n      <div className = \"login\">\n        <p> Search </p>\n        <input \n          value = {query} \n          onChange= {e => setQuery(e.target.value)} \n          type=\"search\" /> \n          <br /><br />\n\n        <form onSubmit={onSubmit}>\n            New Item: <input ref={inputRef} type=\"text\"  />\n            <button type=\"submit\" > Add </button>\n        </form>\n\n\n        <h4> Items </h4>\n        { items.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n        <h4> Filtered Items </h4>\n        { filteredItems.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n      </div>\n    );\n  }\n\nexport default Example;\n*/\n\n//WORKING\n/*\nfunction Example() {   \n    const [items, setItems] = useState([\"first\"])\n    const inputRef = useRef()\n\n    //PLAYGROUND\n    console.log(\"test\")\n\n    function onSubmit(e) {\n      e.preventDefault();\n      console.log(\"submit\")\n      console.log(items)\n      let value = inputRef.current.value;\n      \n      //value = \"hi\"\n      if(value === \"\") {\n        console.log(\"empty\")\n        return ;\n      } else {\n        setItems(prev => {\n          return [...prev, value]\n        })\n      }  \n      inputRef.current.value = \"\"\n    } \n\n\n\n    return (\n      <div className = \"login\">\n        <p> Search </p>\n        <input type=\"search\" /> <br /><br />\n\n        <form onSubmit={onSubmit}>\n            New Item: <input ref={inputRef} type=\"text\"  />\n            <button type=\"submit\" > Add </button>\n        </form>\n\n\n        <h4> Items </h4>\n        { items.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n      </div>\n    );\n  }\n\nexport default Example;\n\n*/","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/Learning.js",["659","660","661","662","663","664","665","666","667","668","669","670"],"import { continueStatement } from '@babel/types';\nimport { func } from 'prop-types';\nimport React, { useState, useRef } from 'react';\n\nfunction Learning() {   \n    const [items, setItems] = useState([\"first\"])\n    const inputRef = useRef()\n\n    //PLAYGROUND\n    console.log(\"test\")\n\n    //THIS\n    //This references \n    // method -> obj\n    // function -> global (Window, global)\n    const video = {\n\n    }\n\n\n    //CALL BIND APPLY\n    //CALL (Attaches function to object)\n    var obj = {\n        num: 2\n    }\n\n    var obj2 = {\n        num: 5\n    }\n\n    var addToThis = function(a) {\n        return this.num + a;\n    }\n\n    //Call (input object and parameter)\n    addToThis.call(obj, 3) //functionName.call(obj, functionArguments)\n    //console.log(addToThis.call(obj, 3))    \n\n    //APPLY (like call but can take array)\n    var addApply = function(a,b,c) {\n        return this.num + a + b + c;\n    }\n    var arr = [1,2,3]\n    //console.log(addApply.apply(obj, arr))   \n\n    //console.log(addApply.apply(obj, arr))  \n    //console.log(addApply.apply(obj2, arr))  \n\n    //BIND (gives a function that can run)\n    var bound = addToThis.bind(obj);\n    //console.log(bound(1))\n    var bound = addApply.bind(obj);\n    //console.log(bound(1,2,3))\n\n    //HOISTING\n    a = \"a\";\n\n    const sumConst = (a,b) => a + b\n\n    console.log(\"sumFunc \" + sumFunc(1,2))\n    console.log(\"sumConst \" + sumConst(3,4))\n    console.log(a)\n\n\n    function sumFunc(a,b) {\n        return a + b;\n    }\n    \n    var a;\n\n    \n\n\n\n\n\n    return (\n      <div className = \"login\">\n\n      </div>\n    );\n  }\n\nexport default Learning;\n\n","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/AutoComplete.js",["671","672"],"import React, { useState, useRef, useMemo } from 'react';\nimport { SearchBar } from './components/SearchBar';\nimport { SearchResultsList } from \"./components/SearchResultsList\";\n\n\nfunction AutoComplete() {   \n  const [results, setResults] = useState([]);\n  console.log(results)\n\n    return (\n      <div className = \"login\">\n        <p> Search Here </p>\n        <div className = \"search-bar-container\"> \n            <SearchBar setResults={setResults} />\n            {results && results.length > 0 && <SearchResultsList results={results} />}\n          <div> Results </div>\n        </div>\n      </div>\n    );\n  }\n\nexport default AutoComplete;\n\n\n\n\n//WORKING 2: Better\n/*\n        <SearchBar setResults={setResults} />\nfunction Example() {   \n    const [items, setItems] = useState([\"first\"])\n    const [query, setQuery] = useState([\"\"])\n    const inputRef = useRef()\n\n    const filteredItems = items.filter(item => {\n      return item.toLowerCase().includes(query.toLowerCase())\n    })\n\n    //PLAYGROUND\n    function onChange(e) {\n      const value = e.target.value;\n    }\n    \n    function onSubmit(e) {\n      e.preventDefault();\n      let value = inputRef.current.value;\n      \n      //value = \"hi\"\n      if(value === \"\") {\n        console.log(\"empty\")\n        return ;\n      } else {\n        setItems(prev => {\n          return [...prev, value]\n        })\n      }  \n      inputRef.current.value = \"\"\n    } \n\n\n\n    return (\n      <div className = \"login\">\n        <p> Search </p>\n        <input \n          value = {query} \n          onChange= {e => setQuery(e.target.value)} \n          type=\"search\" /> \n          <br /><br />\n\n        <form onSubmit={onSubmit}>\n            New Item: <input ref={inputRef} type=\"text\"  />\n            <button type=\"submit\" > Add </button>\n        </form>\n\n\n        <h4> Items </h4>\n        { items.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n        <h4> Filtered Items </h4>\n        { filteredItems.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n      </div>\n    );\n  }\n\nexport default Example;\n*/\n\n//WORKING\n/*\nfunction Example() {   \n    const [items, setItems] = useState([\"first\"])\n    const inputRef = useRef()\n\n    //PLAYGROUND\n    console.log(\"test\")\n\n    function onSubmit(e) {\n      e.preventDefault();\n      console.log(\"submit\")\n      console.log(items)\n      let value = inputRef.current.value;\n      \n      //value = \"hi\"\n      if(value === \"\") {\n        console.log(\"empty\")\n        return ;\n      } else {\n        setItems(prev => {\n          return [...prev, value]\n        })\n      }  \n      inputRef.current.value = \"\"\n    } \n\n\n\n    return (\n      <div className = \"login\">\n        <p> Search </p>\n        <input type=\"search\" /> <br /><br />\n\n        <form onSubmit={onSubmit}>\n            New Item: <input ref={inputRef} type=\"text\"  />\n            <button type=\"submit\" > Add </button>\n        </form>\n\n\n        <h4> Items </h4>\n        { items.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n      </div>\n    );\n  }\n\nexport default Example;\n\n*/","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/components/SearchResultsList.js",[],"/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/components/SearchBar.js",[],"/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/components/SearchResult.js",[],"/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/MainApp.js",["673","674"],"import React, { useState } from 'react'\nimport Activities from './components/Activities';\nimport MyAPI from './components/MyAPI'; \nconst MainApp = () => {\n\n  return (\n      <div> \n        <MyAPI />\n      </div>\n  );\n}\n\n\nexport default MainApp;\n\n\n\n","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/components/MyAPI.js",["675","676"],"import React, { useState, useEffect } from 'react'\nimport PostList from './PostList';\nimport useFetch from \"../hooks/useFetch\";\n\n//http://localhost:3003/simple/posts\n//https://github.com/iamshaunjp/Complete-React-Tutorial/blob/lesson-17/dojo-blog/src/Home.js\n\nfunction MyAPI() {\n    const { data: posts, isPending, error } = useFetch(\"http://localhost:3003/simple/posts\")\n\n    return (\n        <div> \n            <ul> \n              { error && <div>{ error }</div> }\n              { isPending && <div>Loading...</div> }\n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\nexport default MyAPI;\n\n\n\n\n\n\n//WORKS 2\n/*\nimport React, { useState, useEffect } from 'react'\nimport PostList from './PostList';\nimport useFetch from \"../hooks/useFetch\";\n\n//http://localhost:3003/simple/posts\n//https://github.com/iamshaunjp/Complete-React-Tutorial/blob/lesson-17/dojo-blog/src/Home.js\n\nfunction MyAPI() {\n    const [posts, setPosts] = useState(null)\n    const [isPending, setIsPending] = useState(true)\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n      fetch('http://localhost:3003/simple/posts')\n        .then(res => {\n          if (!res.ok) { // error coming back from server\n            throw Error('could not fetch the data for that resource');\n          } \n          console.log(res)\n          return res.json();\n        })\n        .then(data => {\n            setPosts(data);\n            setIsPending(false);\n            setError(null)\n            console.log(data)\n        })\n        .catch(err => {\n          // auto catches network / connection error\n          setIsPending(false);\n          setError(err.message);\n        })\n    }, [])\n\n      return (\n        <div> \n            <ul> \n              { error && <div>{ error }</div> }\n              { isPending && <div>Loading...</div> }\n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\nexport default MyAPI;\n*/\n//WORKS\n/*\n\nfunction MyAPI() {\n    const [posts, setPosts] = useState(null)\n    const [isPending, setIsPending] = useState(true)\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n      fetch('http://localhost:3003/simple/posts')\n        .then(res => {\n          if (!res.ok) { // error coming back from server\n            throw Error('could not fetch the data for that resource');\n          } \n          console.log(res)\n          return res.json();\n        })\n        .then(data => {\n            setPosts(data);\n            setIsPending(false);\n            setError(null)\n            console.log(data)\n        })\n        .catch(err => {\n          // auto catches network / connection error\n          setIsPending(false);\n          setError(err.message);\n        })\n    }, [])\n\n      return (\n        <div> \n            <ul> \n              { error && <div>{ error }</div> }\n              { isPending && <div>Loading...</div> }\n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\nexport default MyAPI;\n*/\n\n//APPENDIX\n/*\n    const handleClick = (postID) => {\n      console.log(postID)\n    }\n    \n\n              {posts && \n                posts.map((post) => {\n                  return <li key = {post.postID}> { post.postCaption } </li>\n                })\n              }\n\n  const [blogs, setBlogs] = useState(null)\n\n  useEffect(() => {\n    fetch('http://localhost:8000/blogs')\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        setBlogs(data);\n      })\n  }, [])\n\n  return (\n    <div className=\"home\">\n      {blogs && <BlogList blogs={blogs} />}\n    </div>\n  );\n  */\n\n\n//WORKING 2\n/*\nimport React, { useState, useEffect } from 'react'\nimport { act } from 'react-dom/test-utils';\n\nfunction Activities() {\n    const [activity, setActivity] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n    function loadActivity() {\n        setIsLoading(true);\n        fetch(\"https://www.boredapi.com/api/activity\")\n        .then((response) => response.json())\n        .then((data) => {\n            setActivity([...activity, data]);\n            setIsLoading(false)\n        });\n    }\n\n    useEffect(() => {\n        loadActivity()\n      }, []);\n\n      if(activity.length === 0) {\n        return <p> loading...</p>\n      }\n\n      return (\n        <div> \n            <ul> \n                {activity.map((currentActivity) => {\n                    return <li key = {currentActivity.key}> { currentActivity.activity } </li>\n                })}\n            </ul>\n          <button disabled={isLoading} onClick={loadActivity}> Add One </button>\n        </div>\n    );\n}\n\nexport default Activities;\n\n*/\n\n//WORKING\n/*\nimport React, { useState, useEffect } from 'react'\nimport { act } from 'react-dom/test-utils';\n\nfunction Activities() {\n    const [activity, setActivity] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n    function loadActivity() {\n        setIsLoading(true);\n        fetch(\"https://www.boredapi.com/api/activity\")\n        .then((response) => response.json())\n        .then((data) => {\n            setActivity([...activity, data]);\n            setIsLoading(false)\n        });\n    }\n\n    useEffect(() => {\n        loadActivity()\n      }, []);\n\n      if(isLoading) {\n        return <p> loading...</p>\n      }\n\n      return (\n        <div> \n            <ul> \n                {activity.map((currentActivity) => {\n                    return <li key = {currentActivity.key}> { currentActivity.activity } </li>\n                })}\n            </ul>\n          <button onClick={loadActivity}> Add One </button>\n        </div>\n    );\n}\n\nexport default Activities;\n*/\n\n\n\n/*\nfunction MyAPI() {\n    const [posts, setPosts] = useState(null)\n\n    const handleClick = (postID) => {\n      console.log(postID)\n    }\n    \n    useEffect(() => {\n      fetch('http://localhost:3003/simple/posts')\n        .then(res => {\n          return res.json();\n        })\n        .then(data => {\n            setPosts(data);\n            console.log(data)\n        })\n    }, [])\n  \n      return (\n        <div> \n            <ul> \n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\nexport default MyAPI;\n\n*/","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/components/Activities.js",["677","678"],"import React, { useState, useEffect } from 'react'\nimport { act } from 'react-dom/test-utils';\n\nfunction Activities() {\n    const [activity, setActivity] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n    function loadActivity() {\n        setIsLoading(true);\n        fetch(\"https://www.boredapi.com/api/activity\")\n        .then((response) => response.json())\n        .then((data) => {\n            setActivity([...activity, data]);\n            setIsLoading(false)\n        });\n    }\n\n    useEffect(() => {\n        loadActivity()\n      }, []);\n\n      if(activity.length === 0) {\n        return <p> loading...</p>\n      }\n\n      return (\n        <div> \n            <ul> \n                {activity.map((currentActivity) => {\n                    return <li key = {currentActivity.key}> { currentActivity.activity } </li>\n                })}\n            </ul>\n          <button disabled={isLoading} onClick={loadActivity}> Add One </button>\n        </div>\n    );\n}\n\nexport default Activities;\n\n\n\n//WORKING\n/*\nimport React, { useState, useEffect } from 'react'\nimport { act } from 'react-dom/test-utils';\n\nfunction Activities() {\n    const [activity, setActivity] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n    function loadActivity() {\n        setIsLoading(true);\n        fetch(\"https://www.boredapi.com/api/activity\")\n        .then((response) => response.json())\n        .then((data) => {\n            setActivity([...activity, data]);\n            setIsLoading(false)\n        });\n    }\n\n    useEffect(() => {\n        loadActivity()\n      }, []);\n\n      if(isLoading) {\n        return <p> loading...</p>\n      }\n\n      return (\n        <div> \n            <ul> \n                {activity.map((currentActivity) => {\n                    return <li key = {currentActivity.key}> { currentActivity.activity } </li>\n                })}\n            </ul>\n          <button onClick={loadActivity}> Add One </button>\n        </div>\n    );\n}\n\nexport default Activities;\n*/","/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/components/PostList.js",[],"/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/hooks/useFetch.js",[],"/Users/david/Desktop/David/www/kite/src/components/groups/actions/NewGroup.js",["679","680","681","682","683","684","685","686"],"/Users/david/Desktop/David/www/kite/src/components/search/NewGroupSearchTS.js",["687","688","689","690","691","692","693","694"],"/Users/david/Desktop/David/www/kite/src/components/search/NewGroupSearch.js",["695","696","697","698","699","700","701","702"],"/Users/david/Desktop/David/www/kite/src/functions/hooks/useFetch.js",[],["703","704"],"/Users/david/Desktop/David/www/kite/src/functions/hooks/useGroupFriendsFetch.js",[],"/Users/david/Desktop/David/www/kite/src/components/groups/users/AddGroupUser.js",["705"],"import React, { useState } from 'react'\n\n\nconst AddGroupUser = ({addGroupUser, user }) => {\n  let userName = user.friendName\n\n  return (\n      <div> \n        <div className=''> \n          <p> {userName} </p>\n          <button onClick={() => addGroupUser(user)}>Add Me | {userName}</button>\n        </div>\n      </div>\n  );\n}\n\n\nexport default AddGroupUser;\n\n","/Users/david/Desktop/David/www/kite/src/components/groups/users/RemoveGroupUser.js",["706"],"import React, { useState } from 'react'\n\n\nconst RemoveGroupUser = ({removeGroupUser, user }) => {\n  let userName = user.friendName\n\n  return (\n      <div> \n        <div className=''> \n          <p> {userName} </p>\n          <button onClick={() => removeGroupUser(user)}>Remove Me | {userName}</button>\n        </div>\n      </div>\n  );\n}\n\n\nexport default RemoveGroupUser;\n\n","/Users/david/Desktop/David/www/kite/src/components/groups/actions/CreateGroup.js",["707","708","709","710","711"],{"ruleId":"712","replacedBy":"713"},{"ruleId":"714","replacedBy":"715"},{"ruleId":"716","severity":1,"message":"717","line":7,"column":10,"nodeType":"718","messageId":"719","endLine":7,"endColumn":18},{"ruleId":"716","severity":1,"message":"720","line":17,"column":8,"nodeType":"718","messageId":"719","endLine":17,"endColumn":16},{"ruleId":"716","severity":1,"message":"721","line":37,"column":10,"nodeType":"718","messageId":"719","endLine":37,"endColumn":22},{"ruleId":"722","severity":1,"message":"723","line":43,"column":28,"nodeType":"724","messageId":"725","endLine":43,"endColumn":30},{"ruleId":"716","severity":1,"message":"726","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":14},{"ruleId":"716","severity":1,"message":"727","line":6,"column":8,"nodeType":"718","messageId":"719","endLine":6,"endColumn":22},{"ruleId":"716","severity":1,"message":"728","line":9,"column":8,"nodeType":"718","messageId":"719","endLine":9,"endColumn":20},{"ruleId":"716","severity":1,"message":"729","line":10,"column":8,"nodeType":"718","messageId":"719","endLine":10,"endColumn":19},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"731","line":13,"column":9,"nodeType":"718","messageId":"719","endLine":13,"endColumn":17},{"ruleId":"722","severity":1,"message":"723","line":20,"column":28,"nodeType":"724","messageId":"725","endLine":20,"endColumn":30},{"ruleId":"732","severity":1,"message":"733","line":29,"column":4,"nodeType":"734","endLine":29,"endColumn":6,"suggestions":"735"},{"ruleId":"722","severity":1,"message":"723","line":11,"column":32,"nodeType":"724","messageId":"725","endLine":11,"endColumn":34},{"ruleId":"732","severity":1,"message":"736","line":16,"column":8,"nodeType":"734","endLine":16,"endColumn":10,"suggestions":"737"},{"ruleId":"716","severity":1,"message":"738","line":14,"column":11,"nodeType":"718","messageId":"719","endLine":14,"endColumn":26},{"ruleId":"716","severity":1,"message":"739","line":17,"column":23,"nodeType":"718","messageId":"719","endLine":17,"endColumn":37},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"740","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":18},{"ruleId":"716","severity":1,"message":"741","line":2,"column":20,"nodeType":"718","messageId":"719","endLine":2,"endColumn":33},{"ruleId":"716","severity":1,"message":"726","line":2,"column":48,"nodeType":"718","messageId":"719","endLine":2,"endColumn":52},{"ruleId":"716","severity":1,"message":"731","line":5,"column":9,"nodeType":"718","messageId":"719","endLine":5,"endColumn":17},{"ruleId":"716","severity":1,"message":"738","line":16,"column":11,"nodeType":"718","messageId":"719","endLine":16,"endColumn":26},{"ruleId":"716","severity":1,"message":"739","line":19,"column":23,"nodeType":"718","messageId":"719","endLine":19,"endColumn":37},{"ruleId":"722","severity":1,"message":"723","line":41,"column":17,"nodeType":"724","messageId":"725","endLine":41,"endColumn":19},{"ruleId":"742","severity":1,"message":"743","line":78,"column":1,"nodeType":"744","endLine":78,"endColumn":79},{"ruleId":"716","severity":1,"message":"745","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":37},{"ruleId":"716","severity":1,"message":"746","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":22},{"ruleId":"722","severity":1,"message":"723","line":14,"column":15,"nodeType":"724","messageId":"725","endLine":14,"endColumn":17},{"ruleId":"722","severity":1,"message":"723","line":16,"column":23,"nodeType":"724","messageId":"725","endLine":16,"endColumn":25},{"ruleId":"722","severity":1,"message":"723","line":18,"column":23,"nodeType":"724","messageId":"725","endLine":18,"endColumn":25},{"ruleId":"722","severity":1,"message":"723","line":20,"column":23,"nodeType":"724","messageId":"725","endLine":20,"endColumn":25},{"ruleId":"716","severity":1,"message":"747","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":17},{"ruleId":"722","severity":1,"message":"748","line":29,"column":41,"nodeType":"724","messageId":"725","endLine":29,"endColumn":43},{"ruleId":"716","severity":1,"message":"745","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":27},{"ruleId":"712","replacedBy":"749"},{"ruleId":"714","replacedBy":"750"},{"ruleId":"716","severity":1,"message":"751","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"726","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":14},{"ruleId":"716","severity":1,"message":"752","line":2,"column":16,"nodeType":"718","messageId":"719","endLine":2,"endColumn":27},{"ruleId":"716","severity":1,"message":"753","line":2,"column":42,"nodeType":"718","messageId":"719","endLine":2,"endColumn":57},{"ruleId":"716","severity":1,"message":"754","line":15,"column":13,"nodeType":"718","messageId":"719","endLine":15,"endColumn":24},{"ruleId":"716","severity":1,"message":"721","line":16,"column":12,"nodeType":"718","messageId":"719","endLine":16,"endColumn":24},{"ruleId":"716","severity":1,"message":"755","line":16,"column":26,"nodeType":"718","messageId":"719","endLine":16,"endColumn":41},{"ruleId":"722","severity":1,"message":"723","line":23,"column":15,"nodeType":"724","messageId":"725","endLine":23,"endColumn":17},{"ruleId":"722","severity":1,"message":"723","line":52,"column":27,"nodeType":"724","messageId":"725","endLine":52,"endColumn":29},{"ruleId":"716","severity":1,"message":"756","line":9,"column":28,"nodeType":"718","messageId":"719","endLine":9,"endColumn":42},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"751","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"745","line":1,"column":38,"nodeType":"718","messageId":"719","endLine":1,"endColumn":48},{"ruleId":"716","severity":1,"message":"751","line":1,"column":10,"nodeType":"718","messageId":"719","endLine":1,"endColumn":19},{"ruleId":"712","replacedBy":"757"},{"ruleId":"714","replacedBy":"758"},{"ruleId":"716","severity":1,"message":"730","line":1,"column":21,"nodeType":"718","messageId":"719","endLine":1,"endColumn":29},{"ruleId":"716","severity":1,"message":"745","line":1,"column":31,"nodeType":"718","messageId":"719","endLine":1,"endColumn":41},{"ruleId":"716","severity":1,"message":"731","line":6,"column":11,"nodeType":"718","messageId":"719","endLine":6,"endColumn":19},{"ruleId":"722","severity":1,"message":"723","line":14,"column":30,"nodeType":"724","messageId":"725","endLine":14,"endColumn":32},{"ruleId":"732","severity":1,"message":"759","line":56,"column":8,"nodeType":"734","endLine":56,"endColumn":20,"suggestions":"760"},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"751","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"745","line":1,"column":38,"nodeType":"718","messageId":"719","endLine":1,"endColumn":48},{"ruleId":"716","severity":1,"message":"761","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":18},{"ruleId":"716","severity":1,"message":"762","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":21},{"ruleId":"716","severity":1,"message":"746","line":4,"column":10,"nodeType":"718","messageId":"719","endLine":4,"endColumn":22},{"ruleId":"716","severity":1,"message":"727","line":5,"column":8,"nodeType":"718","messageId":"719","endLine":5,"endColumn":22},{"ruleId":"716","severity":1,"message":"747","line":6,"column":8,"nodeType":"718","messageId":"719","endLine":6,"endColumn":17},{"ruleId":"716","severity":1,"message":"763","line":19,"column":17,"nodeType":"718","messageId":"719","endLine":19,"endColumn":21},{"ruleId":"716","severity":1,"message":"764","line":46,"column":13,"nodeType":"718","messageId":"719","endLine":46,"endColumn":22},{"ruleId":"716","severity":1,"message":"765","line":6,"column":7,"nodeType":"718","messageId":"719","endLine":6,"endColumn":10},{"ruleId":"716","severity":1,"message":"764","line":24,"column":13,"nodeType":"718","messageId":"719","endLine":24,"endColumn":22},{"ruleId":"722","severity":1,"message":"723","line":36,"column":50,"nodeType":"724","messageId":"725","endLine":36,"endColumn":52},{"ruleId":"716","severity":1,"message":"763","line":48,"column":17,"nodeType":"718","messageId":"719","endLine":48,"endColumn":21},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"751","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"766","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":21},{"ruleId":"716","severity":1,"message":"767","line":2,"column":23,"nodeType":"718","messageId":"719","endLine":2,"endColumn":37},{"ruleId":"716","severity":1,"message":"768","line":19,"column":9,"nodeType":"718","messageId":"719","endLine":19,"endColumn":15},{"ruleId":"716","severity":1,"message":"769","line":24,"column":11,"nodeType":"718","messageId":"719","endLine":24,"endColumn":27},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"765","line":7,"column":7,"nodeType":"718","messageId":"719","endLine":7,"endColumn":10},{"ruleId":"716","severity":1,"message":"764","line":36,"column":11,"nodeType":"718","messageId":"719","endLine":36,"endColumn":20},{"ruleId":"722","severity":1,"message":"723","line":52,"column":45,"nodeType":"724","messageId":"725","endLine":52,"endColumn":47},{"ruleId":"716","severity":1,"message":"765","line":5,"column":7,"nodeType":"718","messageId":"719","endLine":5,"endColumn":10},{"ruleId":"716","severity":1,"message":"770","line":20,"column":9,"nodeType":"718","messageId":"719","endLine":20,"endColumn":27},{"ruleId":"716","severity":1,"message":"764","line":32,"column":11,"nodeType":"718","messageId":"719","endLine":32,"endColumn":20},{"ruleId":"722","severity":1,"message":"723","line":42,"column":39,"nodeType":"724","messageId":"725","endLine":42,"endColumn":41},{"ruleId":"722","severity":1,"message":"748","line":53,"column":56,"nodeType":"724","messageId":"725","endLine":53,"endColumn":58},{"ruleId":"716","severity":1,"message":"771","line":1,"column":10,"nodeType":"718","messageId":"719","endLine":1,"endColumn":23},{"ruleId":"722","severity":1,"message":"723","line":23,"column":34,"nodeType":"724","messageId":"725","endLine":23,"endColumn":36},{"ruleId":"716","severity":1,"message":"772","line":27,"column":17,"nodeType":"718","messageId":"719","endLine":27,"endColumn":27},{"ruleId":"716","severity":1,"message":"773","line":28,"column":17,"nodeType":"718","messageId":"719","endLine":28,"endColumn":31},{"ruleId":"722","severity":1,"message":"723","line":34,"column":34,"nodeType":"724","messageId":"725","endLine":34,"endColumn":36},{"ruleId":"742","severity":1,"message":"743","line":51,"column":1,"nodeType":"744","endLine":51,"endColumn":27},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"765","line":5,"column":7,"nodeType":"718","messageId":"719","endLine":5,"endColumn":10},{"ruleId":"716","severity":1,"message":"764","line":31,"column":13,"nodeType":"718","messageId":"719","endLine":31,"endColumn":22},{"ruleId":"722","severity":1,"message":"748","line":42,"column":48,"nodeType":"724","messageId":"725","endLine":42,"endColumn":50},{"ruleId":"712","replacedBy":"774"},{"ruleId":"714","replacedBy":"775"},{"ruleId":"716","severity":1,"message":"738","line":16,"column":11,"nodeType":"718","messageId":"719","endLine":16,"endColumn":26},{"ruleId":"716","severity":1,"message":"739","line":19,"column":23,"nodeType":"718","messageId":"719","endLine":19,"endColumn":37},{"ruleId":"716","severity":1,"message":"726","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":14},{"ruleId":"716","severity":1,"message":"776","line":23,"column":30,"nodeType":"718","messageId":"719","endLine":23,"endColumn":37},{"ruleId":"716","severity":1,"message":"777","line":23,"column":39,"nodeType":"718","messageId":"719","endLine":23,"endColumn":44},{"ruleId":"716","severity":1,"message":"726","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":14},{"ruleId":"712","replacedBy":"778"},{"ruleId":"714","replacedBy":"779"},{"ruleId":"716","severity":1,"message":"727","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":22},{"ruleId":"716","severity":1,"message":"780","line":14,"column":12,"nodeType":"718","messageId":"719","endLine":14,"endColumn":27},{"ruleId":"716","severity":1,"message":"721","line":14,"column":29,"nodeType":"718","messageId":"719","endLine":14,"endColumn":41},{"ruleId":"716","severity":1,"message":"745","line":2,"column":17,"nodeType":"718","messageId":"719","endLine":2,"endColumn":27},{"ruleId":"716","severity":1,"message":"730","line":2,"column":29,"nodeType":"718","messageId":"719","endLine":2,"endColumn":37},{"ruleId":"716","severity":1,"message":"751","line":2,"column":39,"nodeType":"718","messageId":"719","endLine":2,"endColumn":48},{"ruleId":"716","severity":1,"message":"762","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":21},{"ruleId":"716","severity":1,"message":"746","line":4,"column":10,"nodeType":"718","messageId":"719","endLine":4,"endColumn":22},{"ruleId":"716","severity":1,"message":"738","line":20,"column":11,"nodeType":"718","messageId":"719","endLine":20,"endColumn":26},{"ruleId":"716","severity":1,"message":"739","line":23,"column":23,"nodeType":"718","messageId":"719","endLine":23,"endColumn":37},{"ruleId":"716","severity":1,"message":"781","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":13},{"ruleId":"716","severity":1,"message":"764","line":41,"column":13,"nodeType":"718","messageId":"719","endLine":41,"endColumn":22},{"ruleId":"716","severity":1,"message":"782","line":45,"column":19,"nodeType":"718","messageId":"719","endLine":45,"endColumn":29},{"ruleId":"716","severity":1,"message":"754","line":46,"column":19,"nodeType":"718","messageId":"719","endLine":46,"endColumn":30},{"ruleId":"716","severity":1,"message":"766","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":21},{"ruleId":"716","severity":1,"message":"767","line":2,"column":23,"nodeType":"718","messageId":"719","endLine":2,"endColumn":37},{"ruleId":"716","severity":1,"message":"781","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":13},{"ruleId":"716","severity":1,"message":"781","line":4,"column":8,"nodeType":"718","messageId":"719","endLine":4,"endColumn":13},{"ruleId":"716","severity":1,"message":"764","line":41,"column":13,"nodeType":"718","messageId":"719","endLine":41,"endColumn":22},{"ruleId":"716","severity":1,"message":"782","line":45,"column":19,"nodeType":"718","messageId":"719","endLine":45,"endColumn":29},{"ruleId":"716","severity":1,"message":"754","line":46,"column":19,"nodeType":"718","messageId":"719","endLine":46,"endColumn":30},{"ruleId":"716","severity":1,"message":"781","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":13},{"ruleId":"716","severity":1,"message":"764","line":42,"column":13,"nodeType":"718","messageId":"719","endLine":42,"endColumn":22},{"ruleId":"716","severity":1,"message":"754","line":46,"column":19,"nodeType":"718","messageId":"719","endLine":46,"endColumn":30},{"ruleId":"716","severity":1,"message":"781","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":13},{"ruleId":"716","severity":1,"message":"764","line":43,"column":13,"nodeType":"718","messageId":"719","endLine":43,"endColumn":22},{"ruleId":"716","severity":1,"message":"754","line":47,"column":19,"nodeType":"718","messageId":"719","endLine":47,"endColumn":30},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"751","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"745","line":1,"column":38,"nodeType":"718","messageId":"719","endLine":1,"endColumn":48},{"ruleId":"716","severity":1,"message":"726","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":14},{"ruleId":"716","severity":1,"message":"754","line":15,"column":11,"nodeType":"718","messageId":"719","endLine":15,"endColumn":22},{"ruleId":"716","severity":1,"message":"763","line":19,"column":17,"nodeType":"718","messageId":"719","endLine":19,"endColumn":21},{"ruleId":"716","severity":1,"message":"764","line":45,"column":13,"nodeType":"718","messageId":"719","endLine":45,"endColumn":22},{"ruleId":"722","severity":1,"message":"723","line":54,"column":50,"nodeType":"724","messageId":"725","endLine":54,"endColumn":52},{"ruleId":"716","severity":1,"message":"761","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":18},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"751","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"745","line":1,"column":38,"nodeType":"718","messageId":"719","endLine":1,"endColumn":48},{"ruleId":"716","severity":1,"message":"761","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":18},{"ruleId":"716","severity":1,"message":"762","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":21},{"ruleId":"716","severity":1,"message":"727","line":4,"column":8,"nodeType":"718","messageId":"719","endLine":4,"endColumn":22},{"ruleId":"716","severity":1,"message":"783","line":8,"column":8,"nodeType":"718","messageId":"719","endLine":8,"endColumn":22},{"ruleId":"716","severity":1,"message":"784","line":9,"column":8,"nodeType":"718","messageId":"719","endLine":9,"endColumn":22},{"ruleId":"716","severity":1,"message":"785","line":10,"column":8,"nodeType":"718","messageId":"719","endLine":10,"endColumn":18},{"ruleId":"716","severity":1,"message":"786","line":11,"column":8,"nodeType":"718","messageId":"719","endLine":11,"endColumn":21},{"ruleId":"716","severity":1,"message":"787","line":12,"column":8,"nodeType":"718","messageId":"719","endLine":12,"endColumn":24},{"ruleId":"716","severity":1,"message":"788","line":13,"column":8,"nodeType":"718","messageId":"719","endLine":13,"endColumn":19},{"ruleId":"716","severity":1,"message":"789","line":14,"column":8,"nodeType":"718","messageId":"719","endLine":14,"endColumn":26},{"ruleId":"716","severity":1,"message":"790","line":15,"column":8,"nodeType":"718","messageId":"719","endLine":15,"endColumn":19},{"ruleId":"716","severity":1,"message":"791","line":16,"column":8,"nodeType":"718","messageId":"719","endLine":16,"endColumn":26},{"ruleId":"716","severity":1,"message":"792","line":18,"column":8,"nodeType":"718","messageId":"719","endLine":18,"endColumn":26},{"ruleId":"716","severity":1,"message":"793","line":19,"column":8,"nodeType":"718","messageId":"719","endLine":19,"endColumn":23},{"ruleId":"716","severity":1,"message":"794","line":20,"column":8,"nodeType":"718","messageId":"719","endLine":20,"endColumn":28},{"ruleId":"716","severity":1,"message":"795","line":21,"column":8,"nodeType":"718","messageId":"719","endLine":21,"endColumn":15},{"ruleId":"716","severity":1,"message":"796","line":22,"column":8,"nodeType":"718","messageId":"719","endLine":22,"endColumn":16},{"ruleId":"716","severity":1,"message":"797","line":24,"column":8,"nodeType":"718","messageId":"719","endLine":24,"endColumn":20},{"ruleId":"716","severity":1,"message":"798","line":25,"column":8,"nodeType":"718","messageId":"719","endLine":25,"endColumn":15},{"ruleId":"716","severity":1,"message":"754","line":35,"column":9,"nodeType":"718","messageId":"719","endLine":35,"endColumn":20},{"ruleId":"716","severity":1,"message":"799","line":36,"column":9,"nodeType":"718","messageId":"719","endLine":36,"endColumn":21},{"ruleId":"716","severity":1,"message":"766","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":21},{"ruleId":"716","severity":1,"message":"767","line":2,"column":33,"nodeType":"718","messageId":"719","endLine":2,"endColumn":47},{"ruleId":"716","severity":1,"message":"763","line":21,"column":17,"nodeType":"718","messageId":"719","endLine":21,"endColumn":21},{"ruleId":"716","severity":1,"message":"764","line":26,"column":13,"nodeType":"718","messageId":"719","endLine":26,"endColumn":22},{"ruleId":"716","severity":1,"message":"776","line":26,"column":30,"nodeType":"718","messageId":"719","endLine":26,"endColumn":37},{"ruleId":"716","severity":1,"message":"777","line":26,"column":39,"nodeType":"718","messageId":"719","endLine":26,"endColumn":44},{"ruleId":"716","severity":1,"message":"763","line":16,"column":13,"nodeType":"718","messageId":"719","endLine":16,"endColumn":17},{"ruleId":"716","severity":1,"message":"763","line":23,"column":15,"nodeType":"718","messageId":"719","endLine":23,"endColumn":19},{"ruleId":"716","severity":1,"message":"800","line":23,"column":21,"nodeType":"718","messageId":"719","endLine":23,"endColumn":26},{"ruleId":"716","severity":1,"message":"801","line":20,"column":30,"nodeType":"718","messageId":"719","endLine":20,"endColumn":45},{"ruleId":"716","severity":1,"message":"730","line":1,"column":21,"nodeType":"718","messageId":"719","endLine":1,"endColumn":29},{"ruleId":"732","severity":1,"message":"802","line":21,"column":8,"nodeType":"734","endLine":21,"endColumn":15,"suggestions":"803"},{"ruleId":"716","severity":1,"message":"751","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"804","line":23,"column":10,"nodeType":"718","messageId":"719","endLine":23,"endColumn":23},{"ruleId":"716","severity":1,"message":"805","line":23,"column":25,"nodeType":"718","messageId":"719","endLine":23,"endColumn":40},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"806","line":2,"column":8,"nodeType":"718","messageId":"719","endLine":2,"endColumn":23},{"ruleId":"716","severity":1,"message":"807","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":23},{"ruleId":"712","replacedBy":"808"},{"ruleId":"714","replacedBy":"809"},{"ruleId":"716","severity":1,"message":"810","line":21,"column":21,"nodeType":"718","messageId":"719","endLine":21,"endColumn":28},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"806","line":2,"column":8,"nodeType":"718","messageId":"719","endLine":2,"endColumn":23},{"ruleId":"716","severity":1,"message":"807","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":23},{"ruleId":"716","severity":1,"message":"811","line":18,"column":5,"nodeType":"718","messageId":"719","endLine":18,"endColumn":10},{"ruleId":"732","severity":1,"message":"812","line":41,"column":6,"nodeType":"734","endLine":41,"endColumn":8,"suggestions":"813"},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"814","line":7,"column":7,"nodeType":"718","messageId":"719","endLine":7,"endColumn":19},{"ruleId":"716","severity":1,"message":"754","line":11,"column":9,"nodeType":"718","messageId":"719","endLine":11,"endColumn":20},{"ruleId":"716","severity":1,"message":"815","line":18,"column":14,"nodeType":"718","messageId":"719","endLine":18,"endColumn":22},{"ruleId":"716","severity":1,"message":"800","line":19,"column":13,"nodeType":"718","messageId":"719","endLine":19,"endColumn":18},{"ruleId":"716","severity":1,"message":"816","line":1,"column":10,"nodeType":"718","messageId":"719","endLine":1,"endColumn":27},{"ruleId":"716","severity":1,"message":"817","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":14},{"ruleId":"716","severity":1,"message":"818","line":6,"column":12,"nodeType":"718","messageId":"719","endLine":6,"endColumn":17},{"ruleId":"716","severity":1,"message":"819","line":6,"column":19,"nodeType":"718","messageId":"719","endLine":6,"endColumn":27},{"ruleId":"716","severity":1,"message":"820","line":7,"column":11,"nodeType":"718","messageId":"719","endLine":7,"endColumn":19},{"ruleId":"716","severity":1,"message":"821","line":16,"column":11,"nodeType":"718","messageId":"719","endLine":16,"endColumn":16},{"ruleId":"716","severity":1,"message":"822","line":27,"column":9,"nodeType":"718","messageId":"719","endLine":27,"endColumn":13},{"ruleId":"716","severity":1,"message":"823","line":43,"column":9,"nodeType":"718","messageId":"719","endLine":43,"endColumn":12},{"ruleId":"824","severity":1,"message":"825","line":52,"column":9,"nodeType":"718","messageId":"826","endLine":52,"endColumn":14},{"ruleId":"716","severity":1,"message":"827","line":52,"column":9,"nodeType":"718","messageId":"719","endLine":52,"endColumn":14},{"ruleId":"828","severity":1,"message":"829","line":56,"column":5,"nodeType":"718","messageId":"830","endLine":56,"endColumn":6},{"ruleId":"828","severity":1,"message":"829","line":62,"column":17,"nodeType":"718","messageId":"830","endLine":62,"endColumn":18},{"ruleId":"716","severity":1,"message":"831","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":33},{"ruleId":"716","severity":1,"message":"832","line":1,"column":35,"nodeType":"718","messageId":"719","endLine":1,"endColumn":42},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"833","line":2,"column":8,"nodeType":"718","messageId":"719","endLine":2,"endColumn":18},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"751","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"834","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":13},{"ruleId":"732","severity":1,"message":"835","line":20,"column":10,"nodeType":"734","endLine":20,"endColumn":12,"suggestions":"836"},{"ruleId":"716","severity":1,"message":"837","line":26,"column":17,"nodeType":"718","messageId":"719","endLine":26,"endColumn":26},{"ruleId":"716","severity":1,"message":"777","line":26,"column":28,"nodeType":"718","messageId":"719","endLine":26,"endColumn":33},{"ruleId":"732","severity":1,"message":"838","line":60,"column":8,"nodeType":"734","endLine":60,"endColumn":22,"suggestions":"839"},{"ruleId":"722","severity":1,"message":"748","line":72,"column":57,"nodeType":"724","messageId":"725","endLine":72,"endColumn":59},{"ruleId":"722","severity":1,"message":"748","line":82,"column":57,"nodeType":"724","messageId":"725","endLine":82,"endColumn":59},{"ruleId":"716","severity":1,"message":"763","line":95,"column":17,"nodeType":"718","messageId":"719","endLine":95,"endColumn":21},{"ruleId":"716","severity":1,"message":"763","line":100,"column":17,"nodeType":"718","messageId":"719","endLine":100,"endColumn":21},{"ruleId":"716","severity":1,"message":"764","line":133,"column":13,"nodeType":"718","messageId":"719","endLine":133,"endColumn":22},{"ruleId":"716","severity":1,"message":"766","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":21},{"ruleId":"716","severity":1,"message":"767","line":2,"column":33,"nodeType":"718","messageId":"719","endLine":2,"endColumn":47},{"ruleId":"722","severity":1,"message":"723","line":20,"column":62,"nodeType":"724","messageId":"725","endLine":20,"endColumn":64},{"ruleId":"722","severity":1,"message":"723","line":26,"column":24,"nodeType":"724","messageId":"725","endLine":26,"endColumn":26},{"ruleId":"716","severity":1,"message":"763","line":47,"column":17,"nodeType":"718","messageId":"719","endLine":47,"endColumn":21},{"ruleId":"716","severity":1,"message":"764","line":52,"column":13,"nodeType":"718","messageId":"719","endLine":52,"endColumn":22},{"ruleId":"716","severity":1,"message":"776","line":52,"column":30,"nodeType":"718","messageId":"719","endLine":52,"endColumn":37},{"ruleId":"716","severity":1,"message":"777","line":52,"column":39,"nodeType":"718","messageId":"719","endLine":52,"endColumn":44},{"ruleId":"716","severity":1,"message":"766","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":21},{"ruleId":"716","severity":1,"message":"767","line":2,"column":33,"nodeType":"718","messageId":"719","endLine":2,"endColumn":47},{"ruleId":"722","severity":1,"message":"723","line":20,"column":62,"nodeType":"724","messageId":"725","endLine":20,"endColumn":64},{"ruleId":"722","severity":1,"message":"723","line":26,"column":24,"nodeType":"724","messageId":"725","endLine":26,"endColumn":26},{"ruleId":"716","severity":1,"message":"763","line":47,"column":17,"nodeType":"718","messageId":"719","endLine":47,"endColumn":21},{"ruleId":"716","severity":1,"message":"764","line":52,"column":13,"nodeType":"718","messageId":"719","endLine":52,"endColumn":22},{"ruleId":"716","severity":1,"message":"776","line":52,"column":30,"nodeType":"718","messageId":"719","endLine":52,"endColumn":37},{"ruleId":"716","severity":1,"message":"777","line":52,"column":39,"nodeType":"718","messageId":"719","endLine":52,"endColumn":44},{"ruleId":"712","replacedBy":"840"},{"ruleId":"714","replacedBy":"841"},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"730","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"806","line":4,"column":8,"nodeType":"718","messageId":"719","endLine":4,"endColumn":23},{"ruleId":"716","severity":1,"message":"763","line":48,"column":15,"nodeType":"718","messageId":"719","endLine":48,"endColumn":19},{"ruleId":"716","severity":1,"message":"842","line":79,"column":9,"nodeType":"718","messageId":"719","endLine":79,"endColumn":21},{"ruleId":"716","severity":1,"message":"843","line":96,"column":9,"nodeType":"718","messageId":"719","endLine":96,"endColumn":24},{"ruleId":"716","severity":1,"message":"764","line":115,"column":11,"nodeType":"718","messageId":"719","endLine":115,"endColumn":20},"no-native-reassign",["844"],"no-negated-in-lhs",["845"],"no-unused-vars","'sayHello' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'userLoggedIn' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'useLoginStatus' is defined but never used.","'FriendSearch' is defined but never used.","'CreateGroup' is defined but never used.","'useState' is defined but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoginState'. Either include it or remove the dependency array.","ArrayExpression",["846"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["847"],"'loggedInMessage' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'Navigate' is defined but never used.","'BrowserRouter' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useContext' is defined but never used.","'LoginContext' is defined but never used.","'functions' is defined but never used.","Expected '!==' and instead saw '!='.",["844"],["845"],"'useEffect' is defined but never used.","'useLocation' is defined but never used.","'useResolvedPath' is defined but never used.","'currentUser' is assigned a value but never used.","'setUserLoggedIn' is assigned a value but never used.","'setLoginStatus' is assigned a value but never used.",["844"],["845"],"React Hook useEffect has missing dependencies: 'data' and 'userName'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["848"],"'useQuery' is defined but never used.","'useNavigate' is defined but never used.","'name' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'api' is assigned a value but never used.","'useMutation' is defined but never used.","'useQueryClient' is defined but never used.","'postID' is assigned a value but never used.","'handleUnLikePost' is assigned a value but never used.","'postUserLikesArray' is assigned a value but never used.","'useDebugValue' is defined but never used.","'refreshURL' is assigned a value but never used.","'refreshOutcome' is assigned a value but never used.",["844"],["845"],"'isError' is assigned a value but never used.","'error' is assigned a value but never used.",["844"],["845"],"'currentUserTemp' is assigned a value but never used.","'axios' is defined but never used.","'statusCode' is assigned a value but never used.","'SimpleGetUsers' is defined but never used.","'SimpleCheckbox' is defined but never used.","'SimpleEdit' is defined but never used.","'SimpleAddUser' is defined but never used.","'SimpleUserSearch' is defined but never used.","'SimpleInput' is defined but never used.","'SimpleLocalStorage' is defined but never used.","'SimpleArray' is defined but never used.","'SimpleButtonParent' is defined but never used.","'SimpleAddGroupUser' is defined but never used.","'SimpleUseEffect' is defined but never used.","'SimpleSaveToStateAPI' is defined but never used.","'Example' is defined but never used.","'Learning' is defined but never used.","'AutoComplete' is defined but never used.","'MainApp' is defined but never used.","'searchString' is assigned a value but never used.","'value' is assigned a value but never used.","'setSearchString' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array.",["849"],"'newGroupUsers' is assigned a value but never used.","'addNewGroupUser' is assigned a value but never used.","'useLocalStorage' is defined but never used.","'useUpdateLogger' is defined but never used.",["844"],["845"],"'addUser' is assigned a value but never used.","'merry' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'availableFriends' and 'currentGroupUsers'. Either include them or remove the dependency array.",["850"],"'axiosRequest' is assigned a value but never used.","'onChange' is defined but never used.","'continueStatement' is defined but never used.","'func' is defined but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'inputRef' is assigned a value but never used.","'video' is assigned a value but never used.","'obj2' is assigned a value but never used.","'arr' is assigned a value but never used.","no-redeclare","'bound' is already defined.","redeclared","'bound' is assigned a value but never used.","no-use-before-define","'a' was used before it was defined.","usedBeforeDefined","'useRef' is defined but never used.","'useMemo' is defined but never used.","'Activities' is defined but never used.","'act' is defined but never used.","React Hook useEffect has a missing dependency: 'loadActivity'. Either include it or remove the dependency array.",["851"],"'isPending' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data' and 'newGroupUsers'. Either include them or remove the dependency array.",["852"],["844"],["845"],"'addGroupUser' is assigned a value but never used.","'removeGroupUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"853","fix":"854"},{"desc":"855","fix":"856"},{"desc":"857","fix":"858"},{"desc":"859","fix":"860"},{"desc":"861","fix":"862"},{"desc":"863","fix":"864"},{"desc":"865","fix":"866"},"Update the dependencies array to be: [setLoginState]",{"range":"867","text":"868"},"Update the dependencies array to be: [navigate]",{"range":"869","text":"870"},"Update the dependencies array to be: [data, refreshURL, userName]",{"range":"871","text":"872"},"Update the dependencies array to be: [key, value]",{"range":"873","text":"874"},"Update the dependencies array to be: [availableFriends, currentGroupUsers]",{"range":"875","text":"876"},"Update the dependencies array to be: [loadActivity]",{"range":"877","text":"878"},"Update the dependencies array to be: [data, newGroupUsers, searchString]",{"range":"879","text":"880"},[1046,1048],"[setLoginState]",[455,457],"[navigate]",[1468,1480],"[data, refreshURL, userName]",[549,556],"[key, value]",[1217,1219],"[availableFriends, currentGroupUsers]",[558,560],"[loadActivity]",[2209,2223],"[data, newGroupUsers, searchString]"]