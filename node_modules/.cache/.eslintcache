[{"/Users/chavasqu/Desktop/David/www/kite/src/index.js":"1","/Users/chavasqu/Desktop/David/www/kite/src/App.js":"2","/Users/chavasqu/Desktop/David/www/kite/src/pages/IndividualGroup.js":"3","/Users/chavasqu/Desktop/David/www/kite/src/pages/Register.js":"4","/Users/chavasqu/Desktop/David/www/kite/src/pages/Login.js":"5","/Users/chavasqu/Desktop/David/www/kite/src/pages/UserProfile.js":"6","/Users/chavasqu/Desktop/David/www/kite/src/pages/Groups.js":"7","/Users/chavasqu/Desktop/David/www/kite/src/pages/Users.js":"8","/Users/chavasqu/Desktop/David/www/kite/src/components/posts/Posts.js":"9","/Users/chavasqu/Desktop/David/www/kite/src/components/posts/IndividualPost.js":"10"},{"size":219,"mtime":1654554350558,"results":"11","hashOfConfig":"12"},{"size":4307,"mtime":1661126697226,"results":"13","hashOfConfig":"12"},{"size":368,"mtime":1661299906614,"results":"14","hashOfConfig":"12"},{"size":2115,"mtime":1661384495395,"results":"15","hashOfConfig":"12"},{"size":2854,"mtime":1661384468879,"results":"16","hashOfConfig":"12"},{"size":436,"mtime":1661119934564,"results":"17","hashOfConfig":"12"},{"size":2436,"mtime":1661125635735,"results":"18","hashOfConfig":"12"},{"size":124,"mtime":1661124289524,"results":"19","hashOfConfig":"12"},{"size":1186,"mtime":1661299744126,"results":"20","hashOfConfig":"12"},{"size":1156,"mtime":1661300275882,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1pmga9",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"/Users/chavasqu/Desktop/David/www/kite/src/index.js",[],["46","47"],"/Users/chavasqu/Desktop/David/www/kite/src/App.js",[],"/Users/chavasqu/Desktop/David/www/kite/src/pages/IndividualGroup.js",[],"/Users/chavasqu/Desktop/David/www/kite/src/pages/Register.js",["48","49"],"/Users/chavasqu/Desktop/David/www/kite/src/pages/Login.js",["50","51","52"],"/Users/chavasqu/Desktop/David/www/kite/src/pages/UserProfile.js",[],"/Users/chavasqu/Desktop/David/www/kite/src/pages/Groups.js",["53","54"],"import React, { useState } from 'react';\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\n\n\nfunction Groups() {\n  let navigate = useNavigate();\n  const [groups, setGroups] = useState([\n    { groupName: 'Music!', groupID: 70 },\n    { groupName: 'Hike', groupID: 77 },\n    { groupName: 'Games', groupID: 78 }\n  ])\n\n  return (\n    <div className=\"user\">\n\n      <div className='holder'>\n        <p> Groups </p>\n        {groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupName } </Link>\n            <p>{ group.groupID }</p>\n          </div>\n        ))}\n      </div>\n\n      <div className='holder'>\n        <button onClick={ () => navigate('/users') } > Users </button>\n      </div>\n    \n    </div>\n  );\n}\n\nexport default Groups;\n\n\n\n\n//WORKS\n/*\n          <BrowserRouter>\n            <Link to = {`/group/${group.groupID}`}>\n              <h4>{ group.groupName }</h4>\n            </Link>       \n          </BrowserRouter>\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport fetchGroups from './../functions/useFetchGroups';\n\n//http://localhost:3000/?group_id=77\n//http://localhost:3003/group/user/davey\n\n/*\nconst Groups = () => {\n  const groupUser = \"davey\";\n  const groupsURL = 'http://localhost:3003/group/user/' + groupUser;\n\n  const { data, isPending, error } = fetchGroups(groupsURL)\n  console.log(\"OUTPUT\");\n  console.log(data);\n  console.log(isPending);\n  console.log(error);\n  console.log(\"OUTPUT\");\n  //const currentPosts = data;\n\n  const [groups, setGroups] = useState([\n    { groupName: 'Music!', groupID: 70 },\n    { groupName: 'Hike', groupID: 77 },\n    { groupName: 'Games', groupID: 78 }\n  ])\n\n  return (\n    <div className=\"\">\n      {groups.map(group => (\n        <div className=\"group\" key={ group.groupID } >\n          <Link to = {`/group/${group.groupID}`}>\n           <h4>{ group.groupName }</h4>\n          </Link>\n          <p>{ group.groupID }</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n \n\nexport default Groups;\n*/\n\n/*\nconst Groups = () => {\n  \n  return (\n    <div className=\"\">\n      {groups.map(group => (\n        <div className=\"group\" key={ group.groupID } >\n          <Link to = {`/group/${group.groupID}`}>\n           <h4>{ group.groupName }</h4>\n          </Link>\n          <p>{ group.groupID }</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n \n\nexport default Groups;\n*/","/Users/chavasqu/Desktop/David/www/kite/src/pages/Users.js",[],"/Users/chavasqu/Desktop/David/www/kite/src/components/posts/Posts.js",["55"],"import React from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios'\nimport IndividualPost from './IndividualPost';\n\nasync function getPosts(groupID) {\n  const postErrorURL = \"/posts/group/error\";\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \n  const { data } = await axios.get(postURL)\n  return data\n} \n\nconst Posts = (props) => {\n  const groupID = props.groupID;\n  \n  const { isLoading, isError, data, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID))\n  const currentPosts = data;\n  console.log(isLoading)\n  console.log(isError)\n  //console.log(data)\n  console.log(error)\n\n  return (\n  <div className=\"posts\">\n       <p> Posts </p>\n      { isError && <div> There was an error fetching the posts </div>}\n      { isLoading && <div> loading... </div>}\n      { data && <IndividualPost posts = { currentPosts } title=\"The posts!\" />}\n      {console.log(data)}\n  </div>\n  );\n  }\nexport default Posts;\n\n/*\nconst getPostsAnon = async (groupID) => {\n  const postErrorURL = \"/posts/group/error\";\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \n  const { data } = await axios.get(postURL)\n  return data\n}\n*/\n","/Users/chavasqu/Desktop/David/www/kite/src/components/posts/IndividualPost.js",["56"],"const IndividualPost = (props) => {\n    const posts = props.posts;\n    const title = props.title;\n\n    const likePost = (e) => {\n        console.log(\"you liked!\");\n        console.log(e);\n    }\n\n    return (\n        <div className = \"post-list\">\n            { posts.map((post) => (\n                <div className=\"post\" key={ post.postID }>\n                    <p className = \"post-text\"> { post.postCaption } </p>\n                    <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>      \n                    <button onClick={ likePost }> Like </button>                         \n                </div>\n            ))}\n        </div>\n        );\n    }  \n\nexport default IndividualPost;\n\n/*\nconst App = () => {\n  const arr = ['Austria', 'Belgium', 'Canada'];\n\n  const handleClick = (event, key) => {\n    console.log(event.target);\n    console.log('key index: ', key);\n  };\n\n  return (\n    <div>\n      {arr.map((element, key) => (\n        <div onClick={event => handleClick(event, key)} key={key}>\n          {element}\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n\n*/",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":1,"column":28,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":1,"column":28,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":43,"column":39,"nodeType":"68","messageId":"69","endLine":43,"endColumn":41},{"ruleId":"61","severity":1,"message":"70","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":23},{"ruleId":"61","severity":1,"message":"71","line":7,"column":18,"nodeType":"63","messageId":"64","endLine":7,"endColumn":27},{"ruleId":"61","severity":1,"message":"72","line":7,"column":9,"nodeType":"63","messageId":"64","endLine":7,"endColumn":21},{"ruleId":"61","severity":1,"message":"73","line":3,"column":11,"nodeType":"63","messageId":"64","endLine":3,"endColumn":16},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'BrowserRouter' is defined but never used.","'setGroups' is assigned a value but never used.","'postErrorURL' is assigned a value but never used.","'title' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]