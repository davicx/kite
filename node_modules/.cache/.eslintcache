[{"C:\\wamp\\www\\kite\\src\\index.js":"1","C:\\wamp\\www\\kite\\src\\App.js":"2","C:\\wamp\\www\\kite\\src\\functions\\functions.js":"3","C:\\wamp\\www\\kite\\src\\pages\\LoginPage.js":"4","C:\\wamp\\www\\kite\\src\\pages\\Home.js":"5","C:\\wamp\\www\\kite\\src\\pages\\GroupsPage.js":"6","C:\\wamp\\www\\kite\\src\\pages\\ProfilePage.js":"7","C:\\wamp\\www\\kite\\src\\functions\\context\\LoginContext.js":"8","C:\\wamp\\www\\kite\\src\\pages\\NotFound.js":"9","C:\\wamp\\www\\kite\\src\\pages\\IndividualGroup.js":"10","C:\\wamp\\www\\kite\\src\\pages\\RegisterPage.js":"11","C:\\wamp\\www\\kite\\src\\components\\login\\LoginUser.js":"12","C:\\wamp\\www\\kite\\src\\components\\login\\LoginStatus.js":"13","C:\\wamp\\www\\kite\\src\\components\\login\\Refresh.js":"14","C:\\wamp\\www\\kite\\src\\components\\login\\LogoutUser.js":"15","C:\\wamp\\www\\kite\\src\\components\\posts\\Posts.js":"16","C:\\wamp\\www\\kite\\src\\components\\groups\\GroupList.js":"17","C:\\wamp\\www\\kite\\src\\components\\login\\RegisterUser.js":"18","C:\\wamp\\www\\kite\\src\\components\\posts\\IndividualPosts.js":"19","C:\\wamp\\www\\kite\\src\\components\\posts\\IndividualPost.js":"20"},{"size":421,"mtime":1671748527274,"results":"21","hashOfConfig":"22"},{"size":2220,"mtime":1672271199683,"results":"23","hashOfConfig":"22"},{"size":935,"mtime":1671748527262,"results":"24","hashOfConfig":"22"},{"size":3136,"mtime":1671836309113,"results":"25","hashOfConfig":"22"},{"size":615,"mtime":1671748527277,"results":"26","hashOfConfig":"22"},{"size":6246,"mtime":1671840304778,"results":"27","hashOfConfig":"22"},{"size":1983,"mtime":1671836399036,"results":"28","hashOfConfig":"22"},{"size":90,"mtime":1671748527258,"results":"29","hashOfConfig":"22"},{"size":854,"mtime":1671748527282,"results":"30","hashOfConfig":"22"},{"size":1494,"mtime":1672270812065,"results":"31","hashOfConfig":"22"},{"size":294,"mtime":1671748527282,"results":"32","hashOfConfig":"22"},{"size":11340,"mtime":1671836742316,"results":"33","hashOfConfig":"22"},{"size":1461,"mtime":1671748527242,"results":"34","hashOfConfig":"22"},{"size":1023,"mtime":1671748527248,"results":"35","hashOfConfig":"22"},{"size":6291,"mtime":1671748527247,"results":"36","hashOfConfig":"22"},{"size":3610,"mtime":1672619412221,"results":"37","hashOfConfig":"22"},{"size":3907,"mtime":1671922922473,"results":"38","hashOfConfig":"22"},{"size":6373,"mtime":1671748527249,"results":"39","hashOfConfig":"22"},{"size":774,"mtime":1672619553195,"results":"40","hashOfConfig":"22"},{"size":0,"mtime":1672619544475,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"u2ftmt",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\wamp\\www\\kite\\src\\index.js",[],["98","99"],"C:\\wamp\\www\\kite\\src\\App.js",["100","101","102","103"],"import React, { useState, useEffect } from 'react';\r\nimport { Route, Routes, Link } from 'react-router-dom'\r\nimport { QueryClientProvider, QueryClient } from 'react-query';\r\n\r\n//Functions \r\nimport { sayHello } from './functions/functions';\r\n\r\n//Style \r\nimport './style/style.css';\r\nimport './style/external/normalize.css';\r\n\r\n//Pages\r\nimport Home from './pages/Home';\r\nimport Login from './pages/LoginPage';\r\nimport Register from './pages/RegisterPage';\r\nimport Groups from './pages/GroupsPage';\r\nimport Profile from './pages/ProfilePage';\r\nimport NotFound from './pages/NotFound';\r\nimport IndividualGroup from './pages/IndividualGroup';\r\nimport { LoginContext } from './functions/context/LoginContext';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nfunction App() {\r\n  const [currentUser, setLoginState] = useState('null');\r\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n     const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n     const currentUserLoggedIn = JSON.parse(data);\r\n     setLoginState(currentUserLoggedIn);\r\n    if(currentUserLoggedIn == 'null') {\r\n      setUserLoggedIn(false);\r\n    } else {\r\n      setUserLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        <QueryClientProvider client={queryClient}>\r\n          <LoginContext.Provider value = {{currentUser, setLoginState}} > \r\n\r\n            <nav className=\"navBar\">\r\n              <Link className=\"navLink\" to=\"/login\">Login </Link>\r\n              <Link className=\"navLink\" to=\"/groups\"> Groups </Link>\r\n              <Link className=\"navLink\" to=\"/profile\"> Profile </Link>\r\n            </nav>  \r\n            \r\n            <Routes>      \r\n              <Route path=\"/\" element={<Home/>} />\r\n              <Route path=\"/login\" element={<Login/>} />\r\n              <Route path=\"/groups\" element={<Groups/>} />\r\n              <Route path = \"/group/:groupID\" element = {<IndividualGroup />} />   =\r\n              <Route path=\"/profile\" element={<Profile/>} />\r\n              <Route path=\"*\" element={ <NotFound /> } />       \r\n            </Routes>\r\n          </LoginContext.Provider>   \r\n        </QueryClientProvider>\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","C:\\wamp\\www\\kite\\src\\functions\\functions.js",["104","105","106"],"import { useState, useEffect } from 'react';\r\n\r\n/*\r\n\r\n/* FUNCTIONS \r\nFUNCTIONS A: Login Functions \r\n\t1) Function A1: Login a User \r\n\t2) Function A2: Logout a User  \r\n\t3) Function A3: Get Login Status \r\n\r\n*/\r\n//FUNCTIONS A: Login Functions \r\n//Function A1: Login a User \r\nexport function loginUser(userName) {\r\n    console.log(\"login \" + userName)\r\n}\r\n\r\n//Function A2: Logout a User \r\nexport function logouUser(userName) {\r\n    console.log(\"logout \" + userName)\r\n}\r\n\r\n//Function A3: Get Login Status \r\nexport function loginStatus(userName) {\r\n    let userStatus = {\r\n        isAuthenticated: false,\r\n        user: userName,\r\n    };\r\n\r\n    if(userName == 'null') {\r\n        userStatus.isAuthenticated = false;\r\n      } else {\r\n        userStatus.isAuthenticated = true;\r\n      }\r\n\r\n      return userStatus;\r\n}\r\n\r\nexport function sayHello(userName) {\r\n    console.log(\"hello \" + userName)\r\n}\r\n\r\n\r\n\r\n\r\n//export default { sayHi, sayHello };","C:\\wamp\\www\\kite\\src\\pages\\LoginPage.js",["107","108","109"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport LoginUser from '../components/login/LoginUser';\r\nimport LoginStatus from '../components/login/LoginStatus';\r\nimport { LoginContext } from \"../functions/context/LoginContext\";\r\n\r\n\r\nfunction LoginPage() {  \r\n\r\n  //Check Login Status \r\n  const { currentUser, setLoginState} = useContext(LoginContext);\r\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n    const currentUserLoggedIn = JSON.parse(data);\r\n    setLoginState(currentUserLoggedIn);\r\n\r\n    if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\r\n      setUserLoggedIn(false);\r\n      console.log(\"No one is logged in right now\");\r\n      console.log(\"Login Page: OK STAY HERE\");\r\n    } else {\r\n      setUserLoggedIn(true);\r\n      console.log(\"Login Page: DONT BE HERE\");\r\n      console.log(currentUserLoggedIn + \" is currently logged in\");\r\n    } \r\n}, []);\r\n    return (\r\n      <div className=\"login\">\r\n        <label>Current User: { currentUser } </label> \r\n        <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\r\n        <LoginUser />\r\n        <LoginStatus />\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default LoginPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport { useNavigate, useResolvedPath } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\n//import LoginHeader from '../components/headers/LoginHeader';\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\r\n    const currentUserLoggedIn = JSON.parse(data);\r\n    //console.log(\"APP LOGIN PAGE \" + currentUserLoggedIn)\r\n    console.log(currentUserLoggedIn)\r\n    if(currentUserLoggedIn == 'null') {\r\n      //console.log(\"OK STAY HERE\")\r\n      //console.log(\"userLoggedIn = false\")\r\n    } else {\r\n      //console.log(\"DONT BE HERE\");\r\n      navigate(\"/groups\");\r\n      //console.log(\"userLoggedIn = true\")\r\n      \r\n    }\r\n  }, []);\r\n\r\nfunction Login() {\r\n    return (\r\n      <div className=\"login\">\r\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\r\n        <p></p>\r\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\r\n        <p></p>\r\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\r\n        <div className = \"simplerHolder\">\r\n          <p>{ userName }</p> \r\n          <p>{ password }</p>\r\n        </div>\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\r\n          <div className = \"simplerHolder\"> \r\n          <p>{ loggedInStatus }</p>\r\n        </div>\r\n\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\r\n        </div>\r\n\r\n        </div>\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n*/\r\n\r\n","C:\\wamp\\www\\kite\\src\\pages\\Home.js",["110","111"],"import React, { useEffect } from 'react';\r\nimport { useNavigate  } from \"react-router-dom\"\r\n\r\nfunction Home() {\r\n    //Login Status \r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n        const currentUserLoggedIn = JSON.parse(data);\r\n        if(currentUserLoggedIn == 'null') {\r\n            navigate(\"/login\");\r\n        } else {\r\n            navigate(\"/groups\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n      <div className=\"user\">\r\n          <p> Home go to Login or Groups </p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\wamp\\www\\kite\\src\\pages\\GroupsPage.js",["112","113","114","115"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate  } from \"react-router-dom\"\r\nimport { LoginContext } from \"../functions/context/LoginContext\";\r\n\r\nimport Refresh from '../components/login/Refresh';\r\nimport Groups from '../components/groups/GroupList';\r\n\r\nfunction GroupsPage() {\r\n\r\n  //Login Status \r\n  const navigate = useNavigate();\r\n  const { currentUser, setLoginState} = useContext(LoginContext);\r\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n    const currentUserLoggedIn = JSON.parse(data);\r\n    setLoginState(currentUserLoggedIn);\r\n    if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\r\n   //if(currentUserLoggedIn == 'null') {\r\n     setUserLoggedIn(false);\r\n     console.log(\"Groups Page: DONT BE HERE\");\r\n     \r\n   } else {\r\n     setUserLoggedIn(true);\r\n     console.log(\"Groups Page: OK STAY HERE\")\r\n     console.log(currentUserLoggedIn + \" is currently logged in\");\r\n   }\r\n }, []);\r\n\r\n  return (\r\n    <div className=\"user\">\r\n        <Groups currentUser = { currentUser } />\r\n        \r\n        <Refresh /> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroupsPage;\r\n\r\n/*\r\n<Posts />\r\n          \r\n\r\n\r\n\r\n\r\n\r\n        \r\nbody {\r\n  margin: 40;\r\n  padding: 40;\r\n}\r\n\r\n.App {\r\n  text-align: center;\r\n}\r\n\r\nheader {\r\n  height: 58px;\r\n  border-bottom: 1px solid black;\r\n}\r\n\r\n.posts {\r\n  width: 60%;\r\n  margin-left: 20%;\r\n  border: 1px solid black;\r\n}\r\n\r\n.post {\r\n  width: 80%;\r\n  min-height: 42px;\r\n  margin-left: 10%;\r\n  margin-bottom: 8px;\r\n  border: 1px solid blue;\r\n}\r\n\r\n.post-text {\r\n  margin: 2px;\r\n  padding: 0px;\r\n}\r\n\r\n.group {\r\n  float: left;\r\n  height: 200px;\r\n  width: 200px;\r\n  border: 1px solid blue;\r\n  margin: 40px;\r\n}\r\n\r\n.link {\r\n  margin: 4px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.holder {\r\n  float: left;\r\n  width: 98%;\r\n  min-height: 20px;\r\n}\r\n\r\n.App {\r\n  text-align: center;\r\n}\r\n\r\n.App-logo {\r\n  height: 40vmin;\r\n  pointer-events: none;\r\n}\r\n\r\n@media (prefers-reduced-motion: no-preference) {\r\n  .App-logo {\r\n    animation: App-logo-spin infinite 20s linear;\r\n  }\r\n}\r\n\r\n.App-header {\r\n  background-color: #282c34;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 2vmin);\r\n  color: white;\r\n}\r\n\r\n.App-link {\r\n  color: #61dafb;\r\n}\r\n\r\n@keyframes App-logo-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n\r\n\r\nbody {\r\n  margin: 40px;\r\n}\r\n\r\n.holder {\r\n  float: left;\r\n  border: 1px solid blue;\r\n  margin-top: 80px;\r\n  margin-left: 30%;\r\n  width: 40%;\r\n  min-height: 40px;\r\n}\r\n\r\n.text {\r\n  text-align: center;\r\n}\r\n\r\n.button {\r\n  float: left;\r\n  height: 32px;\r\n  margin-top: 8px;\r\n  margin-left: 20%;\r\n  width: 60%;margin-bottom: 12px;\r\n\r\n}\r\n\r\n#login {\r\n  float: left;\r\n  border: 1px solid blue;\r\n  margin-top: 80px;\r\n  margin-left: 30%;\r\n  width: 40%;\r\n}\r\n\r\n.loginInput {\r\n  float: left;\r\n  height: 22px;\r\n  margin-top: 8px;\r\n  margin-left: 30%;\r\n  width: 40%;\r\n\r\n}\r\n\r\n.loginButton {\r\n  float: left;\r\n  height: 32px;\r\n  margin-top: 8px;\r\n  margin-left: 30%;\r\n  width: 40%;\r\n}\r\n\r\n.simplerHolder {\r\n  float: left;\r\n  min-height: 20px;\r\n  margin-left: 10%;\r\n  margin-top: 8px;\r\n  width: 80%;\r\n}\r\n\r\n.spacer {\r\n  float: left;\r\n  border: 1px solid blue;\r\n  min-height: 100px;\r\n  margin-left: 10%;\r\n  margin-top: 8px;\r\n  width: 80%;\r\n}\r\n\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\r\n\r\n\r\nfunction Groups() {\r\n  let navigate = useNavigate();\r\n  const [groups, setGroups] = useState([\r\n    { groupName: 'Music!', groupID: 70 },\r\n    { groupName: 'Hike', groupID: 77 },\r\n    { groupName: 'Games', groupID: 78 }\r\n  ])\r\n\r\n  return (\r\n    <div className=\"user\">\r\n\r\n      <div className='holder'>\r\n        <p> Groups </p>\r\n        {groups.map(group => (\r\n          <div className=\"group\" key={ group.groupID } >\r\n            <Link to={`/group/${group.groupID}`}>{ group.groupName } </Link>\r\n            <p>{ group.groupID }</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className='holder'>\r\n        <button onClick={ () => navigate('/users') } > Users </button>\r\n      </div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Groups;\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { BrowserRouter, useNavigate, Navigate, Link  } from \"react-router-dom\"\r\n\r\nimport LogoutUser from '../components/login/LogoutUser';\r\nimport { LoginContext } from \"../functions/context/LoginContext\";\r\n//import { LoggedInContext } from \"../functions/context/LoggedInContext\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nfunction Groups() {\r\n  const navigate = useNavigate();\r\n  \r\n  \r\n  function App() {\r\n  const [currentUser, setLoginState] = useState('null');\r\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n     const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n     const currentUserLoggedIn = JSON.parse(data);\r\n     setLoginState(currentUserLoggedIn);\r\n    if(currentUserLoggedIn == 'null') {\r\n      setUserLoggedIn(false);\r\n      console.log(\"userLoggedIn = false\")\r\n    } else {\r\n      setUserLoggedIn(true);\r\n      console.log(\"userLoggedIn = true\")\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\r\n    const currentUserLoggedIn = JSON.parse(data);\r\n    //console.log(\"APP LOGIN PAGE \" + currentUserLoggedIn)\r\n    console.log(currentUserLoggedIn)\r\n    if(currentUserLoggedIn == 'null') {\r\n      console.log(\"Groups Page: DONT BE HERE\");\r\n      navigate(\"/login\")   \r\n    } else {\r\n      console.log(\"Groups Page: OK STAY HERE\")\r\n\r\n    }\r\n  }, []);\r\n  \r\n\r\n  const { currentUser, setLoginState} = useContext(LoginContext);\r\n  //const { userLoggedIn, setUserLoggedIn} = useContext(LoggedInContext);\r\n        // \r\n  return (\r\n    <div className=\"user\">\r\n        <p> Groups </p>\r\n        <p> Current User: { currentUser } </p>\r\n       \r\n        <Link to={`/group/1`}>{ \"Music 1\" } </Link>\r\n        <Link to={`/group/2`}>{ \"Music 2\" } </Link>\r\n        <Link className=\"\" to=\"/group/5\"> Games 5 </Link>\r\n        <LogoutUser />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Groups;\r\n\r\n\r\n*/","C:\\wamp\\www\\kite\\src\\pages\\ProfilePage.js",["116","117"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate  } from \"react-router-dom\"\r\nimport { LoginContext } from \"../functions/context/LoginContext\";\r\nimport LogoutUser from '../components/login/LogoutUser';\r\n\r\nfunction ProfilePage() {\r\n\r\n  //Login Status \r\n  const navigate = useNavigate();\r\n  const { currentUser, setLoginState} = useContext(LoginContext);\r\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n    const currentUserLoggedIn = JSON.parse(data);\r\n    setLoginState(currentUserLoggedIn);\r\n    //if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\r\n    if(currentUserLoggedIn == 'null') {\r\n      setUserLoggedIn(false);\r\n      console.log(\"Profile Page: DONT BE HERE\");\r\n      navigate(\"/login\");\r\n    } else {\r\n      setUserLoggedIn(true);\r\n      console.log(\"Profile Page: OK STAY HERE\")\r\n      console.log(currentUserLoggedIn + \" is currently logged in\");\r\n    }\r\n }, []);\r\n\r\n  return (\r\n    <div className=\"user\">\r\n        <p><b> Profile </b></p>\r\n        <p> Current User: { currentUser } </p>\r\n        <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\r\n        <LogoutUser />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { useState, useContext } from 'react';\r\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\r\nimport LogoutUser from '../components/login/LogoutUser';\r\nimport { LoginContext } from \"../functions/context/LoginContext\";\r\n//import { LoggedInContext } from \"../functions/context/LoggedInContext\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nconst axiosRequest = Axios.create({\r\n  withCredentials: true\r\n})\r\n\r\nfunction Profile() {\r\n  const { currentUser, setLoginState} = useContext(LoginContext);\r\n      \r\n  return (\r\n    <div className=\"user\">\r\n        <p> Profile</p>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\nexport default Profile;\r\n*/\r\n\r\n","C:\\wamp\\www\\kite\\src\\functions\\context\\LoginContext.js",[],"C:\\wamp\\www\\kite\\src\\pages\\NotFound.js",["118","119","120","121","122"],"import React, { useState, useEffect } from 'react';\r\nimport { Navigate, BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\r\n\r\nfunction NotFound() {\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() =>{\r\n    setTimeout(() => {\r\n\r\n      }, 1000)\r\n  },[])\r\n\r\n    return (\r\n      <div className=\"user\">\r\n          <p> Not Found </p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;\r\n\r\n\r\n\r\n/*\r\n\r\n  useEffect(() =>{\r\n    setTimeout(() => {\r\n      navigate(\"/login\")\r\n      }, 1000)\r\n  },[])\r\n\r\nexport function NotFound() {\r\n  return <Navigate to = \"/login\" />\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction NotFound() {\r\n\r\n  return (\r\n    <div className=\"user\">\r\n        <p> Not Found </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nimport { Navigate, BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\r\n\r\nexport function NotFound() {\r\n    return <Navigate to = \"/login\" />\r\n}\r\n*/","C:\\wamp\\www\\kite\\src\\pages\\IndividualGroup.js",["123","124","125","126"],"import { useParams } from \"react-router\";\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\r\nimport { LoginContext } from \"../functions/context/LoginContext\";\r\nimport Posts from '../components/posts/Posts';\r\n\r\n//import MakePost from './../components/posts/MakePost';\r\n\r\nconst IndividualGroup = () => {\r\n    const { groupID } = useParams()\r\n\r\n    //Login Status \r\n    const navigate = useNavigate();\r\n    const { currentUser, setLoginState} = useContext(LoginContext);\r\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n      const currentUserLoggedIn = JSON.parse(data);\r\n      setLoginState(currentUserLoggedIn);\r\n      if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\r\n        setUserLoggedIn(false);\r\n        console.log(\"Group Page: DONT BE HERE\");\r\n      } else {\r\n        setUserLoggedIn(true);\r\n        console.log(\"Group Page: OK STAY HERE\")\r\n      }\r\n   }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Posts groupID = { groupID }/>\r\n            <p><b> Your on a group! </b></p>\r\n            <p> Group ID { groupID } </p>\r\n            <p> Current User: { currentUser } </p>\r\n            <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\r\n            <Link className=\"\" to=\"/groups\"> Groups </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndividualGroup;\r\n","C:\\wamp\\www\\kite\\src\\pages\\RegisterPage.js",["127"],"import React, { useState} from 'react'\r\nimport RegisterUser from '../components/login/RegisterUser';\r\n\r\n\r\nfunction RegisterPage() {  \r\n    return (\r\n      <div className=\"login\">\r\n       <p>Register</p>\r\n       <RegisterUser />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default RegisterPage;\r\n  \r\n","C:\\wamp\\www\\kite\\src\\components\\login\\LoginUser.js",["128","129","130","131","132","133","134","135","136"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link, useLocation, useNavigate, useResolvedPath } from \"react-router-dom\";\r\n//import { loginUser } from '../../functions/functions';\r\nimport { LoginContext } from \"../../functions/context/LoginContext\";\r\nimport axios from \"axios\";\r\n\r\nconst axiosRequest = axios.create({\r\n  withCredentials: true\r\n})\r\n\r\n\r\nfunction LoginUser() {  \r\n    var loginURL = \"http://localhost:3003/login\"\r\n    const navigate = useNavigate();\r\n    const { currentUser, setLoginState} = useContext(LoginContext);\r\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n    const [userName, setUserName] = useState('davey')\r\n    const [password, setPassword] = useState('password')\r\n\r\n    const handleChange = (event) => {\r\n      const { name, value } = event.target\r\n\r\n      if(name == \"username\") {\r\n        setUserName(value)\r\n      } else {\r\n        setPassword(value)\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"logging in \" + userName + \" with password \"  + password)\r\n        \r\n        //STEP 1: Call Login API\r\n        var userInputName = userName\r\n        var userInputPassword = password\r\n        console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\r\n    \r\n        axiosRequest.post(loginURL, {\r\n          userName: userInputName,\r\n          password: userInputPassword\r\n        })\r\n        .then(function (response) {\r\n          console.log(response.data);\r\n          const loginSuccess = response.data.loginSuccess;\r\n\r\n          //STEP 2: Success\r\n          if(loginSuccess == true) {\r\n            \r\n            //Step 2A: Set local storage  \r\n            localStorage.setItem('localStorageCurrentUser', JSON.stringify(userName));\r\n\r\n            //Step 2B: Set context\r\n            setLoginState(userName)\r\n \r\n            //Step 2C: Redirect to Groups\r\n            navigate(\"/groups\");\r\n\r\n          } else {\r\n            console.log(\"Display error message\");\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n      <div className = \"login\">\r\n          <form onSubmit={ handleSubmit }>\r\n              <input name= \"username\" className=\"loginInput\" type=\"text\" value={ userName } onChange={handleChange} />\r\n              <input name= \"password\" className=\"loginInput\" type=\"text\" value={ password } onChange={handleChange} />\r\n              <button type=\"submit\" className=\"loginButton\" > Login </button>\r\n          </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default LoginUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { Component, useState} from 'react'\r\nimport axios from \"axios\";\r\n\r\nconst axiosRequest = axios.create({\r\n  withCredentials: true\r\n})\r\n\r\n\r\nfunction Login() {\r\n    const [userName, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [loggedInStatus, setLoginStatus] = React.useState('');\r\n    const loginURL = \"http://localhost:3003/login\"\r\n    const loginStatusURL = \"http://localhost:3003/login/status\"\r\n    const logoutURL = \"http://localhost:3003/logout\"\r\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\r\n  \r\n    const loginUser = () => {\r\n      var userInputName = userName\r\n      var userInputPassword = password\r\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\r\n  \r\n      axiosRequest.post(loginURL, {\r\n        userName: userInputName,\r\n        password: userInputPassword\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const loginStatus = () => {\r\n      //FIX: This is whatever is currently typed \r\n      var userInputName = userName\r\n      console.log(\"you are checking on \" + userInputName )\r\n\r\n      axiosRequest.post(loginStatusURL, {\r\n        userName: userInputName\r\n      })\r\n      .then(function (response) {\r\n        //console.log(response.data);\r\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\r\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\r\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n\r\n        } else {\r\n          let loginStatusMessage = \"nobody logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n        }\r\n        \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const logoutUser = () => {\r\n      //FIX: This is whatever is currently typed \r\n      var userInputName = userName\r\n      var refreshToken = \"refreshToken\"\r\n\r\n      axiosRequest.post(logoutURL, {\r\n        userName: userInputName,\r\n        refreshToken: refreshToken\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n        setLoginStatus(\"nobody logged in!\");\r\n        /*\r\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\r\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n\r\n        } else {\r\n          let loginStatusMessage = \"nobody logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n        }\r\n        *//*\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n    \r\n\r\n    const loginVerify = () => {\r\n      axiosRequest.post(logoutVerifyURL, {\r\n        userName: \"davey\",\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n      \r\n    }\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\r\n        <p></p>\r\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\r\n        <p></p>\r\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\r\n        <div className = \"simplerHolder\">\r\n          <p>{ userName }</p> \r\n          <p>{ password }</p>\r\n        </div>\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\r\n          <div className = \"simplerHolder\"> \r\n          <p>{ loggedInStatus }</p>\r\n        </div>\r\n\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\r\n        </div>\r\n\r\n        </div>\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Login;\r\n\r\n\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nimport React, { Component, useState} from 'react'\r\nimport Axios from \"axios\";\r\n\r\nconst axiosRequest = Axios.create({\r\n  withCredentials: true\r\n})\r\n\r\nfunction Login() {\r\n    const [userName, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [loggedInStatus, setLoginStatus] = React.useState('');\r\n    const loginURL = \"http://localhost:3003/login\"\r\n    const loginStatusURL = \"http://localhost:3003/login/status\"\r\n    const logoutURL = \"http://localhost:3003/logout\"\r\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\r\n  \r\n    const loginUser = () => {\r\n      var userInputName = userName\r\n      var userInputPassword = password\r\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\r\n  \r\n      axiosRequest.post(loginURL, {\r\n        userName: userInputName,\r\n        password: userInputPassword\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const loginStatus = () => {\r\n      //FIX: This is whatever is currently typed \r\n      var userInputName = userName\r\n\r\n      axiosRequest.post(loginStatusURL, {\r\n        userName: userInputName\r\n      })\r\n      .then(function (response) {\r\n        //console.log(response.data);\r\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\r\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\r\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n\r\n        } else {\r\n          let loginStatusMessage = \"nobody logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n        }\r\n        \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const logoutUser = () => {\r\n      //FIX: This is whatever is currently typed \r\n      var userInputName = userName\r\n      var refreshToken = \"refreshToken\"\r\n\r\n      axiosRequest.post(logoutURL, {\r\n        userName: userInputName,\r\n        refreshToken: refreshToken\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n        setLoginStatus(\"nobody logged in!\");\r\n        /*\r\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\r\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n\r\n        } else {\r\n          let loginStatusMessage = \"nobody logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n        }\r\n        *//*\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n    \r\n\r\n    const loginVerify = () => {\r\n      axiosRequest.post(logoutVerifyURL, {\r\n        userName: \"davey\",\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n      \r\n    }\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\r\n        <p></p>\r\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\r\n        <p></p>\r\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\r\n        <div className = \"simplerHolder\">\r\n          <p>{ userName }</p> \r\n          <p>{ password }</p>\r\n        </div>\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\r\n          <div className = \"simplerHolder\"> \r\n          <p>{ loggedInStatus }</p>\r\n        </div>\r\n\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\r\n        </div>\r\n\r\n        </div>\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Login;\r\n\r\n\r\n\r\n*/\r\n","C:\\wamp\\www\\kite\\src\\components\\login\\LoginStatus.js",["137"],"import React, { useState} from 'react'\r\nimport axios from \"axios\";\r\n\r\nconst axiosRequest = axios.create({\r\n  withCredentials: true\r\n})\r\n\r\nfunction LoginStatus() {\r\n    const [loggedInStatus, setLoginStatus] = useState('');\r\n    var loginStatusURL = \"http://localhost:3003/login/status\"\r\n\r\n    const loginStatus = () => {\r\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n      const userName = JSON.parse(data);\r\n        console.log(\"you are checking on \" + userName )\r\n  \r\n        axiosRequest.post(loginStatusURL, {\r\n          userName: userName\r\n        })\r\n        .then(function (response) {\r\n          /*\r\n          if(response.data.userLoggedIn != \"notLoggedIn\"){\r\n            let loginStatusMessage = response.data.userName + \" is currently logged in!\"\r\n            console.log(loginStatusMessage)\r\n            setLoginStatus(loginStatusMessage);\r\n  \r\n          } else {\r\n            let loginStatusMessage = \"nobody logged in!\"\r\n            console.log(loginStatusMessage)\r\n            setLoginStatus(loginStatusMessage);\r\n          }\r\n          */\r\n           console.log(response.data)\r\n          \r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      }\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\r\n        <p>{ loggedInStatus }</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default LoginStatus;\r\n","C:\\wamp\\www\\kite\\src\\components\\login\\Refresh.js",["138"],"import React, { useContext } from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst axiosRequest = axios.create({\r\n  withCredentials: true\r\n})\r\n\r\nfunction Refresh() {\r\n    function refreshToken() {\r\n      const refreshURL = \"http://localhost:3003/refresh/tokens\"\r\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n        const userName = JSON.parse(data);\r\n        console.log(\"you are refreshing for\" + userName )\r\n        \r\n        //STEP 1: Call Logout API\r\n        axiosRequest.post(refreshURL, {\r\n          userName: userName,\r\n          refreshToken: \"dontneedheretoken\"\r\n        })\r\n        .then(function (response) {\r\n          console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n    \r\n    return (\r\n    <div className = \"holder\">\r\n        <p>Refresh Token</p>\r\n        <button className=\"loginButton\" onClick={() => refreshToken() }> Refresh Token </button>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Refresh;\r\n\r\n\r\n\r\n\r\n","C:\\wamp\\www\\kite\\src\\components\\login\\LogoutUser.js",["139","140"],"import React, { useContext } from 'react';\r\nimport { LoginContext } from \"../../functions/context/LoginContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst axiosRequest = axios.create({\r\n  withCredentials: true\r\n})\r\n\r\nfunction LogoutUser() {\r\n  const navigate = useNavigate();\r\n  const { currentUser, setLoginState} = useContext(LoginContext);\r\n  const logoutURL = \"http://localhost:3003/logout\"\r\n     \r\n    function logout() {\r\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n        const userName = JSON.parse(data);\r\n        console.log(\"you are loggin out\" + userName )\r\n        \r\n        //STEP 1: Call Logout API\r\n        axiosRequest.post(logoutURL, {\r\n          userName: userName,\r\n          refreshToken: \"token\"\r\n        })\r\n        .then(function (response) {\r\n          console.log(response.data)\r\n\r\n          if(response.data.userLoggedIn != \"notLoggedIn\"){\r\n            let loginStatusMessage = response.data.userName + \" is currently logged in!\"\r\n            console.log(loginStatusMessage)\r\n            //setLoginStatus(loginStatusMessage);\r\n  \r\n          } else {\r\n            let loginStatusMessage = \"nobody logged in!\"\r\n            console.log(loginStatusMessage)\r\n            //setLoginStatus(loginStatusMessage);\r\n          }\r\n          \r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n\r\n        //Step 2A: Set local storage  \r\n        localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\"));   \r\n      \r\n        //Step 2B: Set context\r\n        setLoginState('null')\r\n\r\n        //Step 2C: Redirect to Login\r\n        navigate(\"/login\");\r\n        \r\n    }\r\n    \r\n    return (\r\n    <div className = \"holder\">\r\n        <p>LOGOUT</p>\r\n        <button className=\"loginButton\" onClick={() => logout() }> Logout </button>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default LogoutUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { Component, useState} from 'react'\r\nimport axios from \"axios\";\r\n\r\nconst axiosRequest = axios.create({\r\n  withCredentials: true\r\n})\r\n\r\n\r\n\r\nfunction Login() {\r\n    const [userName, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [loggedInStatus, setLoginStatus] = React.useState('');\r\n    const loginURL = \"http://localhost:3003/login\"\r\n    const loginStatusURL = \"http://localhost:3003/login/status\"\r\n    const logoutURL = \"http://localhost:3003/logout\"\r\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\r\n  \r\n    const loginUser = () => {\r\n      var userInputName = userName\r\n      var userInputPassword = password\r\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\r\n  \r\n      axiosRequest.post(loginURL, {\r\n        userName: userInputName,\r\n        password: userInputPassword\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const loginStatus = () => {\r\n      //FIX: This is whatever is currently typed \r\n      var userInputName = userName\r\n      console.log(\"you are checking on \" + userInputName )\r\n\r\n      axiosRequest.post(loginStatusURL, {\r\n        userName: userInputName\r\n      })\r\n      .then(function (response) {\r\n        //console.log(response.data);\r\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\r\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\r\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n\r\n        } else {\r\n          let loginStatusMessage = \"nobody logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n        }\r\n        \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const logoutUser = () => {\r\n      //FIX: This is whatever is currently typed \r\n      var userInputName = userName\r\n      var refreshToken = \"refreshToken\"\r\n\r\n      axiosRequest.post(logoutURL, {\r\n        userName: userInputName,\r\n        refreshToken: refreshToken\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n        setLoginStatus(\"nobody logged in!\");\r\n        \r\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\r\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n\r\n        } else {\r\n          let loginStatusMessage = \"nobody logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n        }\r\n        \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n    \r\n\r\n    const loginVerify = () => {\r\n      axiosRequest.post(logoutVerifyURL, {\r\n        userName: \"davey\",\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n      \r\n    }\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\r\n        <p></p>\r\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\r\n        <p></p>\r\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\r\n        <div className = \"simplerHolder\">\r\n          <p>{ userName }</p> \r\n          <p>{ password }</p>\r\n        </div>\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\r\n          <div className = \"simplerHolder\"> \r\n          <p>{ loggedInStatus }</p>\r\n        </div>\r\n\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\r\n        </div>\r\n\r\n        </div>\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Login;\r\n\r\n\r\n\r\n\r\n*/","C:\\wamp\\www\\kite\\src\\components\\posts\\Posts.js",["141","142"],"C:\\wamp\\www\\kite\\src\\components\\groups\\GroupList.js",["143"],"import React from 'react';\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\n\r\nconst axiosRequest = axios.create({\r\n  withCredentials: true\r\n})  \r\n\r\nasync function refreshToken() {\r\n  const refreshURL = \"http://localhost:3003/refresh/tokens\"\r\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n    const userName = JSON.parse(data);\r\n    console.log(\"you are refreshing for\" + userName )\r\n    \r\n    //STEP 1: Call Logout API\r\n    axiosRequest.post(refreshURL, {\r\n      userName: userName,\r\n      refreshToken: \"dontneedheretoken\"\r\n    })\r\n    .then(function (response) {\r\n      console.log(response.data)\r\n      return response.data;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\n// Add a response interceptor\r\naxiosRequest.interceptors.response.use(function (response) {\r\n  // Any status code that lie within the range of 2xx cause this function to trigger\r\n  // Do something with response data\r\n  console.log(\"interceptors: GOOD \")\r\n  return response;\r\n}, function (error) {\r\n  console.log(\"interceptors: NEED NEW TOKEN \")\r\n  \r\n  if(error.response.status == 401) {\r\n    console.log(\"A new token was got!! Get a new token here\");\r\n    const refreshOutcome = refreshToken();\r\n    console.log(\"NEW TOKEN OUTCOME\")\r\n    console.log(refreshOutcome)\r\n  } \r\n  \r\n  return Promise.reject(error);\r\n  \r\n});\r\n\r\nasync function getGroups(currentUser) {\r\n  if(currentUser) {\r\n    console.log(\"GroupList: Getting groups for \" + currentUser)\r\n  }\r\n   \r\n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser; \r\n  const { data } = await axiosRequest.get(groupURL)\r\n\r\n  return data\r\n} \r\n\r\n\r\nconst Groups = (props) => {\r\n  const currentUser = props.currentUser;\r\n  console.log(\"GroupList: Getting groups for \" + currentUser)\r\n\r\n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser), \r\n    { refetchInterval: 10000000 }\r\n  )\r\n\r\n  var groups = data;\r\n\r\n  console.log(groups)\r\n  //console.log(isError)\r\n  //console.log(error)\r\n\r\n  return (\r\n  <div className=\"groups\">\r\n      { isLoading && <div> loading... </div>}\r\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\r\n      { data && console.log(data)}\r\n      {data && groups.groups.map(group => (\r\n          <div className=\"group\" key={ group.groupID } >\r\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\r\n          </div>\r\n      ))}\r\n  </div>\r\n  );\r\n  }\r\n  \r\nexport default Groups;\r\n\r\n\r\n/*\r\n       { data && console.log(\"\")}\r\n      {data && groups.map(group => (\r\n          <div className=\"group\" key={ group.groupID } >\r\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\r\n          </div>\r\n      ))}\r\n\r\n    \r\nasync function getPosts(groupID) {\r\n  const postErrorURL = \"/posts/group/error\";\r\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \r\n  const { data } = await axios.get(postURL)\r\n  return data\r\n} \r\n\r\nconst PostList = (props) => {\r\n  const groupID = props.groupID;\r\n  \r\n  const { isLoading, data, isError, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID), \r\n    { refetchInterval: 10000000 }\r\n  )\r\n\r\n  const currentPosts = data;\r\n  console.log(isLoading)\r\n  console.log(isError)\r\n  console.log(error)\r\n\r\n  return (\r\n  <div className=\"posts\">\r\n       <p> Posts </p>\r\n\r\n      { data && <IndividualPost posts = { currentPosts } title=\"The posts!\" />}\r\n      {console.log(data)}\r\n  </div>\r\n  );\r\n  }\r\n  \r\nexport default PostList;\r\n<p> <b> Groups </b></p>\r\n<p> Current User: { currentUser } </p>\r\n<p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\r\n\r\n<Link to={`/group/1`}>{ \"Music 1\" } </Link>\r\n<Link to={`/group/2`}>{ \"Music 2\" } </Link>\r\n<Link className=\"\" to=\"/group/5\"> Games 5 </Link>\r\n\r\n//\r\n\r\n\r\n*/","C:\\wamp\\www\\kite\\src\\components\\login\\RegisterUser.js",["144","145","146","147","148","149"],"import React, { useState, useContext } from 'react'\r\n//import { loginUser } from '../../functions/functions';\r\nimport { LoginContext } from \"../../functions/context/LoginContext\";\r\n\r\n\r\nfunction RegisterUser() {  \r\n    const [userName, setUserName] = useState('david')\r\n    const [email, setEmail] = useState('davey@gmail.com')\r\n    const [fullName, setFullname] = useState('david v')\r\n    const [password, setPassword] = useState('password')\r\n\r\n    const handleChange = (event) => {\r\n      const { name, value } = event.target\r\n      if(name == \"username\") {\r\n        setUserName(value)\r\n      } else if (name == \"email\") {\r\n        setEmail(value)\r\n      } else if (name == \"fullname\") {\r\n        setFullname(value)\r\n      } else if (name == \"password\") {\r\n        setPassword(value)\r\n      }\r\n      console.log(name)\r\n      console.log(value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        console.log(\"Register \" + userName, email, fullName, password)\r\n        //STEP 1: Call Login API\r\n\r\n        //STEP 2: Success\r\n        //Step 2A: Set local storage  \r\n        //localStorage.setItem('currentUserLoggedIn', JSON.stringify(userName));\r\n\r\n        //Step 2B: Set context\r\n        //setLoginState(userName)\r\n\r\n        //Step 2C: Redirect to Groups\r\n    }\r\n\r\n    return (\r\n      <div className = \"login\">\r\n          <form onSubmit={ handleSubmit }>\r\n              <label> </label> \r\n              <input name= \"username\" className=\"loginInput\" type=\"text\" value={ userName } onChange={handleChange} />\r\n              <input name= \"email\" className=\"loginInput\" type=\"text\" value={ email } onChange={handleChange} />\r\n              <input name= \"fullname\" className=\"loginInput\" type=\"text\" value={ fullName } onChange={handleChange} />\r\n              <input name= \"password\" className=\"loginInput\" type=\"text\" value={ password } onChange={handleChange} />\r\n              <button type=\"submit\" className=\"loginButton\" > Register </button>\r\n          </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default RegisterUser;\r\n\r\n/*\r\n\r\nimport React, { Component, useState} from 'react'\r\nimport Axios from \"axios\";\r\n\r\nconst axiosRequest = Axios.create({\r\n  withCredentials: true\r\n})\r\n\r\nfunction Login() {\r\n    const [userName, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [loggedInStatus, setLoginStatus] = React.useState('');\r\n    const loginURL = \"http://localhost:3003/login\"\r\n    const loginStatusURL = \"http://localhost:3003/login/status\"\r\n    const logoutURL = \"http://localhost:3003/logout\"\r\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\r\n  \r\n    const loginUser = () => {\r\n      var userInputName = userName\r\n      var userInputPassword = password\r\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\r\n  \r\n      axiosRequest.post(loginURL, {\r\n        userName: userInputName,\r\n        password: userInputPassword\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const loginStatus = () => {\r\n      //FIX: This is whatever is currently typed \r\n      var userInputName = userName\r\n\r\n      axiosRequest.post(loginStatusURL, {\r\n        userName: userInputName\r\n      })\r\n      .then(function (response) {\r\n        //console.log(response.data);\r\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\r\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\r\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n\r\n        } else {\r\n          let loginStatusMessage = \"nobody logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n        }\r\n        \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const logoutUser = () => {\r\n      //FIX: This is whatever is currently typed \r\n      var userInputName = userName\r\n      var refreshToken = \"refreshToken\"\r\n\r\n      axiosRequest.post(logoutURL, {\r\n        userName: userInputName,\r\n        refreshToken: refreshToken\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n        setLoginStatus(\"nobody logged in!\");\r\n        /*\r\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\r\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n\r\n        } else {\r\n          let loginStatusMessage = \"nobody logged in!\"\r\n          console.log(loginStatusMessage)\r\n          setLoginStatus(loginStatusMessage);\r\n        }\r\n        *//*\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n    \r\n\r\n    const loginVerify = () => {\r\n      axiosRequest.post(logoutVerifyURL, {\r\n        userName: \"davey\",\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n      \r\n    }\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\r\n        <p></p>\r\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\r\n        <p></p>\r\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\r\n        <div className = \"simplerHolder\">\r\n          <p>{ userName }</p> \r\n          <p>{ password }</p>\r\n        </div>\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\r\n          <div className = \"simplerHolder\"> \r\n          <p>{ loggedInStatus }</p>\r\n        </div>\r\n\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\r\n        </div>\r\n\r\n        </div>\r\n        <div>\r\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Login;\r\n\r\n\r\n\r\n*/\r\n","C:\\wamp\\www\\kite\\src\\components\\posts\\IndividualPosts.js",["150"],"C:\\wamp\\www\\kite\\src\\components\\posts\\IndividualPost.js",["151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":18},{"ruleId":"156","severity":1,"message":"160","line":15,"column":8,"nodeType":"158","messageId":"159","endLine":15,"endColumn":16},{"ruleId":"156","severity":1,"message":"161","line":26,"column":10,"nodeType":"158","messageId":"159","endLine":26,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":32,"column":28,"nodeType":"164","messageId":"165","endLine":32,"endColumn":30},{"ruleId":"156","severity":1,"message":"166","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":18},{"ruleId":"156","severity":1,"message":"167","line":1,"column":20,"nodeType":"158","messageId":"159","endLine":1,"endColumn":29},{"ruleId":"162","severity":1,"message":"163","line":30,"column":17,"nodeType":"164","messageId":"165","endLine":30,"endColumn":19},{"ruleId":"156","severity":1,"message":"168","line":13,"column":9,"nodeType":"158","messageId":"159","endLine":13,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":20,"column":28,"nodeType":"164","messageId":"165","endLine":20,"endColumn":30},{"ruleId":"169","severity":1,"message":"170","line":29,"column":4,"nodeType":"171","endLine":29,"endColumn":6,"suggestions":"172"},{"ruleId":"162","severity":1,"message":"163","line":11,"column":32,"nodeType":"164","messageId":"165","endLine":11,"endColumn":34},{"ruleId":"169","severity":1,"message":"173","line":16,"column":8,"nodeType":"171","endLine":16,"endColumn":10,"suggestions":"174"},{"ruleId":"156","severity":1,"message":"168","line":11,"column":9,"nodeType":"158","messageId":"159","endLine":11,"endColumn":17},{"ruleId":"156","severity":1,"message":"161","line":13,"column":10,"nodeType":"158","messageId":"159","endLine":13,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":19,"column":28,"nodeType":"164","messageId":"165","endLine":19,"endColumn":30},{"ruleId":"169","severity":1,"message":"170","line":29,"column":5,"nodeType":"171","endLine":29,"endColumn":7,"suggestions":"175"},{"ruleId":"162","severity":1,"message":"163","line":18,"column":28,"nodeType":"164","messageId":"165","endLine":18,"endColumn":30},{"ruleId":"169","severity":1,"message":"176","line":27,"column":5,"nodeType":"171","endLine":27,"endColumn":7,"suggestions":"177"},{"ruleId":"156","severity":1,"message":"166","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"178","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":18},{"ruleId":"156","severity":1,"message":"179","line":2,"column":20,"nodeType":"158","messageId":"159","endLine":2,"endColumn":33},{"ruleId":"156","severity":1,"message":"180","line":2,"column":48,"nodeType":"158","messageId":"159","endLine":2,"endColumn":52},{"ruleId":"156","severity":1,"message":"168","line":5,"column":9,"nodeType":"158","messageId":"159","endLine":5,"endColumn":17},{"ruleId":"156","severity":1,"message":"179","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":23},{"ruleId":"156","severity":1,"message":"168","line":13,"column":11,"nodeType":"158","messageId":"159","endLine":13,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":21,"column":30,"nodeType":"164","messageId":"165","endLine":21,"endColumn":32},{"ruleId":"169","severity":1,"message":"170","line":28,"column":7,"nodeType":"171","endLine":28,"endColumn":9,"suggestions":"181"},{"ruleId":"156","severity":1,"message":"166","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"167","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"180","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"156","severity":1,"message":"182","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":27},{"ruleId":"156","severity":1,"message":"183","line":2,"column":42,"nodeType":"158","messageId":"159","endLine":2,"endColumn":57},{"ruleId":"156","severity":1,"message":"184","line":15,"column":13,"nodeType":"158","messageId":"159","endLine":15,"endColumn":24},{"ruleId":"156","severity":1,"message":"161","line":16,"column":12,"nodeType":"158","messageId":"159","endLine":16,"endColumn":24},{"ruleId":"156","severity":1,"message":"185","line":16,"column":26,"nodeType":"158","messageId":"159","endLine":16,"endColumn":41},{"ruleId":"162","severity":1,"message":"163","line":23,"column":15,"nodeType":"164","messageId":"165","endLine":23,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":48,"column":27,"nodeType":"164","messageId":"165","endLine":48,"endColumn":29},{"ruleId":"156","severity":1,"message":"186","line":9,"column":28,"nodeType":"158","messageId":"159","endLine":9,"endColumn":42},{"ruleId":"156","severity":1,"message":"187","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":27},{"ruleId":"156","severity":1,"message":"184","line":12,"column":11,"nodeType":"158","messageId":"159","endLine":12,"endColumn":22},{"ruleId":"162","severity":1,"message":"188","line":28,"column":41,"nodeType":"164","messageId":"165","endLine":28,"endColumn":43},{"ruleId":"162","severity":1,"message":"163","line":37,"column":28,"nodeType":"164","messageId":"165","endLine":37,"endColumn":30},{"ruleId":"156","severity":1,"message":"184","line":60,"column":11,"nodeType":"158","messageId":"159","endLine":60,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":40,"column":28,"nodeType":"164","messageId":"165","endLine":40,"endColumn":30},{"ruleId":"156","severity":1,"message":"187","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":37},{"ruleId":"156","severity":1,"message":"189","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":14,"column":15,"nodeType":"164","messageId":"165","endLine":14,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":16,"column":23,"nodeType":"164","messageId":"165","endLine":16,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":18,"column":23,"nodeType":"164","messageId":"165","endLine":18,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":20,"column":23,"nodeType":"164","messageId":"165","endLine":20,"endColumn":25},{"ruleId":"156","severity":1,"message":"190","line":4,"column":11,"nodeType":"158","messageId":"159","endLine":4,"endColumn":16},{"ruleId":"156","severity":1,"message":"190","line":4,"column":11,"nodeType":"158","messageId":"159","endLine":4,"endColumn":16},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'sayHello' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'userLoggedIn' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoginState'. Either include it or remove the dependency array.","ArrayExpression",["193"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["194"],["195"],"React Hook useEffect has missing dependencies: 'navigate' and 'setLoginState'. Either include them or remove the dependency array.",["196"],"'Navigate' is defined but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.",["197"],"'useLocation' is defined but never used.","'useResolvedPath' is defined but never used.","'currentUser' is assigned a value but never used.","'setUserLoggedIn' is assigned a value but never used.","'setLoginStatus' is assigned a value but never used.","'useContext' is defined but never used.","Expected '!==' and instead saw '!='.","'LoginContext' is defined but never used.","'title' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"198","fix":"202"},{"desc":"203","fix":"204"},{"desc":"198","fix":"205"},"Update the dependencies array to be: [setLoginState]",{"range":"206","text":"207"},"Update the dependencies array to be: [navigate]",{"range":"208","text":"209"},{"range":"210","text":"207"},"Update the dependencies array to be: [navigate, setLoginState]",{"range":"211","text":"212"},{"range":"213","text":"207"},[1074,1076],"[setLoginState]",[470,472],"[navigate]",[1047,1049],[1028,1030],"[navigate, setLoginState]",[1077,1079]]