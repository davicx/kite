[{"/Users/chavasqu/Desktop/David/www/kite/src/index.js":"1","/Users/chavasqu/Desktop/David/www/kite/src/App.js":"2","/Users/chavasqu/Desktop/David/www/kite/src/pages/IndividualGroup.js":"3","/Users/chavasqu/Desktop/David/www/kite/src/pages/Register.js":"4","/Users/chavasqu/Desktop/David/www/kite/src/pages/Login.js":"5","/Users/chavasqu/Desktop/David/www/kite/src/pages/UserProfile.js":"6","/Users/chavasqu/Desktop/David/www/kite/src/pages/Groups.js":"7","/Users/chavasqu/Desktop/David/www/kite/src/pages/Users.js":"8","/Users/chavasqu/Desktop/David/www/kite/src/components/posts/Posts.js":"9","/Users/chavasqu/Desktop/David/www/kite/src/components/posts/IndividualPost.js":"10","/Users/chavasqu/Desktop/David/www/kite/src/components/posts/MakePost.js":"11","/Users/chavasqu/Desktop/David/www/kite/src/context/AuthContext.js":"12","/Users/chavasqu/Desktop/David/www/kite/src/pages/Signup.js":"13","/Users/chavasqu/Desktop/David/www/kite/src/pages/UserLogin.js":"14","/Users/chavasqu/Desktop/David/www/kite/src/pages/Home.js":"15"},{"size":335,"mtime":1664147596043,"results":"16","hashOfConfig":"17"},{"size":4851,"mtime":1666478673177,"results":"18","hashOfConfig":"17"},{"size":469,"mtime":1664146766648,"results":"19","hashOfConfig":"17"},{"size":2115,"mtime":1661384495395,"results":"20","hashOfConfig":"17"},{"size":4150,"mtime":1666480737541,"results":"21","hashOfConfig":"17"},{"size":502,"mtime":1661731768008,"results":"22","hashOfConfig":"17"},{"size":837,"mtime":1661385241643,"results":"23","hashOfConfig":"17"},{"size":124,"mtime":1661124289524,"results":"24","hashOfConfig":"17"},{"size":1879,"mtime":1665361529742,"results":"25","hashOfConfig":"17"},{"size":2523,"mtime":1662767048976,"results":"26","hashOfConfig":"17"},{"size":216,"mtime":1664146900806,"results":"27","hashOfConfig":"17"},{"size":609,"mtime":1664147299443,"results":"28","hashOfConfig":"17"},{"size":661,"mtime":1665358208075,"results":"29","hashOfConfig":"17"},{"size":664,"mtime":1665357246945,"results":"30","hashOfConfig":"17"},{"size":0,"mtime":1665356820731,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1pmga9",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/chavasqu/Desktop/David/www/kite/src/index.js",[],["68","69"],"/Users/chavasqu/Desktop/David/www/kite/src/App.js",[],"/Users/chavasqu/Desktop/David/www/kite/src/pages/IndividualGroup.js",[],"/Users/chavasqu/Desktop/David/www/kite/src/pages/Register.js",["70","71"],"import React, { Component, useState} from 'react'\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Register() {  \n    const [userName, setUsername] = React.useState('');\n    const [fullName, setFullName] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    const loginURL = \"http://localhost:3003/register\"\n\n    const registerUser = () => {\n      var userInputName = userName\n      var userInputFullName = fullName\n      var userInputEmail = email\n      var userInputPassword = password\n\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n      console.log(\"userInputFullName \" + userInputFullName + \" userInputEmail \" + userInputEmail)\n\n      //SEND POST\n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        fullName: userInputFullName,\n        email: userInputEmail,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"full name\" onChange={e => setFullName(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"email\" onChange={e => setEmail(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>        \n        <button className = \"loginButton\" onClick={ registerUser }> Register </button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ fullName }</p>\n          <p>{ email }</p>\n          <p>{ password }</p>\n        </div>\n\n      </div>\n    );\n  }\n\n  export default Register;\n  \n","/Users/chavasqu/Desktop/David/www/kite/src/pages/Login.js",["72","73","74"],"/Users/chavasqu/Desktop/David/www/kite/src/pages/UserProfile.js",[],"/Users/chavasqu/Desktop/David/www/kite/src/pages/Groups.js",["75","76"],"import React, { useState } from 'react';\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\n\n\nfunction Groups() {\n  let navigate = useNavigate();\n  const [groups, setGroups] = useState([\n    { groupName: 'Music!', groupID: 70 },\n    { groupName: 'Hike', groupID: 77 },\n    { groupName: 'Games', groupID: 78 }\n  ])\n\n  return (\n    <div className=\"user\">\n\n      <div className='holder'>\n        <p> Groups </p>\n        {groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupName } </Link>\n            <p>{ group.groupID }</p>\n          </div>\n        ))}\n      </div>\n\n      <div className='holder'>\n        <button onClick={ () => navigate('/users') } > Users </button>\n      </div>\n    \n    </div>\n  );\n}\n\nexport default Groups;\n\n\n\n","/Users/chavasqu/Desktop/David/www/kite/src/pages/Users.js",[],"/Users/chavasqu/Desktop/David/www/kite/src/components/posts/Posts.js",["77"],"import React from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios'\nimport IndividualPost from './IndividualPost';\n\n//STOP 10 \n//https://stackoverflow.com/questions/43002444/make-axios-send-cookies-in-its-requests-automatically\n/*\naxios.get(BASE_URL + '/todos', { withCredentials: true });\n\nAlso its possible to force credentials to every Axios requests\n\naxios.defaults.withCredentials = true\n\nOr using credentials for some of the Axios requests as the following code\n\nconst instance = axios.create({\n   withCredentials: true,\n   baseURL: BASE_URL\n})\n*/\nasync function getPosts(groupID) {\n  const postErrorURL = \"/posts/group/error\";\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \n  const { data } = await axios.get(postURL, { withCredentials: true })\n  return data\n} \n\nconst Posts = (props) => {\n  const groupID = props.groupID;\n  \n  const { isLoading, isError, data, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID))\n  const currentPosts = data;\n  console.log(isLoading)\n  console.log(isError)\n  //console.log(data)\n  console.log(error)\n\n  const handleDelete = (postID) => {\n    console.log(\"handleDelete: you liked! \" + postID);\n    const newPosts = currentPosts.filter(post => post.postID !== postID)\n    console.log(newPosts)\n  }\n\n  return (\n  <div className=\"posts\">\n       <p> Posts </p>\n      { isError && <div> There was an error fetching the posts </div>}\n      { isLoading && <div> loading... </div>}\n      { data && <IndividualPost posts = { currentPosts } title=\"The posts!\" handleDelete = { handleDelete } />}\n      {console.log(data)}\n  </div>\n  );\n  }\nexport default Posts;\n\n/*\nconst getPostsAnon = async (groupID) => {\n  const postErrorURL = \"/posts/group/error\";\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \n  const { data } = await axios.get(postURL)\n  return data\n}\n*/\n","/Users/chavasqu/Desktop/David/www/kite/src/components/posts/IndividualPost.js",["78","79","80"],"import { useState } from 'react';\n\nconst IndividualPost = (props) => {\n    const posts = props.posts;\n    const postID = posts.postID\n    const title = props.title;\n    const handleDelete = props.handleDelete\n\n    const likePost = (postID) => {\n      console.log(\"likePost you liked! \" + postID);\n    }\n\n    return (\n        <div className = \"post-list\">\n            { posts.map((post) => (\n                <div className=\"post\" key={ post.postID }>\n                    <p className = \"post-text\"> { post.postCaption } </p>\n                    <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>           \n                    <button onClick={ () => { likePost(post.postID) } }> Like Post </button>                                                \n                    <button onClick={ () => { handleDelete(post.postID) } }> Delete </button>                          \n                </div>\n            ))}\n        </div>\n        );\n    }  \n\nexport default IndividualPost;\n\n/*\n                      \nconst IndividualPost = (props) => {\n    const posts = props.posts;\n    const postID = posts.postID\n    const title = props.title;\n\n    const [postLiked, setLike] = useState(\"Liked\")\n\n    const likePost = (postID) => {\n      console.log(\"you liked! \" + postID);\n      setLike('Like Me')\n    }\n\n    const likePostID = (postID) => {\n      console.log(\"you liked! \" + postID);\n    }\n\n    return (\n        <div className = \"post-list\">\n            { posts.map((post) => (\n                <div className=\"post\" key={ post.postID }>\n                    <p className = \"post-text\"> { post.postCaption } </p>\n                    <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>      \n                    <p className = \"post-text\"> Liked: { postLiked } </p>      \n                    <button onClick={ () => { likePost(post.postID) } }> Like Post </button>                                                \n                    <button onClick={ () => { likePostID(post.postID) } }> Like </button>                                                \n                </div>\n            ))}\n        </div>\n        );\n    }  \n\nexport default IndividualPost;\n*/ \n/*\n//e\nconst likePost = (postID, e) => {\n  console.log(\"you liked! \" + postID);\n}\n<button onClick={ (e) => { likePost(post.postID, e) } }> Like </button>        \n\n//This will make the function run automatically \n<button onClick={ likePost('frodo') }> Like </button>   \n*/","/Users/chavasqu/Desktop/David/www/kite/src/components/posts/MakePost.js",["81"],"import { useParams } from \"react-router\";\n\nconst MakePost = () => {\n    const { groupID } = useParams()\n\n    return (\n        <div>\n            <p> Make a Post </p>\n\n        </div>\n    )\n}\n\n\nexport default MakePost;\n","/Users/chavasqu/Desktop/David/www/kite/src/context/AuthContext.js",[],"/Users/chavasqu/Desktop/David/www/kite/src/pages/Signup.js",[],"/Users/chavasqu/Desktop/David/www/kite/src/pages/UserLogin.js",[],"/Users/chavasqu/Desktop/David/www/kite/src/pages/Home.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"90","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"90","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":45,"column":39,"nodeType":"93","messageId":"94","endLine":45,"endColumn":41},{"ruleId":"86","severity":1,"message":"95","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":23},{"ruleId":"86","severity":1,"message":"96","line":7,"column":18,"nodeType":"88","messageId":"89","endLine":7,"endColumn":27},{"ruleId":"86","severity":1,"message":"97","line":23,"column":9,"nodeType":"88","messageId":"89","endLine":23,"endColumn":21},{"ruleId":"86","severity":1,"message":"90","line":1,"column":10,"nodeType":"88","messageId":"89","endLine":1,"endColumn":18},{"ruleId":"86","severity":1,"message":"98","line":5,"column":11,"nodeType":"88","messageId":"89","endLine":5,"endColumn":17},{"ruleId":"86","severity":1,"message":"99","line":6,"column":11,"nodeType":"88","messageId":"89","endLine":6,"endColumn":16},{"ruleId":"86","severity":1,"message":"100","line":4,"column":13,"nodeType":"88","messageId":"89","endLine":4,"endColumn":20},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'BrowserRouter' is defined but never used.","'setGroups' is assigned a value but never used.","'postErrorURL' is assigned a value but never used.","'postID' is assigned a value but never used.","'title' is assigned a value but never used.","'groupID' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]