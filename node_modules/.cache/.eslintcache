[{"/Users/david/Desktop/David/www/kite/src/index.js":"1","/Users/david/Desktop/David/www/kite/src/App.js":"2","/Users/david/Desktop/David/www/kite/src/pages/Profile.js":"3","/Users/david/Desktop/David/www/kite/src/pages/IndividualGroup.js":"4","/Users/david/Desktop/David/www/kite/src/pages/NotFound.js":"5","/Users/david/Desktop/David/www/kite/src/functions/context/LoginContext.js":"6","/Users/david/Desktop/David/www/kite/src/functions/functions.js":"7","/Users/david/Desktop/David/www/kite/src/components/login/RegisterUser.js":"8","/Users/david/Desktop/David/www/kite/src/components/login/LogoutUser.js":"9","/Users/david/Desktop/David/www/kite/src/components/login/LoginUser.js":"10","/Users/david/Desktop/David/www/kite/src/pages/GroupsPage.js":"11","/Users/david/Desktop/David/www/kite/src/components/groups/Groups.js":"12","/Users/david/Desktop/David/www/kite/src/pages/LoginPage.js":"13","/Users/david/Desktop/David/www/kite/src/pages/RegisterPage.js":"14","/Users/david/Desktop/David/www/kite/src/components/login/LoginStatus.js":"15","/Users/david/Desktop/David/www/kite/src/pages/Home.js":"16","/Users/david/Desktop/David/www/kite/src/components/posts/Posts.js":"17"},{"size":405,"mtime":1669586604965,"results":"18","hashOfConfig":"19"},{"size":2137,"mtime":1670716480592,"results":"20","hashOfConfig":"19"},{"size":1830,"mtime":1670891704679,"results":"21","hashOfConfig":"19"},{"size":3446,"mtime":1670547707937,"results":"22","hashOfConfig":"19"},{"size":801,"mtime":1668985538692,"results":"23","hashOfConfig":"19"},{"size":88,"mtime":1668985538691,"results":"24","hashOfConfig":"19"},{"size":890,"mtime":1669587595336,"results":"25","hashOfConfig":"19"},{"size":6174,"mtime":1668985538690,"results":"26","hashOfConfig":"19"},{"size":6077,"mtime":1670891845438,"results":"27","hashOfConfig":"19"},{"size":10956,"mtime":1670720204953,"results":"28","hashOfConfig":"19"},{"size":5906,"mtime":1670891714902,"results":"29","hashOfConfig":"19"},{"size":2354,"mtime":1670548236299,"results":"30","hashOfConfig":"19"},{"size":2995,"mtime":1670891645964,"results":"31","hashOfConfig":"19"},{"size":279,"mtime":1670546995990,"results":"32","hashOfConfig":"19"},{"size":1412,"mtime":1670633943232,"results":"33","hashOfConfig":"19"},{"size":591,"mtime":1670716549001,"results":"34","hashOfConfig":"19"},{"size":1294,"mtime":1670720283258,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"sl1pj3",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"38"},"/Users/david/Desktop/David/www/kite/src/index.js",[],["82","83"],"/Users/david/Desktop/David/www/kite/src/App.js",["84","85","86","87"],"import React, { useState, useEffect } from 'react';\nimport { Route, Routes, Link } from 'react-router-dom'\nimport { QueryClientProvider, QueryClient } from 'react-query';\n\n//Function \nimport { sayHello } from './functions/functions';\n\n//Style \nimport './style/style.css';\nimport './style/external/normalize.css';\n\n//Pages\nimport Home from './pages/Home';\nimport Login from './pages/LoginPage';\nimport Register from './pages/RegisterPage';\nimport Groups from './pages/GroupsPage';\nimport Profile from './pages/Profile';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\nimport { LoginContext } from './functions/context/LoginContext';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const [currentUser, setLoginState] = useState('null');\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n\n  useEffect(() => {\n     const data = localStorage.getItem(\"localStorageCurrentUser\");\n     const currentUserLoggedIn = JSON.parse(data);\n     setLoginState(currentUserLoggedIn);\n    if(currentUserLoggedIn == 'null') {\n      setUserLoggedIn(false);\n    } else {\n      setUserLoggedIn(true);\n    }\n  }, []);\n\n  return (\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <LoginContext.Provider value = {{currentUser, setLoginState}} > \n\n            <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/profile\"> Profile </Link>\n            </nav>  \n            \n            <Routes>      \n              <Route path=\"/\" element={<Home/>} />\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/groups\" element={<Groups/>} />\n              <Route path = \"/group/:groupID\" element = {<IndividualGroup />} />   =\n              <Route path=\"/profile\" element={<Profile/>} />\n              <Route path=\"*\" element={ <NotFound /> } />       \n            </Routes>\n          </LoginContext.Provider>   \n        </QueryClientProvider>\n      </div>\n\n  );\n}\n\nexport default App;\n\n\n\n","/Users/david/Desktop/David/www/kite/src/pages/Profile.js",["88","89"],"/Users/david/Desktop/David/www/kite/src/pages/IndividualGroup.js",["90","91","92","93"],"import { useParams } from \"react-router\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\n//import Posts from './../components/posts/Posts';\n//import MakePost from './../components/posts/MakePost';\n\nconst IndividualGroup = () => {\n    const { groupID } = useParams()\n\n    //Login Status \n    const navigate = useNavigate();\n    const { currentUser, setLoginState} = useContext(LoginContext);\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\n  \n    useEffect(() => {\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const currentUserLoggedIn = JSON.parse(data);\n      setLoginState(currentUserLoggedIn);\n      if(currentUserLoggedIn == 'null') {\n        setUserLoggedIn(false);\n        console.log(\"Group Page: DONT BE HERE\");\n      } else {\n        setUserLoggedIn(true);\n        console.log(\"Group Page: OK STAY HERE\")\n      }\n   }, []);\n\n    return (\n        <div>\n            <p><b> Your on a group! </b></p>\n            <p> Group ID { groupID } </p>\n            <p> Current User: { currentUser } </p>\n            <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n            <Link to={`/group/1`}>{ \"Music 1\" } </Link>\n            <Link to={`/group/2`}>{ \"Music 2\" } </Link>\n            <Link className=\"\" to=\"/group/5\"> Games 5 </Link>\n        </div>\n    )\n}\n\nexport default IndividualGroup;\n\n\n//WORKS\n/*\nimport { useParams } from \"react-router\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\n//import Posts from './../components/posts/Posts';\n//import MakePost from './../components/posts/MakePost';\n\nconst IndividualGroup = () => {\n    const { groupID } = useParams()\n\n    //Login Status \n    const navigate = useNavigate();\n    const { currentUser, setLoginState} = useContext(LoginContext);\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\n  \n    useEffect(() => {\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const currentUserLoggedIn = JSON.parse(data);\n      setLoginState(currentUserLoggedIn);\n      if(currentUserLoggedIn == 'null') {\n        setUserLoggedIn(false);\n        console.log(\"Group Page: DONT BE HERE\");\n      } else {\n        setUserLoggedIn(true);\n        console.log(\"Group Page: OK STAY HERE\")\n      }\n   }, []);\n\n    return (\n        <div>\n            <p><b> Your on a group! </b></p>\n            <p> Group ID { groupID } </p>\n            <p> Current User: { currentUser } </p>\n            <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n            <Link to={`/group/1`}>{ \"Music 1\" } </Link>\n            <Link to={`/group/2`}>{ \"Music 2\" } </Link>\n            <Link className=\"\" to=\"/group/5\"> Games 5 </Link>\n        </div>\n    )\n}\n\nexport default IndividualGroup;\n*/\n\n\n\n\n/*\n//import Posts from './../components/posts/Posts';\n//import MakePost from './../components/posts/MakePost';\n\nconst IndividualGroup = () => {\n    const { groupID } = useParams()\n\n    return (\n        <div>\n            <p> Your on a group! </p>\n            <p> Group ID { groupID } </p>\n            <MakePost groupID = { groupID }/>\n            <Posts groupID = { groupID }/>\n        </div>\n    )\n}\n\nexport default IndividualGroup;\n*/\n","/Users/david/Desktop/David/www/kite/src/pages/NotFound.js",["94","95","96","97","98"],"import React, { useState, useEffect } from 'react';\nimport { Navigate, BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\n\nfunction NotFound() {\n  const navigate = useNavigate()\n\n  useEffect(() =>{\n    setTimeout(() => {\n\n      }, 1000)\n  },[])\n\n    return (\n      <div className=\"user\">\n          <p> Not Found </p>\n      </div>\n    )\n}\n\nexport default NotFound;\n\n\n\n/*\n\n  useEffect(() =>{\n    setTimeout(() => {\n      navigate(\"/login\")\n      }, 1000)\n  },[])\n\nexport function NotFound() {\n  return <Navigate to = \"/login\" />\n\n}\n\n\n\n\nfunction NotFound() {\n\n  return (\n    <div className=\"user\">\n        <p> Not Found </p>\n    </div>\n  );\n}\n\nimport { Navigate, BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\n\nexport function NotFound() {\n    return <Navigate to = \"/login\" />\n}\n*/","/Users/david/Desktop/David/www/kite/src/functions/context/LoginContext.js",[],"/Users/david/Desktop/David/www/kite/src/functions/functions.js",["99","100","101"],"import { useState, useEffect } from 'react';\n\n/*\n\n/* FUNCTIONS \nFUNCTIONS A: Login Functions \n\t1) Function A1: Login a User \n\t2) Function A2: Logout a User  \n\t3) Function A3: Get Login Status \n\n*/\n//FUNCTIONS A: Login Functions \n//Function A1: Login a User \nexport function loginUser(userName) {\n    console.log(\"login \" + userName)\n}\n\n//Function A2: Logout a User \nexport function logouUser(userName) {\n    console.log(\"logout \" + userName)\n}\n\n//Function A3: Get Login Status \nexport function loginStatus(userName) {\n    let userStatus = {\n        isAuthenticated: false,\n        user: userName,\n    };\n\n    if(userName == 'null') {\n        userStatus.isAuthenticated = false;\n      } else {\n        userStatus.isAuthenticated = true;\n      }\n\n      return userStatus;\n}\n\nexport function sayHello(userName) {\n    console.log(\"hello \" + userName)\n}\n\n\n\n\n//export default { sayHi, sayHello };","/Users/david/Desktop/David/www/kite/src/components/login/RegisterUser.js",["102","103","104","105","106","107"],"import React, { useState, useContext } from 'react'\n//import { loginUser } from '../../functions/functions';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\n\n\nfunction RegisterUser() {  \n    const [userName, setUserName] = useState('david')\n    const [email, setEmail] = useState('davey@gmail.com')\n    const [fullName, setFullname] = useState('david v')\n    const [password, setPassword] = useState('password')\n\n    const handleChange = (event) => {\n      const { name, value } = event.target\n      if(name == \"username\") {\n        setUserName(value)\n      } else if (name == \"email\") {\n        setEmail(value)\n      } else if (name == \"fullname\") {\n        setFullname(value)\n      } else if (name == \"password\") {\n        setPassword(value)\n      }\n      console.log(name)\n      console.log(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        console.log(\"Register \" + userName, email, fullName, password)\n        //STEP 1: Call Login API\n\n        //STEP 2: Success\n        //Step 2A: Set local storage  \n        //localStorage.setItem('currentUserLoggedIn', JSON.stringify(userName));\n\n        //Step 2B: Set context\n        //setLoginState(userName)\n\n        //Step 2C: Redirect to Groups\n    }\n\n    return (\n      <div className = \"login\">\n          <form onSubmit={ handleSubmit }>\n              <label> </label> \n              <input name= \"username\" className=\"loginInput\" type=\"text\" value={ userName } onChange={handleChange} />\n              <input name= \"email\" className=\"loginInput\" type=\"text\" value={ email } onChange={handleChange} />\n              <input name= \"fullname\" className=\"loginInput\" type=\"text\" value={ fullName } onChange={handleChange} />\n              <input name= \"password\" className=\"loginInput\" type=\"text\" value={ password } onChange={handleChange} />\n              <button type=\"submit\" className=\"loginButton\" > Register </button>\n          </form>\n      </div>\n    );\n  }\n\nexport default RegisterUser;\n\n/*\n\nimport React, { Component, useState} from 'react'\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        /*\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        *//*\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n*/\n","/Users/david/Desktop/David/www/kite/src/components/login/LogoutUser.js",["108","109"],"/Users/david/Desktop/David/www/kite/src/components/login/LoginUser.js",["110","111","112","113","114","115","116","117","118","119"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useLocation, useNavigate, useResolvedPath } from \"react-router-dom\";\n//import { loginUser } from '../../functions/functions';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\n\nfunction LoginUser() {  \n    var loginURL = \"http://localhost:3003/login\"\n    const navigate = useNavigate();\n    const { currentUser, setLoginState} = useContext(LoginContext);\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\n    const [userName, setUserName] = useState('davey')\n    const [password, setPassword] = useState('password')\n\n    const handleChange = (event) => {\n      const { name, value } = event.target\n\n      if(name == \"username\") {\n        setUserName(value)\n      } else {\n        setPassword(value)\n      }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"logging in \" + userName + \" with password \"  + password)\n        \n        //STEP 1: Call Login API\n        var userInputName = userName\n        var userInputPassword = password\n        console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n    \n        axiosRequest.post(loginURL, {\n          userName: userInputName,\n          password: userInputPassword\n        })\n        .then(function (response) {\n          console.log(response.data);\n          const loginSuccess = response.data.loginSuccess;\n\n          //STEP 2: Success\n          if(loginSuccess == true) {\n            \n            //Step 2A: Set local storage  \n            localStorage.setItem('localStorageCurrentUser', JSON.stringify(userName));\n\n            //Step 2B: Set context\n            setLoginState(userName)\n \n            //Step 2C: Redirect to Groups\n            //navigate(\"/groups\");\n\n          } else {\n            console.log(\"Display error message\");\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n    }\n\n    return (\n      <div className = \"login\">\n          <form onSubmit={ handleSubmit }>\n              <input name= \"username\" className=\"loginInput\" type=\"text\" value={ userName } onChange={handleChange} />\n              <input name= \"password\" className=\"loginInput\" type=\"text\" value={ password } onChange={handleChange} />\n              <button type=\"submit\" className=\"loginButton\" > Login </button>\n          </form>\n      </div>\n    );\n  }\n\nexport default LoginUser;\n\n\n\n\n\n\n/*\nimport React, { Component, useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      console.log(\"you are checking on \" + userInputName )\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        /*\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        *//*\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n\nimport React, { Component, useState} from 'react'\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        /*\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        *//*\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n*/\n","/Users/david/Desktop/David/www/kite/src/pages/GroupsPage.js",["120","121","122","123"],"/Users/david/Desktop/David/www/kite/src/components/groups/Groups.js",["124","125","126","127"],"import React from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'\n\nasync function getGroups(currentUser) {\n  const postURL = 'http://localhost:3003/groups/' + currentUser;  \n  const { data } = await axios.get(postURL)\n  return data\n} \n\nconst Groups = (props) => {\n  const currentUser = props.currentUser;\n  console.log(currentUser)\n\n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser), \n    { refetchInterval: 10000000 }\n  )\n\n  var groups = data;\n\n  //console.log(isLoading)\n  //console.log(isError)\n  //console.log(error)\n\n  return (\n  <div className=\"posts\">\n       <p> Groups </p>\n       <p> User { currentUser } </p>\n       { data && console.log(groups)}\n      \n  </div>\n  );\n  }\n  \nexport default Groups;\n/*\n {data && groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } </Link>\n            <p>{ group.groupID }</p>\n          </div>\n        ))}\n\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios'\nimport IndividualPost from './IndividualPost';\n\nasync function getPosts(groupID) {\n  const postErrorURL = \"/posts/group/error\";\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \n  const { data } = await axios.get(postURL)\n  return data\n} \n\nconst PostList = (props) => {\n  const groupID = props.groupID;\n  \n  const { isLoading, data, isError, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID), \n    { refetchInterval: 10000000 }\n  )\n\n  const currentPosts = data;\n  console.log(isLoading)\n  console.log(isError)\n  console.log(error)\n\n  return (\n  <div className=\"posts\">\n       <p> Posts </p>\n      { isLoading && <div> loading... </div>}\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\n      { data && <IndividualPost posts = { currentPosts } title=\"The posts!\" />}\n      {console.log(data)}\n  </div>\n  );\n  }\n  \nexport default PostList;\n<p> <b> Groups </b></p>\n<p> Current User: { currentUser } </p>\n<p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n\n<Link to={`/group/1`}>{ \"Music 1\" } </Link>\n<Link to={`/group/2`}>{ \"Music 2\" } </Link>\n<Link className=\"\" to=\"/group/5\"> Games 5 </Link>\n\n//\n\n\n*/","/Users/david/Desktop/David/www/kite/src/pages/LoginPage.js",["128","129","130"],"/Users/david/Desktop/David/www/kite/src/pages/RegisterPage.js",["131"],"import React, { useState} from 'react'\nimport RegisterUser from '../components/login/RegisterUser';\n\n\nfunction RegisterPage() {  \n    return (\n      <div className=\"login\">\n       <p>Register</p>\n       <RegisterUser />\n      </div>\n    );\n  }\n\n  export default RegisterPage;\n  \n","/Users/david/Desktop/David/www/kite/src/components/login/LoginStatus.js",["132"],"import React, { useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction LoginStatus() {\n    const [loggedInStatus, setLoginStatus] = useState('');\n    var loginStatusURL = \"http://localhost:3003/login/status\"\n\n    const loginStatus = () => {\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const userName = JSON.parse(data);\n        console.log(\"you are checking on \" + userName )\n  \n        axiosRequest.post(loginStatusURL, {\n          userName: userName\n        })\n        .then(function (response) {\n          /*\n          if(response.data.userLoggedIn != \"notLoggedIn\"){\n            let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n            console.log(loginStatusMessage)\n            setLoginStatus(loginStatusMessage);\n  \n          } else {\n            let loginStatusMessage = \"nobody logged in!\"\n            console.log(loginStatusMessage)\n            setLoginStatus(loginStatusMessage);\n          }\n          */\n           console.log(response.data)\n          \n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      }\n\n    return (\n      <div className=\"login\">\n        <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n        <p>{ loggedInStatus }</p>\n      </div>\n    );\n  }\n\nexport default LoginStatus;\n","/Users/david/Desktop/David/www/kite/src/pages/Home.js",["133","134"],"import React, { useEffect } from 'react';\nimport { useNavigate  } from \"react-router-dom\"\n\nfunction Home() {\n    //Login Status \n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const currentUserLoggedIn = JSON.parse(data);\n        if(currentUserLoggedIn == 'null') {\n            navigate(\"/login\");\n        } else {\n            navigate(\"/groups\");\n        }\n    }, []);\n\n    return (\n      <div className=\"user\">\n          <p> Home go to Login or Groups </p>\n      </div>\n    )\n}\n\nexport default Home;","/Users/david/Desktop/David/www/kite/src/components/posts/Posts.js",["135"],"import React, { useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction Posts() {\n    const getPosts = () => {\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const currentUser = JSON.parse(data);\n      const postURL = \"http://localhost:3003/posts/user/\" + currentUser;\n      console.log(\"Get Posts for \" + currentUser)\n      \n        axiosRequest.get(postURL)\n        .then(function (response) {\n          const posts = response.data;\n           console.log(posts)\n           posts.map((post) => (\n            console.log(post)\n          ))     \n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    return (\n      <div className=\"login\">\n        <button className = \"loginButton\" onClick={ getPosts }> Get Posts </button>\n      </div>\n    );\n  }\n\nexport default Posts;\n\n/*\nposts.map((post) => (\n    \n))\n\n{ posts.map((post) => (\n    <div className=\"post\" key={ post.postID }>\n        <p className = \"post-text\"> { post.postCaption } </p>\n        <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>      \n        <button onClick={ likePost }> Like </button>                         \n    </div>\n))}\n*/\n\n\n",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":18},{"ruleId":"140","severity":1,"message":"144","line":15,"column":8,"nodeType":"142","messageId":"143","endLine":15,"endColumn":16},{"ruleId":"140","severity":1,"message":"145","line":26,"column":10,"nodeType":"142","messageId":"143","endLine":26,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":32,"column":28,"nodeType":"148","messageId":"149","endLine":32,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":17,"column":28,"nodeType":"148","messageId":"149","endLine":17,"endColumn":30},{"ruleId":"150","severity":1,"message":"151","line":26,"column":5,"nodeType":"152","endLine":26,"endColumn":7,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"154","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":23},{"ruleId":"140","severity":1,"message":"155","line":12,"column":11,"nodeType":"142","messageId":"143","endLine":12,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":20,"column":30,"nodeType":"148","messageId":"149","endLine":20,"endColumn":32},{"ruleId":"150","severity":1,"message":"156","line":27,"column":7,"nodeType":"152","endLine":27,"endColumn":9,"suggestions":"157"},{"ruleId":"140","severity":1,"message":"158","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"159","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":18},{"ruleId":"140","severity":1,"message":"154","line":2,"column":20,"nodeType":"142","messageId":"143","endLine":2,"endColumn":33},{"ruleId":"140","severity":1,"message":"160","line":2,"column":48,"nodeType":"142","messageId":"143","endLine":2,"endColumn":52},{"ruleId":"140","severity":1,"message":"155","line":5,"column":9,"nodeType":"142","messageId":"143","endLine":5,"endColumn":17},{"ruleId":"140","severity":1,"message":"158","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":18},{"ruleId":"140","severity":1,"message":"161","line":1,"column":20,"nodeType":"142","messageId":"143","endLine":1,"endColumn":29},{"ruleId":"146","severity":1,"message":"147","line":30,"column":17,"nodeType":"148","messageId":"149","endLine":30,"endColumn":19},{"ruleId":"140","severity":1,"message":"162","line":1,"column":27,"nodeType":"142","messageId":"143","endLine":1,"endColumn":37},{"ruleId":"140","severity":1,"message":"163","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":14,"column":15,"nodeType":"148","messageId":"149","endLine":14,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":16,"column":23,"nodeType":"148","messageId":"149","endLine":16,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":18,"column":23,"nodeType":"148","messageId":"149","endLine":18,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":20,"column":23,"nodeType":"148","messageId":"149","endLine":20,"endColumn":25},{"ruleId":"140","severity":1,"message":"164","line":12,"column":11,"nodeType":"142","messageId":"143","endLine":12,"endColumn":22},{"ruleId":"146","severity":1,"message":"165","line":28,"column":41,"nodeType":"148","messageId":"149","endLine":28,"endColumn":43},{"ruleId":"140","severity":1,"message":"161","line":1,"column":27,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"160","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"166","line":2,"column":16,"nodeType":"142","messageId":"143","endLine":2,"endColumn":27},{"ruleId":"140","severity":1,"message":"167","line":2,"column":42,"nodeType":"142","messageId":"143","endLine":2,"endColumn":57},{"ruleId":"140","severity":1,"message":"155","line":14,"column":11,"nodeType":"142","messageId":"143","endLine":14,"endColumn":19},{"ruleId":"140","severity":1,"message":"164","line":15,"column":13,"nodeType":"142","messageId":"143","endLine":15,"endColumn":24},{"ruleId":"140","severity":1,"message":"145","line":16,"column":12,"nodeType":"142","messageId":"143","endLine":16,"endColumn":24},{"ruleId":"140","severity":1,"message":"168","line":16,"column":26,"nodeType":"142","messageId":"143","endLine":16,"endColumn":41},{"ruleId":"146","severity":1,"message":"147","line":23,"column":15,"nodeType":"148","messageId":"149","endLine":23,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":48,"column":27,"nodeType":"148","messageId":"149","endLine":48,"endColumn":29},{"ruleId":"140","severity":1,"message":"155","line":13,"column":9,"nodeType":"142","messageId":"143","endLine":13,"endColumn":17},{"ruleId":"140","severity":1,"message":"145","line":15,"column":10,"nodeType":"142","messageId":"143","endLine":15,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":21,"column":27,"nodeType":"148","messageId":"149","endLine":21,"endColumn":29},{"ruleId":"150","severity":1,"message":"156","line":30,"column":5,"nodeType":"152","endLine":30,"endColumn":7,"suggestions":"169"},{"ruleId":"140","severity":1,"message":"160","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":14},{"ruleId":"140","severity":1,"message":"170","line":16,"column":11,"nodeType":"142","messageId":"143","endLine":16,"endColumn":20},{"ruleId":"140","severity":1,"message":"171","line":16,"column":28,"nodeType":"142","messageId":"143","endLine":16,"endColumn":35},{"ruleId":"140","severity":1,"message":"172","line":16,"column":37,"nodeType":"142","messageId":"143","endLine":16,"endColumn":42},{"ruleId":"140","severity":1,"message":"155","line":13,"column":9,"nodeType":"142","messageId":"143","endLine":13,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":19,"column":28,"nodeType":"148","messageId":"149","endLine":19,"endColumn":30},{"ruleId":"150","severity":1,"message":"156","line":28,"column":4,"nodeType":"152","endLine":28,"endColumn":6,"suggestions":"173"},{"ruleId":"140","severity":1,"message":"158","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"174","line":9,"column":28,"nodeType":"142","messageId":"143","endLine":9,"endColumn":42},{"ruleId":"146","severity":1,"message":"147","line":11,"column":32,"nodeType":"148","messageId":"149","endLine":11,"endColumn":34},{"ruleId":"150","severity":1,"message":"175","line":16,"column":8,"nodeType":"152","endLine":16,"endColumn":10,"suggestions":"176"},{"ruleId":"140","severity":1,"message":"158","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'sayHello' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'userLoggedIn' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'setLoginState'. Either include them or remove the dependency array.","ArrayExpression",["179"],"'BrowserRouter' is defined but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setLoginState'. Either include it or remove the dependency array.",["180"],"'useState' is defined but never used.","'Navigate' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'LoginContext' is defined but never used.","'currentUser' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useLocation' is defined but never used.","'useResolvedPath' is defined but never used.","'setUserLoggedIn' is assigned a value but never used.",["181"],"'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","'error' is assigned a value but never used.",["182"],"'setLoginStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},{"desc":"186","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [navigate, setLoginState]",{"range":"192","text":"193"},"Update the dependencies array to be: [setLoginState]",{"range":"194","text":"195"},{"range":"196","text":"195"},{"range":"197","text":"195"},"Update the dependencies array to be: [navigate]",{"range":"198","text":"199"},[925,927],"[navigate, setLoginState]",[1022,1024],"[setLoginState]",[1014,1016],[1014,1016],[455,457],"[navigate]"]