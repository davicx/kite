[{"/Users/david/Desktop/David/www/kite/src/index.js":"1","/Users/david/Desktop/David/www/kite/src/App.js":"2","/Users/david/Desktop/David/www/kite/src/pages/GroupsPage.js":"3","/Users/david/Desktop/David/www/kite/src/pages/RegisterPage.js":"4","/Users/david/Desktop/David/www/kite/src/pages/LoginPage.js":"5","/Users/david/Desktop/David/www/kite/src/pages/Home.js":"6","/Users/david/Desktop/David/www/kite/src/pages/ProfilePage.js":"7","/Users/david/Desktop/David/www/kite/src/pages/NotFound.js":"8","/Users/david/Desktop/David/www/kite/src/pages/IndividualGroup.js":"9","/Users/david/Desktop/David/www/kite/src/functions/functions.js":"10","/Users/david/Desktop/David/www/kite/src/functions/context/LoginContext.js":"11","/Users/david/Desktop/David/www/kite/src/components/login/RegisterUser.js":"12","/Users/david/Desktop/David/www/kite/src/components/login/LogoutUser.js":"13","/Users/david/Desktop/David/www/kite/src/components/login/Refresh.js":"14","/Users/david/Desktop/David/www/kite/src/components/login/LoginUser.js":"15","/Users/david/Desktop/David/www/kite/src/components/login/LoginStatus.js":"16","/Users/david/Desktop/David/www/kite/src/components/groups/GroupList.js":"17","/Users/david/Desktop/David/www/kite/src/functions/hooks/useHello.js":"18","/Users/david/Desktop/David/www/kite/src/functions/hooks/useLoginStatus.js":"19","/Users/david/Desktop/David/www/kite/src/functions/hooks/useRefreshToken.js":"20","/Users/david/Desktop/David/www/kite/src/components/groups/CreateGroup.js":"21","/Users/david/Desktop/David/www/kite/src/pages/PostsPage.js":"22","/Users/david/Desktop/David/www/kite/src/components/posts/GroupPosts.js":"23","/Users/david/Desktop/David/www/kite/src/components/posts/display/PostList.js":"24","/Users/david/Desktop/David/www/kite/src/components/posts/actions/NewPost.js":"25","/Users/david/Desktop/David/www/kite/src/components/posts/display/IndividualPost.js":"26","/Users/david/Desktop/David/www/kite/src/components/posts/actions/EditPost.js":"27","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/Likes.js":"28","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/LikePost.js":"29","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/UnlikePost.js":"30","/Users/david/Desktop/David/www/kite/src/hooks/useDisplayName.js":"31","/Users/david/Desktop/David/www/kite/src/functions/apiFunctions.js":"32","/Users/david/Desktop/David/www/kite/src/components/posts/actions/DeletePost.js":"33","/Users/david/Desktop/David/www/kite/src/components/comments/CommentList.js":"34","/Users/david/Desktop/David/www/kite/src/components/comments/display/IndividualComment.js":"35","/Users/david/Desktop/David/www/kite/src/components/notifications/NotificationList.js":"36","/Users/david/Desktop/David/www/kite/src/components/notifications/IndividualNotification.js":"37","/Users/david/Desktop/David/www/kite/src/pages/UsersPage.js":"38","/Users/david/Desktop/David/www/kite/src/components/friends/MyFriends.js":"39","/Users/david/Desktop/David/www/kite/src/components/users/UserProfile.js":"40","/Users/david/Desktop/David/www/kite/src/components/friends/PendingFriends.js":"41","/Users/david/Desktop/David/www/kite/src/components/users/display/AllUsers.js":"42","/Users/david/Desktop/David/www/kite/src/components/users/display/SimpleProfile.js":"43","/Users/david/Desktop/David/www/kite/src/components/friends/UserFriends.js":"44","/Users/david/Desktop/David/www/kite/src/pages/IndividualFriendPage.js":"45","/Users/david/Desktop/David/www/kite/src/pages/FriendPage.js":"46","/Users/david/Desktop/David/www/kite/src/components/friends/FriendList.js":"47","/Users/david/Desktop/David/www/kite/src/hooks/useCurrentUser.js":"48","/Users/david/Desktop/David/www/kite/src/components/friends/actions/AddFriend.js":"49","/Users/david/Desktop/David/www/kite/src/components/friends/actions/FriendInvite.js":"50","/Users/david/Desktop/David/www/kite/src/components/friends/actions/FriendRequest.js":"51","/Users/david/Desktop/David/www/kite/src/components/friends/actions/AcceptFriendInvite.js":"52","/Users/david/Desktop/David/www/kite/src/components/friends/actions/DeclineFriendInvite.js":"53"},{"size":405,"mtime":1669586604965,"results":"54","hashOfConfig":"55"},{"size":2976,"mtime":1691363058748,"results":"56","hashOfConfig":"55"},{"size":1764,"mtime":1684105765500,"results":"57","hashOfConfig":"55"},{"size":279,"mtime":1670546995990,"results":"58","hashOfConfig":"55"},{"size":3027,"mtime":1674954523343,"results":"59","hashOfConfig":"55"},{"size":591,"mtime":1670716549001,"results":"60","hashOfConfig":"55"},{"size":2469,"mtime":1690676987684,"results":"61","hashOfConfig":"55"},{"size":801,"mtime":1668985538692,"results":"62","hashOfConfig":"55"},{"size":3871,"mtime":1690243684562,"results":"63","hashOfConfig":"55"},{"size":1992,"mtime":1679267809362,"results":"64","hashOfConfig":"55"},{"size":115,"mtime":1690676430833,"results":"65","hashOfConfig":"55"},{"size":6174,"mtime":1668985538690,"results":"66","hashOfConfig":"55"},{"size":6150,"mtime":1674955634740,"results":"67","hashOfConfig":"55"},{"size":982,"mtime":1671237368019,"results":"68","hashOfConfig":"55"},{"size":2712,"mtime":1682463363294,"results":"69","hashOfConfig":"55"},{"size":1412,"mtime":1670633943232,"results":"70","hashOfConfig":"55"},{"size":3359,"mtime":1689724781301,"results":"71","hashOfConfig":"55"},{"size":1433,"mtime":1674954755473,"results":"72","hashOfConfig":"55"},{"size":2889,"mtime":1691363076027,"results":"73","hashOfConfig":"55"},{"size":2203,"mtime":1675038575078,"results":"74","hashOfConfig":"55"},{"size":1889,"mtime":1675559444228,"results":"75","hashOfConfig":"55"},{"size":715,"mtime":1692316402517,"results":"76","hashOfConfig":"55"},{"size":437,"mtime":1690159050568,"results":"77","hashOfConfig":"55"},{"size":1543,"mtime":1690157211761,"results":"78","hashOfConfig":"55"},{"size":2142,"mtime":1683327515363,"results":"79","hashOfConfig":"55"},{"size":944,"mtime":1692402741761,"results":"80","hashOfConfig":"55"},{"size":4081,"mtime":1679877629359,"results":"81","hashOfConfig":"55"},{"size":14087,"mtime":1677888704006,"results":"82","hashOfConfig":"55"},{"size":2009,"mtime":1693699629351,"results":"83","hashOfConfig":"55"},{"size":4128,"mtime":1677889695920,"results":"84","hashOfConfig":"55"},{"size":287,"mtime":1679266570914,"results":"85","hashOfConfig":"55"},{"size":1944,"mtime":1691362982732,"results":"86","hashOfConfig":"55"},{"size":1699,"mtime":1679786576733,"results":"87","hashOfConfig":"55"},{"size":1676,"mtime":1680222127368,"results":"88","hashOfConfig":"55"},{"size":404,"mtime":1680222100827,"results":"89","hashOfConfig":"55"},{"size":2178,"mtime":1690157187964,"results":"90","hashOfConfig":"55"},{"size":649,"mtime":1683504450213,"results":"91","hashOfConfig":"55"},{"size":868,"mtime":1690763226913,"results":"92","hashOfConfig":"55"},{"size":2168,"mtime":1691019184488,"results":"93","hashOfConfig":"55"},{"size":630,"mtime":1690067036473,"results":"94","hashOfConfig":"55"},{"size":1333,"mtime":1687133307702,"results":"95","hashOfConfig":"55"},{"size":3877,"mtime":1693700249392,"results":"96","hashOfConfig":"55"},{"size":3130,"mtime":1693701494335,"results":"97","hashOfConfig":"55"},{"size":1314,"mtime":1690155014537,"results":"98","hashOfConfig":"55"},{"size":1032,"mtime":1690156788799,"results":"99","hashOfConfig":"55"},{"size":1161,"mtime":1690676982184,"results":"100","hashOfConfig":"55"},{"size":1656,"mtime":1691278490926,"results":"101","hashOfConfig":"55"},{"size":1014,"mtime":1690676728558,"results":"102","hashOfConfig":"55"},{"size":5827,"mtime":1693701858986,"results":"103","hashOfConfig":"55"},{"size":750,"mtime":1693787134299,"results":"104","hashOfConfig":"55"},{"size":2648,"mtime":1693786269772,"results":"105","hashOfConfig":"55"},{"size":2450,"mtime":1693870807467,"results":"106","hashOfConfig":"55"},{"size":2457,"mtime":1693872039092,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1bcufqt",{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"110"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"110"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"110"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"110"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/david/Desktop/David/www/kite/src/index.js",[],["254","255"],"/Users/david/Desktop/David/www/kite/src/App.js",["256","257","258","259"],"import React, { useState, useEffect } from 'react';\nimport { Route, Routes, Link } from 'react-router-dom'\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\n//Functions \nimport { sayHello } from './functions/functions';\n\n//Style \nimport './style/style.css';\nimport './style/external/normalize.css';\n\n//Pages\nimport Home from './pages/Home';\nimport Login from './pages/LoginPage';\nimport Register from './pages/RegisterPage';\nimport Groups from './pages/GroupsPage';\nimport Profile from './pages/ProfilePage';\nimport Posts from './pages/PostsPage';\nimport Users from './pages/UsersPage';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\n//import IndividualFriend from './pages/IndividualFriendPage';\n//This is temp above works\nimport IndividualFriend from './pages/FriendPage';\n//\nimport { LoginContext } from './functions/context/LoginContext';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const [currentUser, setLoginState] = useState('null');\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n\n  useEffect(() => {\n     const data = localStorage.getItem(\"localStorageCurrentUser\");\n     const currentUserLoggedIn = JSON.parse(data);\n     setLoginState(currentUserLoggedIn);\n    if(currentUserLoggedIn == \"null\") {\n      setUserLoggedIn(false);\n    } else {\n      setUserLoggedIn(true);\n    }\n  }, []);\n\n  //http://localhost:3000/group/70\n  //http://localhost:3000/friend/sam\n\n  return (\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <LoginContext.Provider value = {{currentUser, setLoginState}} > \n\n            <nav className=\"navBar\">\n              <Link className=\"navLink\" to=\"/login\">Login </Link>\n              <Link className=\"navLink\" to=\"/groups\"> Groups </Link>\n              <Link className=\"navLink\" to=\"/profile\"> Profile </Link>\n              <Link className=\"navLink\" to=\"/posts\"> Posts </Link>\n              <Link className=\"navLink\" to=\"/users\"> Users </Link>\n            </nav>  \n            \n            <Routes>      \n              <Route path=\"/\" element={<Home/>} />\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/groups\" element={<Groups/>} />\n              <Route path = \"/group/:groupID\" element = {<IndividualGroup />} />   \n              <Route path = \"/friends/:friendName\" element = {<IndividualFriend />} />   \n              <Route path=\"/profile\" element={<Profile/>} />\n              <Route path=\"/posts\" element={<Posts/>} />\n              <Route path=\"/users\" element={<Users/>} />\n              <Route path=\"*\" element={ <NotFound /> } />       \n            </Routes>\n          </LoginContext.Provider> \n          <ReactQueryDevtools initialIsOpen={false} position='bottom-right'/>  \n        </QueryClientProvider>\n      </div>\n\n  );\n}\n\nexport default App;\n\n/*\n<Link className=\"navLink\" to=\"/users\"> Users </Link>\n*/","/Users/david/Desktop/David/www/kite/src/pages/GroupsPage.js",["260"],"//import React, { useState, useEffect, useContext } from 'react';\nimport React from 'react';\n//import { useNavigate  } from \"react-router-dom\"\n//import { LoginContext } from \"../functions/context/LoginContext\";\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport apiFunctions from '../functions/apiFunctions';\nimport Groups from '../components/groups/GroupList';\n//import CreateGroup from '../components/simple/simpleUser';\n//import NotificationList from '../components/notifications/NotificationList';\n\nconst axiosRequest = apiFunctions.getAPI();\n\nfunction GroupsPage() {\n  const { currentUser, userLoggedIn  } = useLoginStatus();\n  \n  return (\n    <div className=\"user\">\n        <p> Current User: {currentUser}</p>\n        <Groups currentUser = { currentUser } api = { axiosRequest } /> \n         \n    </div>\n  );\n}\n\nexport default GroupsPage;\n\n\n/*\n        <!-- Doesn't work -->\n        <CreateGroup currentUser = { currentUser } api = { axiosRequest } />\n*/\n\n\n\n/*\nasync function refreshToken() {\n  console.log(\"ATTEMPTING TO REFRESH TOKEN: refreshToken()\")\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const userName = JSON.parse(data);\n      console.log(\"refreshToken: you are refreshing for\" + userName)\n      //STEP 1: Call Logout API\n      axiosRequest.post(refreshURL, {\n        userName: userName,\n        refreshToken: \"dontneedheretoken\"\n      })\n      .then(function (response) {\n        console.log(\"refreshToken(): We got a new access token!\")\n        return response.data;\n      })\n      .catch(function (error) {\n        console.log(\"refreshToken(): We failed to get a new access token!\")\n        //console.log(error);\n      });\n  \n  }\n*/","/Users/david/Desktop/David/www/kite/src/pages/RegisterPage.js",["261"],"import React, { useState} from 'react'\nimport RegisterUser from '../components/login/RegisterUser';\n\n\nfunction RegisterPage() {  \n    return (\n      <div className=\"login\">\n       <p>Register</p>\n       <RegisterUser />\n      </div>\n    );\n  }\n\n  export default RegisterPage;\n  \n","/Users/david/Desktop/David/www/kite/src/pages/LoginPage.js",["262","263","264"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport LoginUser from '../components/login/LoginUser';\nimport LoginStatus from '../components/login/LoginStatus';\nimport { LoginContext } from \"../functions/context/LoginContext\";\n\n\nfunction LoginPage() {  \n\n  //Check Login Status \n  const { currentUser, setLoginState} = useContext(LoginContext);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn);\n\n    if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\n      setUserLoggedIn(false);\n      console.log(\"No one is logged in right now\");\n      console.log(\"Login Page: OK STAY HERE\");\n    } else {\n      setUserLoggedIn(true);\n      console.log(\"Login Page: DONT BE HERE\");\n      console.log(currentUserLoggedIn + \" is currently logged in\");\n    } \n}, []);\n    return (\n      <div className=\"login\">\n        <label>Current User: { currentUser } </label> \n        <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n        <LoginUser />\n        <LoginStatus />\n      </div>\n    );\n  }\n\nexport default LoginPage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nimport { useNavigate, useResolvedPath } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n//import LoginHeader from '../components/headers/LoginHeader';\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    //console.log(\"APP LOGIN PAGE \" + currentUserLoggedIn)\n    console.log(currentUserLoggedIn)\n    if(currentUserLoggedIn == 'null') {\n      //console.log(\"OK STAY HERE\")\n      //console.log(\"userLoggedIn = false\")\n    } else {\n      //console.log(\"DONT BE HERE\");\n      navigate(\"/groups\");\n      //console.log(\"userLoggedIn = true\")\n      \n    }\n  }, []);\n\nfunction Login() {\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n*/\n\n","/Users/david/Desktop/David/www/kite/src/pages/Home.js",["265","266"],"import React, { useEffect } from 'react';\nimport { useNavigate  } from \"react-router-dom\"\n\nfunction Home() {\n    //Login Status \n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const currentUserLoggedIn = JSON.parse(data);\n        if(currentUserLoggedIn == 'null') {\n            navigate(\"/login\");\n        } else {\n            navigate(\"/groups\");\n        }\n    }, []);\n\n    return (\n      <div className=\"user\">\n          <p> Home go to Login or Groups </p>\n      </div>\n    )\n}\n\nexport default Home;","/Users/david/Desktop/David/www/kite/src/pages/ProfilePage.js",["267","268"],"import React from 'react';\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport apiFunctions from '../functions/apiFunctions';\nimport UserProfile from '../components/users/UserProfile';\nimport LogoutUser from '../components/login/LogoutUser';\nimport useCurrentUser from '../hooks/useCurrentUser';\n\n\nconst axiosRequest = apiFunctions.getAPI();\n\nfunction ProfilePage() {\n\n    //STEP 1: Check user is logged in\n    const loggedInMessage = useLoginStatus();\n\n    //STEP 3: Get the current User\n    var [currentUser, setCurrentUser] = useCurrentUser();\n  \n  return (\n    <div className=\"user\">\n        <h4> PROFILE PAGE </h4>\n        <p> Current User: {currentUser}</p>\n        \n        <UserProfile currentUser = { currentUser } api = { axiosRequest } /> \n        <LogoutUser />\n    </div>\n  );\n}\n\nexport default ProfilePage;\n\n\n/*\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\nimport UserProfile from '../components/users/UserProfile';\nimport LogoutUser from '../components/login/LogoutUser';\n\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport axios from 'axios'\n\n\n\nfunction ProfilePage() {\n  console.log(\"PAGE: ProfilePage\")\n  //const { currentUser, setLoginState} = useContext(LoginContext);\n  //const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const { currentUser, userLoggedIn  } = useLoginStatus();\n  \n  return (\n    <div className=\"user\">\n        <p><b> Profile </b></p>\n        <p> Current User: { currentUser } </p>\n        <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n        <UserProfile currentUser = { currentUser } api = { axiosRequest } /> \n        <LogoutUser />\n    </div>\n  );\n}\n\nexport default ProfilePage;\n*/\n\n\n\n\n\n/*\n\nimport React, { useState, useContext } from 'react';\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\nimport LogoutUser from '../components/login/LogoutUser';\nimport { LoginContext } from \"../functions/context/LoginContext\";\n//import { LoggedInContext } from \"../functions/context/LoggedInContext\";\n\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Profile() {\n  const { currentUser, setLoginState} = useContext(LoginContext);\n      \n  return (\n    <div className=\"user\">\n        <p> Profile</p>\n\n    </div>\n  );\n}\n\nexport default Profile;\nexport default Profile;\n*/\n\n","/Users/david/Desktop/David/www/kite/src/pages/NotFound.js",["269","270","271","272","273"],"import React, { useState, useEffect } from 'react';\nimport { Navigate, BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\n\nfunction NotFound() {\n  const navigate = useNavigate()\n\n  useEffect(() =>{\n    setTimeout(() => {\n\n      }, 1000)\n  },[])\n\n    return (\n      <div className=\"user\">\n          <p> Not Found </p>\n      </div>\n    )\n}\n\nexport default NotFound;\n\n\n\n/*\n\n  useEffect(() =>{\n    setTimeout(() => {\n      navigate(\"/login\")\n      }, 1000)\n  },[])\n\nexport function NotFound() {\n  return <Navigate to = \"/login\" />\n\n}\n\n\n\n\nfunction NotFound() {\n\n  return (\n    <div className=\"user\">\n        <p> Not Found </p>\n    </div>\n  );\n}\n\nimport { Navigate, BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\n\nexport function NotFound() {\n    return <Navigate to = \"/login\" />\n}\n*/","/Users/david/Desktop/David/www/kite/src/pages/IndividualGroup.js",["274","275","276","277","278","279"],"import { useParams } from \"react-router\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate, Link  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\n//import { refreshToken } from \"../functions/functions\";\nimport GroupPosts from '../components/posts/GroupPosts';\nimport apiFunctions from '../functions/apiFunctions';\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport NotificationList from '../components/notifications/NotificationList';\n\nconst axiosRequest = apiFunctions.getAPI();\n\n\nconst IndividualGroup = (props) => {\n    const { groupID } = useParams()\n    const { currentUser, userLoggedIn  } = useLoginStatus();\n    console.log(\"IndividualGroup: \" + currentUser)\n\n    return (\n        <div>\n          <GroupPosts groupID = { groupID } currentUser = { currentUser } api = { axiosRequest } />\n          <NotificationList currentUser = { currentUser } api = { axiosRequest } />\n          <Link className=\"\" to=\"/groups\"> Groups </Link>   \n        </div>\n    )\n}\n\nexport default IndividualGroup;\n\n\n\n\n\n\n\n\n\n//APPENDIX\n\n/*\n        <div>\n          <p><b>Current User: { currentUser } is visiting a group with the ID { groupID }</b></p>\n          <GroupPosts groupID = { groupID } currentUser = { currentUser } api = { axiosRequest } />\n          <Link className=\"\" to=\"/groups\"> Groups </Link>\n        </div>\n*/\n\n\n//import Posts from '../components/posts/GroupPosts';\n//import NewPost from './../components/posts/NewPost';\n\n//USER: Login and Refresh \n\n/*\nimport axios from 'axios'\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})  \n\nasync function refreshToken() {\n  console.log(\"ATTEMPTING TO REFRESH TOKEN: refreshToken()\")\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const userName = JSON.parse(data);\n      console.log(\"refreshToken: you are refreshing for\" + userName)\n      //STEP 1: Call Logout API\n      axiosRequest.post(refreshURL, {\n        userName: userName,\n        refreshToken: \"dontneedheretoken\"\n      })\n      .then(function (response) {\n        console.log(\"refreshToken(): We got a new access token!\")\n        return response.data;\n      })\n      .catch(function (error) {\n        console.log(\"refreshToken(): We failed to get a new access token!\")\n        //console.log(error);\n      });\n  \n  }\n\n//STATUS 200: Good Request \naxiosRequest.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  console.log(\"INTERCEPTOR: Looks good! \")\n  return response;\n}, function (error) {\n  console.log(error.response.status)\n  console.log(error.response)\n  \n  //STATUS 498:  Need to get a access token\n  console.log(\"INTERCEPTOR: Need to get a access token or logout the user\")\n  if(error.response.status == 498) {\n    console.log(\"INTERCEPTOR 498: We got a 498 so we need a new access token. Will send refresh token \")\n    //const refreshURL = \"http://localhost:3003/refresh/tokens\"\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n\n    //const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\n    //const { data, error, isPending } = useRefreshToken(refreshURL);\n    //const refreshOutcome = refreshToken(axiosRequest);\n    const refreshOutcome = refreshToken(axiosRequest);\n    console.log(\"We refreshed the access token!\")\n\n  } \n\n  //STATUS 440: Logout User\n  if(error.response.status == 440) {\n    console.log(\"INTERCEPTOR 440: We got a 440 we couldn't refresh the access token because the refresh token was no good need to logout the user\")  \n    localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\")); \n    window.location.href = '/login';\n  }\n  \n  return Promise.reject(error);\n  \n});\n\n//Login and Refresh\n*/\n","/Users/david/Desktop/David/www/kite/src/functions/functions.js",["280","281"],"import axios from 'axios'\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})  \n\n/* \nFUNCTIONS A: Login Functions \n\t1) Function A1: Login a User \n\t2) Function A2: Logout a User  \n\t3) Function A3: Get Login Status \n\t4) Function A4: Request new Refresh Token\n\n*/\n\n//FUNCTIONS A: Login Functions \n//Function A1: Login a User \nfunction loginUser(userName) {\n    console.log(\"login \" + userName)\n}\n\n//Function A2: Logout a User \nfunction logoutUser() {\n    //const navigate = useNavigate();\n    console.log(\"logout \")\n\n    //Step 2A: Set local storage  \n    localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\"));   \n\n    //Step 2B: Redirect to Login\n    //navigate(\"/login\");\n}\n\n//Function A3: Get Login Status \nfunction loginStatus(userName) {\n    let userStatus = {\n        isAuthenticated: false,\n        user: userName,\n    };\n\n    if(userName == 'null') {\n        userStatus.isAuthenticated = false;\n      } else {\n        userStatus.isAuthenticated = true;\n      }\n\n      return userStatus;\n}\n\nfunction sayHello(userName) {\n    console.log(\"hello \" + userName)\n}\n\n//Function A4: Request new Refresh Token\nasync function refreshToken() {\n  console.log(\"ATTEMPTING TO REFRESH TOKEN: refreshToken()\")\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const userName = JSON.parse(data);\n      console.log(\"refreshToken: you are refreshing for\" + userName)\n\n      //STEP 1: Call Logout API\n      axiosRequest.post(refreshURL, {\n        userName: userName,\n        refreshToken: \"dontneedheretoken\"\n      })\n      .then(function (response) {\n        console.log(\"refreshToken(): We got a new access token!\")\n        return response.data;\n      })\n      .catch(function (error) {\n        console.log(\"refreshToken(): We failed to get a new access token!\")\n        //console.log(error);\n      });\n  \n  }\n\nexport default { loginUser, logoutUser, loginStatus, refreshToken, sayHello };","/Users/david/Desktop/David/www/kite/src/functions/context/LoginContext.js",[],"/Users/david/Desktop/David/www/kite/src/components/login/RegisterUser.js",["282","283","284","285","286","287"],"import React, { useState, useContext } from 'react'\n//import { loginUser } from '../../functions/functions';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\n\n\nfunction RegisterUser() {  \n    const [userName, setUserName] = useState('david')\n    const [email, setEmail] = useState('davey@gmail.com')\n    const [fullName, setFullname] = useState('david v')\n    const [password, setPassword] = useState('password')\n\n    const handleChange = (event) => {\n      const { name, value } = event.target\n      if(name == \"username\") {\n        setUserName(value)\n      } else if (name == \"email\") {\n        setEmail(value)\n      } else if (name == \"fullname\") {\n        setFullname(value)\n      } else if (name == \"password\") {\n        setPassword(value)\n      }\n      console.log(name)\n      console.log(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        console.log(\"Register \" + userName, email, fullName, password)\n        //STEP 1: Call Login API\n\n        //STEP 2: Success\n        //Step 2A: Set local storage  \n        //localStorage.setItem('currentUserLoggedIn', JSON.stringify(userName));\n\n        //Step 2B: Set context\n        //setLoginState(userName)\n\n        //Step 2C: Redirect to Groups\n    }\n\n    return (\n      <div className = \"login\">\n          <form onSubmit={ handleSubmit }>\n              <label> </label> \n              <input name= \"username\" className=\"loginInput\" type=\"text\" value={ userName } onChange={handleChange} />\n              <input name= \"email\" className=\"loginInput\" type=\"text\" value={ email } onChange={handleChange} />\n              <input name= \"fullname\" className=\"loginInput\" type=\"text\" value={ fullName } onChange={handleChange} />\n              <input name= \"password\" className=\"loginInput\" type=\"text\" value={ password } onChange={handleChange} />\n              <button type=\"submit\" className=\"loginButton\" > Register </button>\n          </form>\n      </div>\n    );\n  }\n\nexport default RegisterUser;\n\n/*\n\nimport React, { Component, useState} from 'react'\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        /*\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        *//*\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n*/\n","/Users/david/Desktop/David/www/kite/src/components/login/LogoutUser.js",["288","289"],"import React, { useContext } from 'react';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\nimport functions from \"../../functions/functions\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction LogoutUser() {\n  const navigate = useNavigate();\n  const { currentUser, setLoginState} = useContext(LoginContext);\n  const logoutURL = \"http://localhost:3003/user/logout\"\n     \n    function logout() {\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const userName = JSON.parse(data);\n        console.log(\"you are loggin out\" + userName )\n        \n        //STEP 1: Call Logout API\n        axiosRequest.post(logoutURL, {\n          userName: userName,\n          refreshToken: \"token\"\n        })\n        .then(function (response) {\n          console.log(response.data)\n\n          if(response.data.userLoggedIn != \"notLoggedIn\"){\n            let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n            console.log(loginStatusMessage)\n            //setLoginStatus(loginStatusMessage);\n  \n          } else {\n            let loginStatusMessage = \"nobody logged in!\"\n            console.log(loginStatusMessage)\n            //setLoginStatus(loginStatusMessage);\n          }\n          \n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n        //Step 2A: Set local storage  \n        localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\"));   \n      \n        //Step 2B: Set context\n        setLoginState('null')\n\n        //Step 2C: Redirect to Login\n        navigate(\"/login\");\n        \n    }\n    \n    return (\n    <div className = \"holder\">\n        <p>LOGOUT { currentUser } </p>\n        <button className=\"loginButton\" onClick={() => logout() }> Logout </button>\n      </div>\n    );\n}\n\n\nexport default LogoutUser;\n\n\n\n\n\n\n\n/*\nimport React, { Component, useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\n\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      console.log(\"you are checking on \" + userInputName )\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        \n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n\n*/","/Users/david/Desktop/David/www/kite/src/components/login/Refresh.js",["290"],"import React, { useContext } from 'react';\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction Refresh() {\n    function refreshToken() {\n      const refreshURL = \"http://localhost:3003/refresh/tokens\"\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const userName = JSON.parse(data);\n        console.log(\"you are refreshing for\" + userName )\n        \n        //STEP 1: Call Logout API\n        axiosRequest.post(refreshURL, {\n          userName: userName,\n          refreshToken: \"dontneedheretoken\"\n        })\n        .then(function (response) {\n          console.log(response.data)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n    \n    return (\n    <div className = \"holder\">\n        <p>Refresh Token</p>\n        <button className=\"loginButton\" onClick={() => refreshToken() }> Refresh Token </button>\n      </div>\n    );\n}\n\n\nexport default Refresh;\n\n\n\n\n",["291","292"],"/Users/david/Desktop/David/www/kite/src/components/login/LoginUser.js",["293","294","295","296","297","298","299","300","301"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useLocation, useNavigate, useResolvedPath } from \"react-router-dom\";\n//import { loginUser } from '../../functions/functions';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\n\nfunction LoginUser() {  \n    var loginURL = \"http://localhost:3003/user/login\"\n    const navigate = useNavigate();\n    const { currentUser, setLoginState} = useContext(LoginContext);\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\n    const [userName, setUserName] = useState('davey')\n    const [password, setPassword] = useState('password')\n\n    const handleChange = (event) => {\n      const { name, value } = event.target\n\n      if(name == \"username\") {\n        setUserName(value)\n      } else {\n        setPassword(value)\n      }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"logging in \" + userName + \" with password \"  + password)\n        \n        //STEP 1: Call Login API\n        var userInputName = userName\n        var userInputPassword = password\n        console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n    \n        axiosRequest.post(loginURL, {\n          userName: userInputName,\n          password: userInputPassword\n        })\n        .then(function (response) {\n          console.log(response.data);\n   \n          const loginSuccess = response.data.data.loginSuccess;\n          const currentUser = response.data.data.loggedInUser;\n\n          //var userNameServer = \n\n          //STEP 2: Success\n          if(loginSuccess == true) {\n            \n            //Step 2A: Set local storage  \n            localStorage.setItem('localStorageCurrentUser', JSON.stringify(currentUser));\n\n            //Step 2B: Set context\n            setLoginState(currentUser)\n \n            //Step 2C: Redirect to Groups\n            //navigate(\"/groups\");\n            navigate(\"/profile\");\n\n          } else {\n            console.log(\"Display error message\");\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n    }\n\n    return (\n      <div className = \"login\">\n          <form onSubmit={ handleSubmit }>\n              <input name= \"username\" className=\"loginInput\" type=\"text\" value={ userName } onChange={handleChange} />\n              <input name= \"password\" className=\"loginInput\" type=\"text\" value={ password } onChange={handleChange} />\n              <button type=\"submit\" className=\"loginButton\" > Login </button>\n          </form>\n      </div>\n    );\n  }\n\nexport default LoginUser;\n\n\n\n\n","/Users/david/Desktop/David/www/kite/src/components/login/LoginStatus.js",["302"],"import React, { useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction LoginStatus() {\n    const [loggedInStatus, setLoginStatus] = useState('');\n    var loginStatusURL = \"http://localhost:3003/login/status\"\n\n    const loginStatus = () => {\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const userName = JSON.parse(data);\n        console.log(\"you are checking on \" + userName )\n  \n        axiosRequest.post(loginStatusURL, {\n          userName: userName\n        })\n        .then(function (response) {\n          /*\n          if(response.data.userLoggedIn != \"notLoggedIn\"){\n            let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n            console.log(loginStatusMessage)\n            setLoginStatus(loginStatusMessage);\n  \n          } else {\n            let loginStatusMessage = \"nobody logged in!\"\n            console.log(loginStatusMessage)\n            setLoginStatus(loginStatusMessage);\n          }\n          */\n           console.log(response.data)\n          \n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      }\n\n    return (\n      <div className=\"login\">\n        <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n        <p>{ loggedInStatus }</p>\n      </div>\n    );\n  }\n\nexport default LoginStatus;\n","/Users/david/Desktop/David/www/kite/src/components/groups/GroupList.js",["303","304","305"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\n//import  functions from \"../../functions/functions\";\n//import useHello from '../../functions/hooks/useHello';\n\nasync function getGroups(currentUser, api) {\n  if(currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n   \n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser; \n  const { data } = await api.get(groupURL)\n\n  return data\n} \n\n\nconst GroupList = (props) => {\n  const currentUser = props.currentUser;\n  const api = props.api;\n  \n  //const { hello} = useHello();\n\n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser, api), \n    { refetchInterval: 10000000 }\n  )\n\n  var groups = data;\n\n  return (\n  <div className=\"groups\">\n      { isLoading && <div> loading... </div>}\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\n      { data && console.log()}\n      {data && groups.groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n          </div>\n      ))}\n  </div>\n  );\n  }\n  \nexport default GroupList;\n\n\n\n//import useRefreshToken from '../../functions/hooks/useRefreshToken';\n//import axios from 'axios'\n\n/*\nasync function refreshToken() {\n  const refreshURL = \"http://localhost:3003/refresh/tokens\"\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const userName = JSON.parse(data);\n    //console.log(\"REFRESH TOKEN: you are refreshing for\" + userName )\n    //STEP 1: Call Logout API\n    axiosRequest.post(refreshURL, {\n      userName: userName,\n      refreshToken: \"dontneedheretoken\"\n    })\n    .then(function (response) {\n      console.log(response.data)\n      return response.data;\n    })\n    .catch(function (error) {\n      //console.log(error);\n    });\n}\n*/\n\n/*\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})  \n\n\n//STATUS 200: Good Request \naxiosRequest.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  console.log(\"INTERCEPTOR: Looks good! \")\n  return response;\n}, function (error) {\n  \n  //STATUS 498:  Need to get a access token\n  console.log(\"INTERCEPTOR: Need to get a access token or logout the user\")\n  if(error.response.status == 498) {\n    console.log(\"INTERCEPTOR 498: We got a 498 so we need a new access token. Will send refresh token \")\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n\n    //const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\n    //const { data, error, isPending } = useRefreshToken(refreshURL);\n    const refreshOutcome = functions.refreshToken();\n    console.log(\"Got a 498: Here is the status if we could get a new refresh token!\")\n\n  } \n\n  //STATUS 440: Logout User\n  if(error.response.status == 440) {\n    console.log(\"INTERCEPTOR 440: We got a 440 we couldn't refresh the access token because the refresh token was no good need to logout the user\")  \n    localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\")); \n    window.location.href = '/login';\n  }\n  \n  return Promise.reject(error);\n  \n});\n\n*/\n","/Users/david/Desktop/David/www/kite/src/functions/hooks/useHello.js",["306"],"import { useEffect } from 'react'\n\nfunction useHello() {\n  const hello = \"hello\"\n\n    return { hello }\n}\n\nexport default useHello\n\n/*\nimport { useDebugValue, useEffect, useState } from 'react'\n\nfunction useDisplayName() {\n    const [name, setName] = useState('name')\n\n    useEffect(() => {\n      const dataName = \"Frodo from database\"\n      setName(dataName)\n    }, []);\n\n    return name\n}\n\nexport default useDisplayName\n*/\n/*\nimport { useState, useEffect } from 'react';\n\nconst useFetchPosts = (postsURL) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(postsURL)\n      .then(res => {\n        if (!res.ok) { \n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch(err => {\n        setIsPending(false);\n        setError(err.message);\n      })\n    }, 1000);\n  }, [postsURL])\n\n  return { data, isPending, error };\n}\n \nexport default useFetchPosts;\n*/\n//DEBUG\n/*\nfunction useDisplayName() {\n    const [name, setName] = useState('name')\n\n    useEffect(() => {\n      const dataName = \"Frodo from database\"\n      setName(dataName)\n    }, []);\n\n    useDebugValue(name ?? '... loading!')\n\n    return name\n}\n*/\n",["307","308"],"/Users/david/Desktop/David/www/kite/src/functions/hooks/useLoginStatus.js",["309","310","311","312"],"import { useEffect, useState, useContext } from 'react'\nimport { useNavigate  } from \"react-router-dom\"\n//import { LoginContext } from \"../context/LoginContext\";\n\nfunction useLoginStatus() {\n    const navigate = useNavigate();\n    //const { currentUser, setLoginState} = useContext(LoginContext);\n\n    useEffect(() => {\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const currentUserLoggedIn = JSON.parse(data);\n      //setLoginState(currentUserLoggedIn);\n\n      if(currentUserLoggedIn == \"null\") {\n        console.log(\"Current user is null so you should be on login page\");\n        //navigate(\"/login\");\n      } else {\n        console.log(currentUserLoggedIn + \" is Logged In should be on one of their pages\")\n      }\n   }, []);\n\n    return \"useLoginStatus called\"\n}\n\nexport default useLoginStatus;\n\n\n\n/*\n  //Login Status \n  const navigate = useNavigate();\n  const { currentUser, setLoginState} = useContext(LoginContext);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn);\n    //if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\n    if(currentUserLoggedIn == 'null') {\n      setUserLoggedIn(false);\n      console.log(\"Profile Page: DONT BE HERE\");\n      //navigate(\"/login\");\n    } else {\n      setUserLoggedIn(true);\n      console.log(\"Profile Page: OK STAY HERE\")\n      console.log(currentUserLoggedIn + \" is currently logged in\");\n    }\n }, []);\n */\n\n/*\n\nimport { useDebugValue, useEffect, useState } from 'react'\n\nfunction useDisplayName() {\n    const [name, setName] = useState('name')\n\n    useEffect(() => {\n      const dataName = \"Frodo from database\"\n      setName(dataName)\n    }, []);\n\n    return name\n}\n\nexport default useDisplayName\n*/\n/*\nimport { useState, useEffect } from 'react';\n\nconst useFetchPosts = (postsURL) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(postsURL)\n      .then(res => {\n        if (!res.ok) { \n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch(err => {\n        setIsPending(false);\n        setError(err.message);\n      })\n    }, 1000);\n  }, [postsURL])\n\n  return { data, isPending, error };\n}\n \nexport default useFetchPosts;\n*/\n//DEBUG\n/*\nfunction useDisplayName() {\n    const [name, setName] = useState('name')\n\n    useEffect(() => {\n      const dataName = \"Frodo from database\"\n      setName(dataName)\n    }, []);\n\n    useDebugValue(name ?? '... loading!')\n\n    return name\n}\n*/\n","/Users/david/Desktop/David/www/kite/src/functions/hooks/useRefreshToken.js",["313"],"/Users/david/Desktop/David/www/kite/src/components/groups/CreateGroup.js",["314","315","316","317"],"import React, { useState } from 'react';\nimport { useMutation } from \"react-query\";\n//import { Link, useLocation, useNavigate, useResolvedPath } from \"react-router-dom\";\n//import { loginUser } from '../../functions/functions';\n//import { LoginContext } from \"../../functions/context/LoginContext\";\n//import axios from \"axios\";\n\n\nasync function createNewGroup(api) {\n    const response = await api.post('http://localhost:3003/group/create/')\n    //setMessage(response.data)\n    console.log(response.data)\n}\n\n\nfunction CreateGroup(props) {  \n    const currentUser = props.currentUser;\n    const api = props.api;\n    const [groupName, setGroupName] = useState('New Group!')\n\n    const { isLoading, isError, error, mutate } = useMutation(createNewGroup(api))\n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setGroupName(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"Create a new Group \" + groupName + \" for \"  + currentUser)\n        const newGroup = {\n            \"currentUser\": currentUser,\n            \"groupName\": groupName,\n            \"groupType\": \"kite\",\n            \"groupPrivate\": 1,\n            \"groupUsers\": [\"davey\", \"sam\", \"frodo\"],\n            \"notificationMessage\": \"Invited you to a new Group\",  \n            \"notificationType\": \"group_invite\",\n            \"notificationLink\": \"http://localhost:3003/group/77\"   \n        }\n        \n        mutate(newGroup)\n    }\n\n    return (\n      <div className = \"login\">\n          <form onSubmit={ handleSubmit }>\n              <input name= \"group-name\" className=\"loginInput\" type=\"text\" value={ groupName } onChange={handleChange} />\n              <p> { groupName } </p>\n              <button type=\"submit\" className=\"loginButton\" > Create New Group </button>\n          </form>\n      </div>\n    );\n  }\n\nexport default CreateGroup;\n\n\n\n\n",["318","319"],"/Users/david/Desktop/David/www/kite/src/pages/PostsPage.js",["320","321","322","323","324","325","326","327","328"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { useNavigate  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport functions from \"../functions/functions\";\n\nimport PostList from '../components/posts/display/PostList';\nimport NewPost from '../components/posts/actions/NewPost';\n\nimport axios from 'axios'\n\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})  \n\n\nfunction PostsPage() {\n\n  return (\n    <div className=\"user\">\n        <PostList groupID = { 70 } api = { axiosRequest }/>\n\n    </div>\n  );\n}\n\nexport default PostsPage;\n","/Users/david/Desktop/David/www/kite/src/components/posts/GroupPosts.js",[],"/Users/david/Desktop/David/www/kite/src/components/posts/display/PostList.js",[],"/Users/david/Desktop/David/www/kite/src/components/posts/actions/NewPost.js",["329","330","331"],"import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n  \n})\n\nasync function makePost(post) {\n    const postURL = \"http://localhost:3003/post/text\";\n    const response = await axios.post(postURL, post);\n\n    return response.data;\n} \n\nfunction NewPost({ groupID, currentUser }) {\n    const queryClient = useQueryClient();\n    const [postCaption, setPostCaption] = useState('say something cool!')\n    \n    const { isLoading, mutate } = useMutation(makePost, {\n        onSuccess: (returnedData) => {\n            console.log(returnedData)\n           //queryClient.invalidateQueries(['group-posts', groupID])\n            const newPost = returnedData.newPost;\n\n            queryClient.setQueryData(['group-posts', groupID], (oldPostData) => {\n                var updatedPostData= structuredClone(oldPostData);\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;\n            })\n        }\n    })\n    \n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        mutate(newPost)\n        \n    }\n\n    return (\n    <div className=\"new-post\">\n         <p><b> Make a Post </b>to Group { groupID }</p>\n         <form onSubmit={ handleSubmit }>\n            <label> </label> \n            <input name= \"postCaption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n            <p> {postCaption}</p>\n            <button type=\"submit\"> Submit </button>\n        </form>\n    </div>\n    );\n}\n\n\nexport default NewPost;","/Users/david/Desktop/David/www/kite/src/components/posts/display/IndividualPost.js",["332","333"],"import Likes from '../actions/like/Likes';\nimport EditPost from '../actions/EditPost';\nimport DeletePost from '../actions/DeletePost';\nimport Comments from '../../comments/CommentList';\n\n//LIKES: groupID, post, currentUser\nconst IndividualPost = ({api, post, currentUser, groupID }) => {\n    return (     \n        <div className=\"post\" >\n            <p className = \"post-text\"> Post Type { post.postType } </p>\n            <p className = \"post-text\"> { post.postCaption } </p>\n            <p className = \"post-text\"> POST ID: { post.postID } |  { post.postFrom } | { post.postTo} | GROUP ID: { post.groupID }</p>  \n            <Likes api = { api } post = {post}  currentUser = {currentUser} groupID = { groupID }  /> \n            <Comments api = { api } postComments = {post.commentsArray} groupID = { groupID } postID = { post.postID } currentUser = {currentUser}  /> \n        </div>       \n        );\n    }  \n\nexport default IndividualPost;\n\n","/Users/david/Desktop/David/www/kite/src/components/posts/actions/EditPost.js",["334","335","336","337"],"import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n  \n})\n\nasync function editPostAPI(editedPost) {\n    const postURL = \"http://localhost:3003/post/caption/edit/\";\n    const response = await axios.post(postURL, editedPost);\n    console.log(\"editPostAPI(editedPost)\")\n    console.log(response.data)\n\n    return response.data;\n} \n\nfunction EditPost({ groupID, currentUser, postID}) {\n    const queryClient = useQueryClient();\n    const [newPostCaption, setPostCaption] = useState('oh change me!')\n    \n    const { isLoading, mutate } = useMutation(editPostAPI, {\n        onSuccess: (returnedData) => {\n           //queryClient.invalidateQueries(['group-posts', groupID])\n           //console.log(\"returnedData\")\n           //console.log(returnedData.data[0].postID)\n           const updatedPostID = returnedData.data[0].postID;\n           const newPostCaption = returnedData.data[0].newPostCaption;\n\n           queryClient.setQueryData(['group-posts', groupID], (oldPostData) => {\n                var updatedPostData= structuredClone(oldPostData);\n\n                for (let i = 0; i < updatedPostData.length; i++) {\n                    if(updatedPostData[i].postID == updatedPostID) {\n                        updatedPostData[i].postCaption = newPostCaption;\n                    }\n                }\n    \n                return updatedPostData;\n            })\n        }\n    })\n    \n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var editedPost = {\n            postID: postID,\n            currentUser: currentUser,\n            newPostCaption: newPostCaption,\n        }\n\n        //console.log(\"POST the new edit!!\")\n        //console.log(editedPost)\n        //editPostAPI(editedPost)\n        //makePost(newPost)\n        mutate(editedPost)\n        \n    }\n\n    return (\n    <div className=\"new-post\">\n         <form onSubmit={ handleSubmit }>\n            <label> </label> \n            <input name= \"postCaption\" type=\"text\" value={ newPostCaption } onChange={handleChange} />\n            <p> {newPostCaption}</p>\n            <button type=\"submit\"> Edit Post </button>\n        </form>\n    </div>\n    );\n}\n\n\nexport default EditPost;\n\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n\n})\n\nasync function editPostAPI(deletePost) {\n  const postURL = \"http://localhost:3003/post/delete/\"\n  const response = await axios.post(postURL, deletePost);\n  console.log(response.data)\n\n  return response.data;\n  } \n  \n\nconst EditPost = ({ groupID, currentUser, postID}) => {\n  const queryClient = useQueryClient();\n\n  const handleEditPost = (currentUser, postID) => {\n    var editPost = {\n        postID: postID,\n        currentUser: currentUser   \n    }\n    console.log(\"EDIT ME! \")\n    console.log(editPost)\n    //mutate(deletePost) \n  }\n\n    const { isLoading, mutate } = useMutation(editPostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n            //queryClient.invalidateQueries(['group-posts', groupID]) \n\n            var updatedQueryData = [];\n\n            //STEP 1: Remove post with this ID\n            var deletedPostID = returnedData.data[0].postID\n\n            for (let i = 0; i < originalQueryData.length; i++) {\n                if(originalQueryData[i].postID != deletedPostID) {\n                    updatedQueryData.push(originalQueryData[i])\n                }\n            }\n    \n            return updatedQueryData;\n            \n            })    \n        }\n      })\n      \n\n    return (     \n        <div className=\"\">\n            \n            <button type=\"submit\" className = \"\" onClick={() => { handleEditPost(currentUser, postID) }}>Edit Me</button>                 \n        </div>       \n        );\n    }  \n\nexport default EditPost;\n*/","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/Likes.js",["338","339","340","341","342","343"],"import React, { useState, useEffect } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\nimport LikePost from './LikePost';\nimport UnlikePost from './UnlikePost';\n\n\n\nasync function unlikePostAPI(likedPost) {\n    const postURL = \"http://localhost:3003/post/unlike\"\n    const response = await axios.post(postURL, likedPost);\n    //console.log(response)\n\n    return response.data;\n} \n\n\nconst Likes = ({groupID, post, currentUser}) => {\n    var postID = post.postID\n    const postLikes = post.postLikesArray;\n    const simplePostLikes = post.simpleLikesArray;\n \n\n    const handleUnLikePost = (postID, currentUser) => {\n        console.log(currentUser + \" you liked \" + postID)\n        var likedPost = {\n            postID: postID,\n            currentUser: currentUser   \n        }\n\n        unlikePostAPI(likedPost)\n    }\n\n    return (     \n        <div className=\"post\" >\n            <p className = \"post-text\">total Likes { postLikes.length } </p>  \n            <ul> { postLikes.map((postLike) => (\n              <li className= \"like-list\" key = { postLike.postLikeID } > { postLike.likedByUserName } </li> \n            ))}</ul>  \n\n\n            { simplePostLikes.includes(currentUser) ? \n                <UnlikePost groupID = { groupID } post = { post } currentUser = {currentUser} /> : \n                <LikePost groupID = { groupID } post = { post } currentUser = {currentUser} />\n            }\n        </div>       \n        );\n    }  \n\nexport default Likes;\n\n\n\n//FROM SIMPLE\n/*\nimport React, { useState, useEffect } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nvar groupID = 72;\n\nconst api = axios.create({\n  \n})\n\nasync function likePostAPI(likedPost) {\n    const postURL = \"http://localhost:3003/api/post/like\"\n    const response = await axios.post(postURL, likedPost);\n\n    return response.data;\n} \n\n\nconst Likes = (props) => {\n    const queryClient = useQueryClient();\n    const currentUser = props.currentUser;\n    const post = props.post;\n\n    const totalLikes = props.post.totalLikes;\n    const postLikesArray = props.post.postLikesArray;\n    const postID = props.post.postID;\n    \n\n    const handleLikePost = (postID, currentUser) => {\n        var likedPost = {\n            postID: postID,\n            likedBy: currentUser   \n        }\n\n        mutate(likedPost)\n        //console.log(currentUser + \" you liked \" + postID)\n    }\n    const { isLoading, mutate } = useMutation(likePostAPI, {\n        onSuccess: (returnedData) => {\n            //queryClient.invalidateQueries(['posts'])\n   \n            queryClient.setQueryData(['group', groupID], (originalQueryData) => {\n                console.log(\"returnedData\")\n                console.log(returnedData)\n                console.log(\"originalQueryData\")\n                console.log(originalQueryData)\n\n                //STEP 1: Get post ID of updated post and new like array \n                const postID = returnedData.postID;\n                const postLikesArray = returnedData.postLikesArray;\n                console.log(\"postID\")\n                console.log(postID)\n                console.log(\"postLikesArray\")\n                console.log(postLikesArray)  \n                var updatedQueryData = structuredClone(originalQueryData);\n\n                for (let i = 0; i < updatedQueryData.length; i++) {\n                    //console.log(updatedQueryData[i].postID + \" \" + postID)\n                    if(updatedQueryData[i].postID == postID) {\n                        console.log(\"Change this post! \" + postID)\n\n                        \n                        //Create the new array of users who have liked this\n                        updatedQueryData[i].postLikesArray = []\n                        updatedQueryData[i].postLikesArray = returnedData.postLikesArray\n                        updatedQueryData[i].totalLikes = returnedData.postLikesArray.length\n\n\n                    }\n                }\n\n                return updatedQueryData;\n                //return [data];\n            })\n        }\n    })\n\n    return (\n        <div className=\"\">\n            <p className = \"post-text\">total Likes { totalLikes } </p>  \n            <ul> { postLikesArray.map((likedBy) => (\n                <li key = { likedBy}  > { likedBy } </li> \n            ))}</ul>\n            { postLikesArray.includes(currentUser) ? \n                <button type=\"submit\" className = \"post-liked\" onClick={() => { handleLikePost(postID, currentUser) }}>Like</button>: \n                <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like</button>\n            }\n        </div>\n        );\n    } \n  \nexport default Likes;\n*/\n\n\n\n\n//CODE\n/*\nimport React, { useState, useEffect } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nvar groupID = 72;\n\n\nconst api = axios.create({\n  \n})\n\nasync function likePostAPI(likedPost) {\n    const postURL = \"http://localhost:3003/api/post/like\"\n    const response = await axios.post(postURL, likedPost);\n\n    return response.data;\n} \n\n\nconst Likes = (props) => {\n    const queryClient = useQueryClient();\n    const currentUser = props.currentUser;\n    const post = props.post;\n\n    const totalLikes = props.post.totalLikes;\n    const postLikesArray = props.post.postLikesArray;\n    const postID = props.post.postID;\n    \n\n    const handleLikePost = (postID, currentUser) => {\n        var likedPost = {\n            postID: postID,\n            likedBy: currentUser   \n        }\n\n        mutate(likedPost)\n        //console.log(currentUser + \" you liked \" + postID)\n    }\n    const { isLoading, mutate } = useMutation(likePostAPI, {\n        onSuccess: (returnedData) => {\n            //queryClient.invalidateQueries(['posts'])\n   \n            queryClient.setQueryData(['group', groupID], (originalQueryData) => {\n                console.log(\"returnedData\")\n                console.log(returnedData)\n                console.log(\"originalQueryData\")\n                console.log(originalQueryData)\n\n                //STEP 1: Get post ID of updated post and new like array \n                const postID = returnedData.postID;\n                const postLikesArray = returnedData.postLikesArray;\n                console.log(\"postID\")\n                console.log(postID)\n                console.log(\"postLikesArray\")\n                console.log(postLikesArray)  \n                var updatedQueryData = structuredClone(originalQueryData);\n\n                for (let i = 0; i < updatedQueryData.length; i++) {\n                    //console.log(updatedQueryData[i].postID + \" \" + postID)\n                    if(updatedQueryData[i].postID == postID) {\n                        console.log(\"Change this post! \" + postID)\n\n                        \n                        //Create the new array of users who have liked this\n                        updatedQueryData[i].postLikesArray = []\n                        updatedQueryData[i].postLikesArray = returnedData.postLikesArray\n                        updatedQueryData[i].totalLikes = returnedData.postLikesArray.length\n\n\n                    }\n                }\n\n                return updatedQueryData;\n                //return [data];\n            })\n        }\n    })\n\n    return (\n        <div className=\"\">\n            <p className = \"post-text\">total Likes { totalLikes } </p>  \n            <ul> { postLikesArray.map((likedBy) => (\n                <li key = { likedBy}  > { likedBy } </li> \n            ))}</ul>\n            { postLikesArray.includes(currentUser) ? \n                <button type=\"submit\" className = \"post-liked\" onClick={() => { handleLikePost(postID, currentUser) }}>Like</button>: \n                <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like</button>\n            }\n        </div>\n        );\n    } \n  \nexport default Likes;\n*/\n/*\n//WORKS\nconst Likes = (props) => {\n    const handleLike = props.handleLike;\n    const currentUser = props.currentUser;\n    const post = props.post;\n\n    const totalLikes = props.post.totalLikes;\n    const postLikesArray = props.post.postLikesArray;\n    const postID = props.post.postID;\n\n    return (\n        <div className=\"\">\n            <p className = \"post-text\">total Likes { totalLikes } </p>  \n            <ul> { postLikesArray.map((likedBy) => (\n                <li key = { likedBy}  > { likedBy } </li> \n            ))}</ul>\n            { postLikesArray.includes(currentUser) ? \n                <button type=\"submit\" className = \"post-liked\" onClick={() => { handleLike(post) }}>Like</button>: \n                <button type=\"submit\" className = \"\" onClick={() => { handleLike(post) }}>Like</button>\n            }\n        </div>\n        );\n    } \n  \nexport default Likes;\n*/\n/*\nconst { isLoading, mutate } = useMutation(likePost, {\n    onSuccess: (data) => {\n        queryClient.invalidateQueries(['group', groupID])\n        \n        const newPost = data;\n\n        queryClient.setQueryData(['group', groupID], (oldPostData) => {\n            oldPostData.unshift(newPost);\n\n            return oldPostData;\n        })\n        \n    }\n})\n*/\n\n\n/*\nconst [youLikedPost, setYouLikedPost] = useState(false);\nYou liked { youLikedPost ? \"yep!\" : \"nope\"} | \n    //Maybe don't need \n    useEffect(() => {\n        if(postLikesArray.includes(currentUser)) {\n            setYouLikedPost(true)\n        } else {\n            setYouLikedPost(false)\n        }   \n    }, [youLikedPost]); \nconsole.log(currentUser)\nconsole.log(postLikesArray)\nconsole.log(postLikesArray.includes(currentUser))\n*/\n\n/*\n\n    /*\n\n\n  for (let i = 0; i < posts.length; i++) {\n    //console.log(posts[i].postID + \" \" + postID)\n    if(posts[i].postID == postID) {\n      if(posts[i].postLikesArray.includes(currentUser)) {\n        console.log(currentUser + \" Had already liked this post so we will unlike! \")\n        const index = posts[i].postLikesArray.indexOf(currentUser);\n        if (index > -1) { \n          posts[i].postLikesArray.splice(index, 1); \n        }\n        posts[i].totalLikes = posts[i].postLikesArray.length\n      } else {\n        console.log(currentUser + \" Liked this post!\")\n        posts[i].postLikesArray.push(currentUser);\n        posts[i].totalLikes = posts[i].postLikesArray.length\n\n      }\n      posts[i].postLikesArray.includes(currentUser)\n    }\n    res.json(posts[i])\n    return \n  } \n\n    \n    const { isLoading, mutate } = useMutation(likePostAPI, {\n        onSuccess: (oldData) => {\n            //queryClient.invalidateQueries(['group', groupID])\n            console.log(oldData)\n        }\n    })\n*/\n            //const postID = 5;\n\n            //var newData = structuredClone(oldData);\n            \n            /*\n            queryClient.setQueryData(['group', groupID], (oldPostData) => {\n                return oldPostData;\n            })\n\n            */\n            //Works\n            /*\n            queryClient.setQueryData(['group', groupID], (oldData) => {\n\n                for (let i = 0; i < oldData.length; i++) {\n                    if(posts[i].postID == postID) {\n                        console.log(\"updated post \")\n                        console.log(posts[i])\n                    }      \n                } \n              return newData;  \n            })\n            */\n                    /*\n                    const oldObj = {a: {b: 10}};\n                    const newObj = {...oldObj};\n                      if(posts[i].postLikesArray.includes(currentUser)) {\n                        console.log(currentUser + \" Had already liked this post so we will unlike! \")\n                        const index = posts[i].postLikesArray.indexOf(currentUser);\n                        if (index > -1) { \n                          posts[i].postLikesArray.splice(index, 1); \n                        }\n                        posts[i].totalLikes = posts[i].postLikesArray.length\n                \n                      } else {\n                        console.log(currentUser + \" Liked this post!\")\n                        posts[i].postLikesArray.push(currentUser);\n                        posts[i].totalLikes = posts[i].postLikesArray.length\n                \n                      }\n                      posts[i].postLikesArray.includes(currentUser)\n                      */\n                    \n\n                //return oldData;\n      \n            \n\n            /*\n                await queryClient.cancelQueries({ queryKey: ['todos', newTodo.id] })\n\n                // Snapshot the previous value\n                const previousTodo = queryClient.getQueryData(['todos', newTodo.id])\n\n                // Optimistically update to the new value\n                queryClient.setQueryData(['todos', newTodo.id], newTodo)\n\n                // Return a context with the previous and new todo\n                return { previousTodo, newTodo }\n\n            queryClient.setQueryData(\n                ['posts', { id }],\n                //this is the way\n                (oldData) => oldData ? {\n                    ...oldData,\n                    title: 'my new post title'\n                } : oldData\n            )\n\n              */\n            /*\n            const newPost = data;\n\n            queryClient.setQueryData(['group', groupID], (oldPostData) => {\n                oldPostData.unshift(newPost);\n\n                return oldPostData;\n            })\n            */\n        \n    \n\n/*\n            <LikePost post = { post } currentUser = {currentUser} />\n<Likes post = { post } currentUser = {currentUser}  />   \n<li key = { postLikes.postLikeID }  > { postLikes.likedByName } </li> \n          <ul> { postLikesArray.map((postLikes) => (\n                <li key = { postLikes.likedByName }  > { postLikes.likedByName } </li> \n            ))}</ul>        \n\n<ul> { postLikesArray.map((likedBy) => (\n                <li key = { likedBy}  > { likedBy } </li> \n            ))}</ul>    \n\n\"postLikes\": [\n    {\n        \"postLikeID\": 92,\n        \"postID\": 70,\n        \"likedByName\": \"sam\",\n        \"likedByImage\": \"12.jpg\",\n        \"likedByFirstName\": \"David\",\n        \"likedByLastName\": \"Vasquez\"\n    }\n]*/\n\n","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/LikePost.js",["344","345","346","347"],"import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n\n//Create the API to call \nconst api = axios.create({\n\n})\n\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\"\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n//COMPONENT: Like Post  \nfunction LikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  //const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser,\n        groupID: groupID\n    }\n\n    mutate(likedPost)\n\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n        console.log(returnedData)\n        \n        //STEP 1: Get post ID of updated post and new like array \n        var updatedQueryData = structuredClone(originalQueryData);\n        const postID = returnedData.postID;\n        const currentUser = returnedData.currentUser;\n\n        for (let i = 0; i < updatedQueryData.length; i++) {\n\n            if(updatedQueryData[i].postID == postID) {\n\n                var postLike = returnedData.newLike[0];\n\n                //Create the new array of users who have liked this\n                updatedQueryData[i].postLikesArray.push(postLike)\n                updatedQueryData[i].simpleLikesArray.push(currentUser)\n                updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n            }\n        }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n","/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/UnlikePost.js",["348","349","350","351","352"],"import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n\n})\n\nasync function unlikePostAPI(unlikePost) {\n  const postURL = \"http://localhost:3003/post/unlike\"\n  const response = await axios.post(postURL, unlikePost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n\nfunction UnlikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n  const handleUnlikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser   \n    }\n\n    mutate(likedPost)\n  }\n\n  const { isLoading, mutate } = useMutation(unlikePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n      console.log(returnedData)\n      //queryClient.invalidateQueries(['group-posts', groupID]) \n      var updatedQueryData = structuredClone(originalQueryData);\n      const postID = returnedData.postID;\n      const currentUser = returnedData.currentUser;\n\n      for (let i = 0; i < updatedQueryData.length; i++) {\n        if(updatedQueryData[i].postID == postID) {\n          \n          //Remove the Like from the Complex Like\n          let newPostLikesArray = updatedQueryData[i].postLikesArray.filter(function( obj ) {\n            return obj.likedByUserName !== currentUser;\n          });\n\n          //Remove the Like from the Simple Like\n          let newSimpleLikesArray = [];\n          \n          for (let j = 0; j < updatedQueryData[i].simpleLikesArray.length; j++) {\n            if(updatedQueryData[i].simpleLikesArray[j] != currentUser){\n              newSimpleLikesArray.push(updatedQueryData[i].simpleLikesArray[j])\n            }\n          }\n            console.log(updatedQueryData[i].postLikesArray);\n            console.log(newPostLikesArray);\n\n            console.log(updatedQueryData[i].simpleLikesArray);\n            console.log(newSimpleLikesArray);\n\n            updatedQueryData[i].postLikesArray = []\n            updatedQueryData[i].postLikesArray = newPostLikesArray\n\n            updatedQueryData[i].simpleLikesArray = []\n            updatedQueryData[i].simpleLikesArray = newSimpleLikesArray\n\n          }\n      }\n      \n      return updatedQueryData;\n    })\n      \n    }\n  })\n\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleUnlikePost(postID, currentUser) }}>UnLike Me</button>\n    </div>\n  );\n}\n\n\nexport default UnlikePost;\n\n\n\n//\n/*\n\n\n\nfunction LikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser   \n    }\n\n    mutate(likedPost)\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n\n        //STEP 1: Get post ID of updated post and new like array \n        var updatedQueryData = structuredClone(originalQueryData);\n        const postID = returnedData.postID;\n        const currentUser = returnedData.currentUser;\n\n        for (let i = 0; i < updatedQueryData.length; i++) {\n\n            if(updatedQueryData[i].postID == postID) {\n\n                var postLike = returnedData.newLike[0];\n\n                //Create the new array of users who have liked this\n                updatedQueryData[i].postLikesArray.push(postLike)\n                updatedQueryData[i].simpleLikesArray.push(currentUser)\n                updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n            }\n        }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n\n    </div>\n  );\n}\n\n\nexport default LikePost;\n*/\n","/Users/david/Desktop/David/www/kite/src/hooks/useDisplayName.js",["353"],"/Users/david/Desktop/David/www/kite/src/functions/apiFunctions.js",["354","355","356","357","358"],"import axios from 'axios'\nimport functions from \"./functions\";\n\nfunction getAPI() {\n    const axiosRequest = axios.create({\n        withCredentials: true\n      })  \n    \n      axiosRequest.interceptors.response.use(function (response) {\n        // Any status code that lie within the range of 2xx cause this function to trigger\n        console.log(\"__________________________\")\n        console.log(\"INTERCEPTOR: Looks good! \")\n        console.log(\"Status: 200\")\n        console.log(\"Message you are logged in\")\n        console.log(\"__________________________\")\n\n        return response;\n      }, function (error) {\n        console.log(error.response.status)\n        console.log(error.response)\n        \n        //STATUS 498:  Need to get a access token\n        if(error.response.status == 498) {\n          console.log(\"__________________________\")\n          console.log(\"INTERCEPTOR 498: We got a 498 so we need a new access token. Will send refresh token \")\n          console.log(\"Status: 498\")\n          const refreshURL = \"http://localhost:3003/refresh/tokens\"\n          const refreshOutcome = functions.refreshToken();\n          console.log(\"Message: We refreshed the access token!\")\n          console.log(\"__________________________\")\n        } \n      \n        //STATUS 440: Logout User\n        if(error.response.status == 440) {\n          console.log(\"__________________________\")\n          console.log(\"INTERCEPTOR 440: We got a 440 we couldn't refresh the access token because the refresh token was no good need to logout the user\")  \n          console.log(\"Status: 440\")\n          console.log(\"Message: Logout the user!\")\n          localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\")); \n          window.location.href = '/login';\n          console.log(\"__________________________\")\n        }\n        \n        return Promise.reject(error);\n        \n      });\n\n      return axiosRequest;\n}\n\nexport default { getAPI };\n","/Users/david/Desktop/David/www/kite/src/components/posts/actions/DeletePost.js",["359","360","361","362"],"import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n\n})\n\nasync function deletePostAPI(deletePost) {\n  const postURL = \"http://localhost:3003/post/delete/\"\n  const response = await axios.post(postURL, deletePost);\n  console.log(response.data)\n\n  return response.data;\n  } \n  \n\nconst DeletePost = ({ groupID, currentUser, postID}) => {\n  const queryClient = useQueryClient();\n\n  const handleDeletePost = (currentUser, postID) => {\n    var deletePost = {\n        postID: postID,\n        currentUser: currentUser   \n    }\n    console.log(\"DELETE \")\n    console.log(deletePost)\n    mutate(deletePost) \n  }\n\n    const { isLoading, mutate } = useMutation(deletePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n            //queryClient.invalidateQueries(['group-posts', groupID]) \n\n            var updatedQueryData = [];\n\n            //STEP 1: Remove post with this ID\n            var deletedPostID = returnedData.data[0].postID\n\n            for (let i = 0; i < originalQueryData.length; i++) {\n                if(originalQueryData[i].postID != deletedPostID) {\n                    updatedQueryData.push(originalQueryData[i])\n                }\n            }\n    \n            return updatedQueryData;\n            \n            })    \n        }\n      })\n      \n\n    return (     \n        <div className=\"\" >\n            <button type=\"submit\" className = \"\" onClick={() => { handleDeletePost(currentUser, postID) }}>Delete Me</button>                 \n        </div>       \n        );\n    }  \n\nexport default DeletePost;\n","/Users/david/Desktop/David/www/kite/src/components/comments/CommentList.js",["363","364"],"import React from 'react';\nimport { useQuery } from \"react-query\";\nimport IndividualComment from './display/IndividualComment';\n\n//<Comments api = { api } groupID = { groupID } postID = { post.postID } currentUser = {currentUser}  /> \n\n/*\nasync function getComments(postID, api) {\n    const commentPostURL = \"http://localhost:3003/comments/\" + postID; \n    const response = await api.get(commentPostURL)\n    //console.log(\"response\")\n    //console.log(response)\n    //console.log(\"response\")\n  \n    return response.data\n  \n} \n*/\n\n//This does not need API just send as a prop\nconst CommentList = ({api, groupID, postComments, postID}) => {\n    const localData = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUser = JSON.parse(localData);\n    //console.log(\"Posts: Getting Comments for the post \" + postID)\n\n    /*\n    const onError = (error) => {\n      console.log(\"Do something here if there is Error!\")\n      console.log(error)\n    }\n  \n    const { isLoading, data, isError, error  } = useQuery(['post-comments', postID], () => getComments(postID, api), \n      { refetchInterval: 10000000,\n        onError: onError\n      }\n    )\n\n    const currentPosts = data;\n    */\n//<IndividualComment api = { api } post = { post }  groupID = { groupID } currentUser = {currentUser} key = { post.postID }/>\n  return (\n  <div className=\"posts\">\n       <p><b> Comments</b> </p>\n       <div className = \"post-list\" >\n       {postComments && postComments.map((comment) => (\n            <IndividualComment api = { api } comment = { comment }  groupID = { groupID }  key = { comment.commentID }/>\n          ))}\n       </div>\n  </div>\n  );\n  }\n  \nexport default CommentList;\n","/Users/david/Desktop/David/www/kite/src/components/comments/display/IndividualComment.js",[],"/Users/david/Desktop/David/www/kite/src/components/notifications/NotificationList.js",[],"/Users/david/Desktop/David/www/kite/src/components/notifications/IndividualNotification.js",[],"/Users/david/Desktop/David/www/kite/src/pages/UsersPage.js",["365","366"],"import React from 'react';\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport apiFunctions from '../functions/apiFunctions';\nimport LogoutUser from '../components/login/LogoutUser';\n//import useCurrentUser from '../hooks/useCurrentUser';\nimport useCurrentUser from '../hooks/useCurrentUser';\n\n//import MyFriends from '../components/friends/MyFriends';\nimport AllUsers from '../components/users/display/AllUsers';\n\nconst axiosRequest = apiFunctions.getAPI();\n\nfunction UsersPage() {\n\n    //STEP 1: Check user is logged in \n    const loggedInMessage = useLoginStatus();\n\n    //STEP 2: Get the current User\n    var [currentUser, setCurrentUser] = useCurrentUser();\n\n  \n  return (\n    <div className=\"user\">\n        <AllUsers currentUser = { currentUser} api = { axiosRequest } /> \n        <LogoutUser />\n    </div>\n  );\n}\n\n\nexport default UsersPage;\n\n","/Users/david/Desktop/David/www/kite/src/components/friends/MyFriends.js",["367","368","369"],"import React from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\n\nimport SimpleProfile from '../users/display/SimpleProfile';\n\nasync function getYourFriends(currentUser, api) {\n  if(currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n   \n  const myFriendsURL = \"http://localhost:3003/friends/\" + currentUser; \n  const { data } = await api.get(myFriendsURL)\n  //console.log(data)\n  return data\n} \n\n\nconst MyFriends = (props) => {\n    const currentUser = props.currentUser;\n    const api = props.api;\n\n    const { isLoading, data, isError, error  } = useQuery(['my-friends-', currentUser], () => getYourFriends(currentUser, api), \n        { refetchInterval: 10000000 }\n    )\n\n    return (\n        <div>\n            { isLoading && <div> loading... </div>}\n\n            <p> My Friends {currentUser}  </p>\n            {data && data.data.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.friendID }/>\n             ))}\n            {data && data.data.map((friend) => (\n                console.log(\"friend\")\n             ))}\n        </div>\n    )\n}\n\nexport default MyFriends;\n\n/*\n\n            { isError && <div> There was an error fetching the posts { error.message } </div>}\n            { data && console.log(data.friendsArray)}\n\n            \n            {data && data.friendsArray.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.friendID }/>\n             ))}\n\n    var groups = data;\n\n    return (\n    <div className=\"groups\">\n        {data && groups.groups.map(group => (\n            <div className=\"group\" key={ group.groupID } >\n                <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n            </div>\n        ))}\n    </div>\n    );\n    }\n    \n\n//import SimpleProfile from '../../users/SimpleProfile';\n\n//import apiFunctions from '../functions/apiFunctions';\n//import useLoginStatus from '../functions/hooks/useLoginStatus';\n\n//const axiosRequest = apiFunctions.getAPI();\n\n<SimpleProfile />  \n*/","/Users/david/Desktop/David/www/kite/src/components/users/UserProfile.js",[],"/Users/david/Desktop/David/www/kite/src/components/friends/PendingFriends.js",["370"],"import React from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\n\nimport SimpleProfile from '../users/profiles/SimpleProfile';\n\nasync function getYourFriends(currentUser, api) {\n  if(currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n  //http://localhost:3003/friends/pending/davey/ \n  const myPendingFriendsURL = \"http://localhost:3003/friends/pending/\" + currentUser; \n  const { data } = await api.get(myPendingFriendsURL)\n\n  return data\n} \n\n\nconst MyFriends = (props) => {\n    const currentUser = props.currentUser;\n    const api = props.api;\n\n    const { isLoading, data, isError, error  } = useQuery(['pending-friends', currentUser], () => getYourFriends(currentUser, api), \n        { refetchInterval: 10000000 }\n    )\n\n    return (\n        <div>\n            { isLoading && <div> loading... </div>}\n            { isError && <div> There was an error fetching the posts { error.message } </div>}\n            { data && console.log(data.friendsArray)}\n            <p> My Pending Friends {currentUser}  </p>\n            {data && data.friendsArray.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.friendID }/>\n             ))}\n        </div>\n    )\n}\n\nexport default MyFriends;\n",["371","372"],"/Users/david/Desktop/David/www/kite/src/components/users/display/AllUsers.js",[],"/Users/david/Desktop/David/www/kite/src/components/users/display/SimpleProfile.js",[],"/Users/david/Desktop/David/www/kite/src/components/friends/UserFriends.js",["373"],"/Users/david/Desktop/David/www/kite/src/pages/IndividualFriendPage.js",["374","375"],"/Users/david/Desktop/David/www/kite/src/pages/FriendPage.js",["376","377","378","379","380","381","382"],"import { useParams } from \"react-router\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate, Link  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\n//import { refreshToken } from \"../functions/functions\";\n//import GroupPosts from '../components/posts/GroupPosts';\nimport FriendList from '../components/friends/FriendList';\nimport apiFunctions from '../functions/apiFunctions';\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport useCurrentUser from '../hooks/useCurrentUser';\n\nconst axiosRequest = apiFunctions.getAPI();\n\nconst FriendPage = (props) => {\n\n    //STEP 1: Get friend name from URL\n    const { friendName } = useParams()\n\n    //STEP 2: Check user is logged in \n    const loggedInMessage = useLoginStatus();\n\n    //STEP 3: Get the current User\n    var [currentUser, setCurrentUser] = useCurrentUser();\n\n    return (\n        <div>\n          <FriendList currentUser = { currentUser } friendName = { friendName } api = { axiosRequest } />\n          <Link className=\"\" to=\"/users\"> My Profile </Link>   \n        </div>\n    )\n}\n\nexport default FriendPage;\n\n\n","/Users/david/Desktop/David/www/kite/src/components/friends/FriendList.js",[],"/Users/david/Desktop/David/www/kite/src/hooks/useCurrentUser.js",[],"/Users/david/Desktop/David/www/kite/src/components/friends/actions/AddFriend.js",["383","384","385","386"],"import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//PART 1: API Call\nasync function addFriendAPI(addFriendRequest) {\n    const requestAPI = addFriendRequest.api\n    const requestBody = addFriendRequest.addFriendBody\n    console.log(\"addFriend\")\n    console.log(requestBody)\n    console.log(\"addFriend\")\n    const addFriendURL = \"http://localhost:3003/friend/request/\"\n    const response = await requestAPI.post(addFriendURL, requestBody);\n    //console.log(response.data)\n  \n    return response.data;\n} \n\n//COMPONENT: Add Friend \nconst AddFriend = ({api, currentUser, friend}) => {\n    const queryClient = useQueryClient();\n\n    //Button: Add a Friend on Button Click \n    const handleAddFriend = (api, currentUser, friendName) => {\n        //console.log(currentUser + \" wants to add \" + friend.friendName + \" as a friend!\")\n        var addFriendBody = {\n            masterSite: \"kite\",\n            currentUser: currentUser,\n            addFriendName: friendName\n        }\n\n        var addFriendRequest = {\n            api: api,\n            addFriendBody: addFriendBody\n        }\n\n        mutate(addFriendRequest)\n    }\n\n    //Action: Use React Query to make call\n    const { isLoading, mutate } = useMutation(addFriendAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['all-users'], (originalQueryData) => {\n            var updatedQueryData = structuredClone(originalQueryData);\n            const statusCode = returnedData.statusCode\n            const currentUser = returnedData.data.currentUser\n            const newFriend = returnedData.data.friendName\n \n            //Loop over all the users and update the new friend to be request pending\n            for (let i = 0; i < updatedQueryData.data.length; i++) {\n                //console.log(updatedQueryData.data[i].friendName + \" \" + newFriend)\n                if(updatedQueryData.data[i].friendName.toUpperCase() === newFriend.toUpperCase()) {\n                    //console.log(\"update this one!\")\n                    updatedQueryData.data[i].friendshipKey = \"request_pending\"\n\n                }\n            }\n            \n            return updatedQueryData;\n    \n            })\n                \n        }\n      })\n\n    return (     \n        <div className=\"\" >\n            <button type=\"submit\" className = \"\" onClick={() => { handleAddFriend(api, currentUser, friend.friendName) }}>Add a Friend!</button>\n        </div>       \n        );\n    }  \n\nexport default AddFriend;\n\n\n\n\n\n//RESPONSE\n\n//WORKS NO REACT QUERY\n/*\nimport React from 'react';\n//import { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//PART 1: API Call\nasync function addFriendAPI(api, currentUser, friend) {\n    const addFriendURL = \"http://localhost:3003/friend/request/\"\n    \n    const addFriendBody = {\n        \"masterSite\": \"kite\",\n        \"currentUser\": currentUser,\n        \"addFriendName\": friend.friendName           \n    }\n\n    //console.log(addFriendBody)\n    \n    //const response = await axios.post(postURL, likedPost);\n    const response = await api.post(addFriendURL, addFriendBody);\n    console.log(response.data)\n  \n    return response.data;\n} \n\n\n\nconst handleAddFriend = (api, currentUser, friend) => {\n    console.log(currentUser + \" wants to add \" + friend.friendName + \" as a friend!\")\n    addFriendAPI(api, currentUser, friend)\n    /*\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser,\n        groupID: groupID\n    }\n    */\n   /*\n    //mutate(likedPost)\n\n}\n\n\nconst AddFriend = ({api, currentUser, friend}) => {\n    return (     \n        <div className=\"\" >\n            <button type=\"submit\" className = \"\" onClick={() => { handleAddFriend(api, currentUser, friend) }}>Add a Friend!</button>\n        </div>       \n        );\n    }  \n\nexport default AddFriend;\n*/\n\n//EXAMPLE\n\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n\n})\n\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\"\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n\nfunction LikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser,\n        groupID: groupID\n    }\n\n    mutate(likedPost)\n\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n        console.log(returnedData)\n        //STEP 1: Get post ID of updated post and new like array \n        var updatedQueryData = structuredClone(originalQueryData);\n        const postID = returnedData.postID;\n        const currentUser = returnedData.currentUser;\n\n        for (let i = 0; i < updatedQueryData.length; i++) {\n\n            if(updatedQueryData[i].postID == postID) {\n\n                var postLike = returnedData.newLike[0];\n\n                //Create the new array of users who have liked this\n                updatedQueryData[i].postLikesArray.push(postLike)\n                updatedQueryData[i].simpleLikesArray.push(currentUser)\n                updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n            }\n        }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n\n*/","/Users/david/Desktop/David/www/kite/src/components/friends/actions/FriendInvite.js",["387","388","389"],"import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nimport AcceptFriendInvite from './AcceptFriendInvite';\nimport DeclineFriendInvite from './DeclineFriendInvite';\n\n//COMPONENT: Friend Request\nconst FriendInvite = ({api, currentUser, friend}) => {\n    return (     \n        <div className=\"\" >\n            <p> Friendship Invite Pending (you can accept or decline) - \"invite_pending\"</p>\n            <AcceptFriendInvite api = { api } friend = { friend } currentUser = {currentUser}  />\n            <p> </p> \n            <DeclineFriendInvite api = { api } friend = { friend } currentUser = {currentUser}  />\n        </div>       \n        \n        );\n    }  \n\nexport default FriendInvite;\n\n\n\n","/Users/david/Desktop/David/www/kite/src/components/friends/actions/FriendRequest.js",["390","391","392","393"],"import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\n\nimport axios from 'axios'\n\n//PART 1: API Call\nasync function cancelFriendRequestAPI(cancelFriendRequest) {\n    const requestAPI = cancelFriendRequest.api\n    const requestBody = cancelFriendRequest.cancelFriendRequestBody\n\n    const cancelFriendRequestURL = \"http://localhost:3003/friend/cancel/\"\n    const response = await requestAPI.post(cancelFriendRequestURL, requestBody);\n    //console.log(response.data)\n  \n    return response.data;\n} \n\n//COMPONENT: Friend Request\nconst FriendRequest = ({api, currentUser, friend}) => {\n    const queryClient = useQueryClient();\n\n    //Button: Add a Friend on Button Click \n    const handleCancelFriendRequest = (api, currentUser, friendName) => {\n        console.log(currentUser + \" wants to cancel \" + friend.friendName + \" as a friend!\")\n        var cancelFriendRequestBody = {\n            masterSite: \"kite\",\n            currentUser: currentUser,\n            friendName: friendName\n        }\n\n        var cancelFriendRequest = {\n            api: api,\n            cancelFriendRequestBody: cancelFriendRequestBody\n        }\n\n        mutate(cancelFriendRequest)\n       \n    }\n\n    //Action: Use React Query to make call\n    const { isLoading, mutate } = useMutation(cancelFriendRequestAPI, {\n        onSuccess: (returnedData) => {\n            queryClient.setQueryData(['all-users'], (originalQueryData) => {\n            var updatedQueryData = structuredClone(originalQueryData);\n            const statusCode = returnedData.statusCode\n            const currentUser = returnedData.data.currentUser\n            const newFriend = returnedData.data.friendName\n\n            //Loop over all the users and update the new friend to be request pending\n            for (let i = 0; i < updatedQueryData.data.length; i++) {\n                //console.log(updatedQueryData.data[i].friendName + \" \" + newFriend)\n                if(updatedQueryData.data[i].friendName.toUpperCase() === newFriend.toUpperCase()) {\n                    updatedQueryData.data[i].friendshipKey = \"not_friends\"\n                }\n            }\n            \n            return updatedQueryData;\n    \n            })\n        \n        }\n        })\n\n    return (     \n        <div className=\"\" >\n            <p> Friend Request </p>\n            <p> Friendship Request Pending (they have to response and you can cancel) - \"request_pending\"</p>\n            <button type=\"submit\" className = \"\" onClick={() => { handleCancelFriendRequest(api, currentUser, friend.friendName) }}>Cancel</button>\n        </div>       \n        );\n    }  \n\nexport default FriendRequest;\n\n\n\n","/Users/david/Desktop/David/www/kite/src/components/friends/actions/AcceptFriendInvite.js",["394","395","396"],"/Users/david/Desktop/David/www/kite/src/components/friends/actions/DeclineFriendInvite.js",["397","398","399"],{"ruleId":"400","replacedBy":"401"},{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","severity":1,"message":"405","line":7,"column":10,"nodeType":"406","messageId":"407","endLine":7,"endColumn":18},{"ruleId":"404","severity":1,"message":"408","line":16,"column":8,"nodeType":"406","messageId":"407","endLine":16,"endColumn":16},{"ruleId":"404","severity":1,"message":"409","line":33,"column":10,"nodeType":"406","messageId":"407","endLine":33,"endColumn":22},{"ruleId":"410","severity":1,"message":"411","line":39,"column":28,"nodeType":"412","messageId":"413","endLine":39,"endColumn":30},{"ruleId":"404","severity":1,"message":"409","line":14,"column":24,"nodeType":"406","messageId":"407","endLine":14,"endColumn":36},{"ruleId":"404","severity":1,"message":"414","line":1,"column":17,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"415","line":13,"column":9,"nodeType":"406","messageId":"407","endLine":13,"endColumn":17},{"ruleId":"410","severity":1,"message":"411","line":20,"column":28,"nodeType":"412","messageId":"413","endLine":20,"endColumn":30},{"ruleId":"416","severity":1,"message":"417","line":29,"column":4,"nodeType":"418","endLine":29,"endColumn":6,"suggestions":"419"},{"ruleId":"410","severity":1,"message":"411","line":11,"column":32,"nodeType":"412","messageId":"413","endLine":11,"endColumn":34},{"ruleId":"416","severity":1,"message":"420","line":16,"column":8,"nodeType":"418","endLine":16,"endColumn":10,"suggestions":"421"},{"ruleId":"404","severity":1,"message":"422","line":14,"column":11,"nodeType":"406","messageId":"407","endLine":14,"endColumn":26},{"ruleId":"404","severity":1,"message":"423","line":17,"column":23,"nodeType":"406","messageId":"407","endLine":17,"endColumn":37},{"ruleId":"404","severity":1,"message":"414","line":1,"column":17,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"424","line":2,"column":10,"nodeType":"406","messageId":"407","endLine":2,"endColumn":18},{"ruleId":"404","severity":1,"message":"425","line":2,"column":20,"nodeType":"406","messageId":"407","endLine":2,"endColumn":33},{"ruleId":"404","severity":1,"message":"426","line":2,"column":48,"nodeType":"406","messageId":"407","endLine":2,"endColumn":52},{"ruleId":"404","severity":1,"message":"415","line":5,"column":9,"nodeType":"406","messageId":"407","endLine":5,"endColumn":17},{"ruleId":"404","severity":1,"message":"427","line":2,"column":17,"nodeType":"406","messageId":"407","endLine":2,"endColumn":27},{"ruleId":"404","severity":1,"message":"414","line":2,"column":29,"nodeType":"406","messageId":"407","endLine":2,"endColumn":37},{"ruleId":"404","severity":1,"message":"428","line":2,"column":39,"nodeType":"406","messageId":"407","endLine":2,"endColumn":48},{"ruleId":"404","severity":1,"message":"429","line":3,"column":10,"nodeType":"406","messageId":"407","endLine":3,"endColumn":21},{"ruleId":"404","severity":1,"message":"430","line":4,"column":10,"nodeType":"406","messageId":"407","endLine":4,"endColumn":22},{"ruleId":"404","severity":1,"message":"409","line":16,"column":26,"nodeType":"406","messageId":"407","endLine":16,"endColumn":38},{"ruleId":"410","severity":1,"message":"411","line":41,"column":17,"nodeType":"412","messageId":"413","endLine":41,"endColumn":19},{"ruleId":"431","severity":1,"message":"432","line":78,"column":1,"nodeType":"433","endLine":78,"endColumn":79},{"ruleId":"404","severity":1,"message":"427","line":1,"column":27,"nodeType":"406","messageId":"407","endLine":1,"endColumn":37},{"ruleId":"404","severity":1,"message":"430","line":3,"column":10,"nodeType":"406","messageId":"407","endLine":3,"endColumn":22},{"ruleId":"410","severity":1,"message":"411","line":14,"column":15,"nodeType":"412","messageId":"413","endLine":14,"endColumn":17},{"ruleId":"410","severity":1,"message":"411","line":16,"column":23,"nodeType":"412","messageId":"413","endLine":16,"endColumn":25},{"ruleId":"410","severity":1,"message":"411","line":18,"column":23,"nodeType":"412","messageId":"413","endLine":18,"endColumn":25},{"ruleId":"410","severity":1,"message":"411","line":20,"column":23,"nodeType":"412","messageId":"413","endLine":20,"endColumn":25},{"ruleId":"404","severity":1,"message":"434","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":17},{"ruleId":"410","severity":1,"message":"435","line":29,"column":41,"nodeType":"412","messageId":"413","endLine":29,"endColumn":43},{"ruleId":"404","severity":1,"message":"427","line":1,"column":17,"nodeType":"406","messageId":"407","endLine":1,"endColumn":27},{"ruleId":"400","replacedBy":"436"},{"ruleId":"402","replacedBy":"437"},{"ruleId":"404","severity":1,"message":"428","line":1,"column":27,"nodeType":"406","messageId":"407","endLine":1,"endColumn":36},{"ruleId":"404","severity":1,"message":"426","line":2,"column":10,"nodeType":"406","messageId":"407","endLine":2,"endColumn":14},{"ruleId":"404","severity":1,"message":"438","line":2,"column":16,"nodeType":"406","messageId":"407","endLine":2,"endColumn":27},{"ruleId":"404","severity":1,"message":"439","line":2,"column":42,"nodeType":"406","messageId":"407","endLine":2,"endColumn":57},{"ruleId":"404","severity":1,"message":"440","line":15,"column":13,"nodeType":"406","messageId":"407","endLine":15,"endColumn":24},{"ruleId":"404","severity":1,"message":"409","line":16,"column":12,"nodeType":"406","messageId":"407","endLine":16,"endColumn":24},{"ruleId":"404","severity":1,"message":"441","line":16,"column":26,"nodeType":"406","messageId":"407","endLine":16,"endColumn":41},{"ruleId":"410","severity":1,"message":"411","line":23,"column":15,"nodeType":"412","messageId":"413","endLine":23,"endColumn":17},{"ruleId":"410","severity":1,"message":"411","line":52,"column":27,"nodeType":"412","messageId":"413","endLine":52,"endColumn":29},{"ruleId":"404","severity":1,"message":"442","line":9,"column":28,"nodeType":"406","messageId":"407","endLine":9,"endColumn":42},{"ruleId":"404","severity":1,"message":"414","line":1,"column":17,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"428","line":1,"column":27,"nodeType":"406","messageId":"407","endLine":1,"endColumn":36},{"ruleId":"404","severity":1,"message":"427","line":1,"column":38,"nodeType":"406","messageId":"407","endLine":1,"endColumn":48},{"ruleId":"404","severity":1,"message":"428","line":1,"column":10,"nodeType":"406","messageId":"407","endLine":1,"endColumn":19},{"ruleId":"400","replacedBy":"443"},{"ruleId":"402","replacedBy":"444"},{"ruleId":"404","severity":1,"message":"414","line":1,"column":21,"nodeType":"406","messageId":"407","endLine":1,"endColumn":29},{"ruleId":"404","severity":1,"message":"427","line":1,"column":31,"nodeType":"406","messageId":"407","endLine":1,"endColumn":41},{"ruleId":"404","severity":1,"message":"415","line":6,"column":11,"nodeType":"406","messageId":"407","endLine":6,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":14,"column":30,"nodeType":"412","messageId":"413","endLine":14,"endColumn":32},{"ruleId":"416","severity":1,"message":"445","line":56,"column":8,"nodeType":"418","endLine":56,"endColumn":20,"suggestions":"446"},{"ruleId":"404","severity":1,"message":"447","line":21,"column":13,"nodeType":"406","messageId":"407","endLine":21,"endColumn":22},{"ruleId":"404","severity":1,"message":"448","line":21,"column":24,"nodeType":"406","messageId":"407","endLine":21,"endColumn":31},{"ruleId":"404","severity":1,"message":"449","line":21,"column":33,"nodeType":"406","messageId":"407","endLine":21,"endColumn":38},{"ruleId":"404","severity":1,"message":"450","line":24,"column":17,"nodeType":"406","messageId":"407","endLine":24,"endColumn":21},{"ruleId":"400","replacedBy":"451"},{"ruleId":"402","replacedBy":"452"},{"ruleId":"404","severity":1,"message":"414","line":1,"column":17,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"428","line":1,"column":27,"nodeType":"406","messageId":"407","endLine":1,"endColumn":36},{"ruleId":"404","severity":1,"message":"427","line":1,"column":38,"nodeType":"406","messageId":"407","endLine":1,"endColumn":48},{"ruleId":"404","severity":1,"message":"453","line":2,"column":10,"nodeType":"406","messageId":"407","endLine":2,"endColumn":18},{"ruleId":"404","severity":1,"message":"429","line":3,"column":10,"nodeType":"406","messageId":"407","endLine":3,"endColumn":21},{"ruleId":"404","severity":1,"message":"430","line":4,"column":10,"nodeType":"406","messageId":"407","endLine":4,"endColumn":22},{"ruleId":"404","severity":1,"message":"454","line":5,"column":8,"nodeType":"406","messageId":"407","endLine":5,"endColumn":22},{"ruleId":"404","severity":1,"message":"434","line":6,"column":8,"nodeType":"406","messageId":"407","endLine":6,"endColumn":17},{"ruleId":"404","severity":1,"message":"455","line":9,"column":8,"nodeType":"406","messageId":"407","endLine":9,"endColumn":15},{"ruleId":"404","severity":1,"message":"456","line":5,"column":7,"nodeType":"406","messageId":"407","endLine":5,"endColumn":10},{"ruleId":"404","severity":1,"message":"447","line":20,"column":13,"nodeType":"406","messageId":"407","endLine":20,"endColumn":22},{"ruleId":"404","severity":1,"message":"450","line":37,"column":17,"nodeType":"406","messageId":"407","endLine":37,"endColumn":21},{"ruleId":"404","severity":1,"message":"457","line":2,"column":8,"nodeType":"406","messageId":"407","endLine":2,"endColumn":16},{"ruleId":"404","severity":1,"message":"458","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":18},{"ruleId":"404","severity":1,"message":"456","line":5,"column":7,"nodeType":"406","messageId":"407","endLine":5,"endColumn":10},{"ruleId":"404","severity":1,"message":"447","line":22,"column":13,"nodeType":"406","messageId":"407","endLine":22,"endColumn":22},{"ruleId":"410","severity":1,"message":"411","line":34,"column":50,"nodeType":"412","messageId":"413","endLine":34,"endColumn":52},{"ruleId":"404","severity":1,"message":"450","line":46,"column":17,"nodeType":"406","messageId":"407","endLine":46,"endColumn":21},{"ruleId":"404","severity":1,"message":"414","line":1,"column":17,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"428","line":1,"column":27,"nodeType":"406","messageId":"407","endLine":1,"endColumn":36},{"ruleId":"404","severity":1,"message":"459","line":2,"column":10,"nodeType":"406","messageId":"407","endLine":2,"endColumn":21},{"ruleId":"404","severity":1,"message":"460","line":2,"column":23,"nodeType":"406","messageId":"407","endLine":2,"endColumn":37},{"ruleId":"404","severity":1,"message":"461","line":19,"column":9,"nodeType":"406","messageId":"407","endLine":19,"endColumn":15},{"ruleId":"404","severity":1,"message":"462","line":24,"column":11,"nodeType":"406","messageId":"407","endLine":24,"endColumn":27},{"ruleId":"404","severity":1,"message":"414","line":1,"column":17,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"456","line":7,"column":7,"nodeType":"406","messageId":"407","endLine":7,"endColumn":10},{"ruleId":"404","severity":1,"message":"447","line":36,"column":11,"nodeType":"406","messageId":"407","endLine":36,"endColumn":20},{"ruleId":"410","severity":1,"message":"411","line":48,"column":43,"nodeType":"412","messageId":"413","endLine":48,"endColumn":45},{"ruleId":"404","severity":1,"message":"456","line":5,"column":7,"nodeType":"406","messageId":"407","endLine":5,"endColumn":10},{"ruleId":"404","severity":1,"message":"463","line":20,"column":9,"nodeType":"406","messageId":"407","endLine":20,"endColumn":27},{"ruleId":"404","severity":1,"message":"447","line":32,"column":11,"nodeType":"406","messageId":"407","endLine":32,"endColumn":20},{"ruleId":"410","severity":1,"message":"411","line":42,"column":39,"nodeType":"412","messageId":"413","endLine":42,"endColumn":41},{"ruleId":"410","severity":1,"message":"435","line":53,"column":56,"nodeType":"412","messageId":"413","endLine":53,"endColumn":58},{"ruleId":"404","severity":1,"message":"464","line":1,"column":10,"nodeType":"406","messageId":"407","endLine":1,"endColumn":23},{"ruleId":"410","severity":1,"message":"411","line":23,"column":34,"nodeType":"412","messageId":"413","endLine":23,"endColumn":36},{"ruleId":"404","severity":1,"message":"465","line":27,"column":17,"nodeType":"406","messageId":"407","endLine":27,"endColumn":27},{"ruleId":"404","severity":1,"message":"466","line":28,"column":17,"nodeType":"406","messageId":"407","endLine":28,"endColumn":31},{"ruleId":"410","severity":1,"message":"411","line":34,"column":34,"nodeType":"412","messageId":"413","endLine":34,"endColumn":36},{"ruleId":"431","severity":1,"message":"432","line":51,"column":1,"nodeType":"433","endLine":51,"endColumn":27},{"ruleId":"404","severity":1,"message":"414","line":1,"column":17,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"456","line":5,"column":7,"nodeType":"406","messageId":"407","endLine":5,"endColumn":10},{"ruleId":"404","severity":1,"message":"447","line":31,"column":13,"nodeType":"406","messageId":"407","endLine":31,"endColumn":22},{"ruleId":"410","severity":1,"message":"435","line":42,"column":48,"nodeType":"412","messageId":"413","endLine":42,"endColumn":50},{"ruleId":"404","severity":1,"message":"453","line":2,"column":10,"nodeType":"406","messageId":"407","endLine":2,"endColumn":18},{"ruleId":"404","severity":1,"message":"440","line":23,"column":11,"nodeType":"406","messageId":"407","endLine":23,"endColumn":22},{"ruleId":"404","severity":1,"message":"422","line":16,"column":11,"nodeType":"406","messageId":"407","endLine":16,"endColumn":26},{"ruleId":"404","severity":1,"message":"423","line":19,"column":23,"nodeType":"406","messageId":"407","endLine":19,"endColumn":37},{"ruleId":"404","severity":1,"message":"426","line":3,"column":10,"nodeType":"406","messageId":"407","endLine":3,"endColumn":14},{"ruleId":"404","severity":1,"message":"448","line":23,"column":30,"nodeType":"406","messageId":"407","endLine":23,"endColumn":37},{"ruleId":"404","severity":1,"message":"449","line":23,"column":39,"nodeType":"406","messageId":"407","endLine":23,"endColumn":44},{"ruleId":"404","severity":1,"message":"426","line":3,"column":10,"nodeType":"406","messageId":"407","endLine":3,"endColumn":14},{"ruleId":"400","replacedBy":"467"},{"ruleId":"402","replacedBy":"468"},{"ruleId":"404","severity":1,"message":"454","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":22},{"ruleId":"404","severity":1,"message":"469","line":14,"column":12,"nodeType":"406","messageId":"407","endLine":14,"endColumn":27},{"ruleId":"404","severity":1,"message":"409","line":14,"column":29,"nodeType":"406","messageId":"407","endLine":14,"endColumn":41},{"ruleId":"404","severity":1,"message":"427","line":2,"column":17,"nodeType":"406","messageId":"407","endLine":2,"endColumn":27},{"ruleId":"404","severity":1,"message":"414","line":2,"column":29,"nodeType":"406","messageId":"407","endLine":2,"endColumn":37},{"ruleId":"404","severity":1,"message":"428","line":2,"column":39,"nodeType":"406","messageId":"407","endLine":2,"endColumn":48},{"ruleId":"404","severity":1,"message":"429","line":3,"column":10,"nodeType":"406","messageId":"407","endLine":3,"endColumn":21},{"ruleId":"404","severity":1,"message":"430","line":4,"column":10,"nodeType":"406","messageId":"407","endLine":4,"endColumn":22},{"ruleId":"404","severity":1,"message":"422","line":20,"column":11,"nodeType":"406","messageId":"407","endLine":20,"endColumn":26},{"ruleId":"404","severity":1,"message":"423","line":23,"column":23,"nodeType":"406","messageId":"407","endLine":23,"endColumn":37},{"ruleId":"404","severity":1,"message":"470","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":13},{"ruleId":"404","severity":1,"message":"447","line":41,"column":13,"nodeType":"406","messageId":"407","endLine":41,"endColumn":22},{"ruleId":"404","severity":1,"message":"471","line":45,"column":19,"nodeType":"406","messageId":"407","endLine":45,"endColumn":29},{"ruleId":"404","severity":1,"message":"440","line":46,"column":19,"nodeType":"406","messageId":"407","endLine":46,"endColumn":30},{"ruleId":"404","severity":1,"message":"459","line":2,"column":10,"nodeType":"406","messageId":"407","endLine":2,"endColumn":21},{"ruleId":"404","severity":1,"message":"460","line":2,"column":23,"nodeType":"406","messageId":"407","endLine":2,"endColumn":37},{"ruleId":"404","severity":1,"message":"470","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":13},{"ruleId":"404","severity":1,"message":"470","line":4,"column":8,"nodeType":"406","messageId":"407","endLine":4,"endColumn":13},{"ruleId":"404","severity":1,"message":"447","line":41,"column":13,"nodeType":"406","messageId":"407","endLine":41,"endColumn":22},{"ruleId":"404","severity":1,"message":"471","line":45,"column":19,"nodeType":"406","messageId":"407","endLine":45,"endColumn":29},{"ruleId":"404","severity":1,"message":"440","line":46,"column":19,"nodeType":"406","messageId":"407","endLine":46,"endColumn":30},{"ruleId":"404","severity":1,"message":"470","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":13},{"ruleId":"404","severity":1,"message":"447","line":42,"column":13,"nodeType":"406","messageId":"407","endLine":42,"endColumn":22},{"ruleId":"404","severity":1,"message":"440","line":46,"column":19,"nodeType":"406","messageId":"407","endLine":46,"endColumn":30},{"ruleId":"404","severity":1,"message":"470","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":13},{"ruleId":"404","severity":1,"message":"447","line":43,"column":13,"nodeType":"406","messageId":"407","endLine":43,"endColumn":22},{"ruleId":"404","severity":1,"message":"440","line":47,"column":19,"nodeType":"406","messageId":"407","endLine":47,"endColumn":30},"no-native-reassign",["472"],"no-negated-in-lhs",["473"],"no-unused-vars","'sayHello' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'userLoggedIn' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoginState'. Either include it or remove the dependency array.","ArrayExpression",["474"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["475"],"'loggedInMessage' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'Navigate' is defined but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useNavigate' is defined but never used.","'LoginContext' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'functions' is defined but never used.","Expected '!==' and instead saw '!='.",["472"],["473"],"'useLocation' is defined but never used.","'useResolvedPath' is defined but never used.","'currentUser' is assigned a value but never used.","'setUserLoggedIn' is assigned a value but never used.","'setLoginStatus' is assigned a value but never used.",["472"],["473"],"React Hook useEffect has missing dependencies: 'data' and 'userName'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["476"],"'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","'error' is assigned a value but never used.","'name' is assigned a value but never used.",["472"],["473"],"'useQuery' is defined but never used.","'useLoginStatus' is defined but never used.","'NewPost' is defined but never used.","'api' is assigned a value but never used.","'EditPost' is defined but never used.","'DeletePost' is defined but never used.","'useMutation' is defined but never used.","'useQueryClient' is defined but never used.","'postID' is assigned a value but never used.","'handleUnLikePost' is assigned a value but never used.","'postUserLikesArray' is assigned a value but never used.","'useDebugValue' is defined but never used.","'refreshURL' is assigned a value but never used.","'refreshOutcome' is assigned a value but never used.",["472"],["473"],"'currentUserTemp' is assigned a value but never used.","'axios' is defined but never used.","'statusCode' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},"Update the dependencies array to be: [setLoginState]",{"range":"483","text":"484"},"Update the dependencies array to be: [navigate]",{"range":"485","text":"486"},"Update the dependencies array to be: [data, refreshURL, userName]",{"range":"487","text":"488"},[1046,1048],"[setLoginState]",[455,457],"[navigate]",[1468,1480],"[data, refreshURL, userName]"]