{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/groups/Groups.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getGroups(currentUser) {\n  const postURL = 'http://localhost:3003/groups/' + currentUser;\n  const {\n    data\n  } = await axios.get(postURL);\n  return data;\n}\n\nconst Groups = props => {\n  _s();\n\n  const currentUser = props.currentUser;\n  const {\n    isLoading,\n    data,\n    isError,\n    error\n  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser), {\n    refetchInterval: 10000000\n  });\n  const groups = data;\n  console.log(isLoading);\n  console.log(isError);\n  console.log(error);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Groups \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" User \", currentUser, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this), data && console.log(groups), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/group/${group.groupID}`,\n          children: [group.groupID, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: group.groupID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, group.groupID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Groups, \"20VnH7aHnyusuHUg2Uycf4IaPvo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Groups;\nexport default Groups;\n/*\n\n\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios'\nimport IndividualPost from './IndividualPost';\n\nasync function getPosts(groupID) {\n  const postErrorURL = \"/posts/group/error\";\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \n  const { data } = await axios.get(postURL)\n  return data\n} \n\nconst PostList = (props) => {\n  const groupID = props.groupID;\n  \n  const { isLoading, data, isError, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID), \n    { refetchInterval: 10000000 }\n  )\n\n  const currentPosts = data;\n  console.log(isLoading)\n  console.log(isError)\n  console.log(error)\n\n  return (\n  <div className=\"posts\">\n       <p> Posts </p>\n      { isLoading && <div> loading... </div>}\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\n      { data && <IndividualPost posts = { currentPosts } title=\"The posts!\" />}\n      {console.log(data)}\n  </div>\n  );\n  }\n  \nexport default PostList;\n<p> <b> Groups </b></p>\n<p> Current User: { currentUser } </p>\n<p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n\n<Link to={`/group/1`}>{ \"Music 1\" } </Link>\n<Link to={`/group/2`}>{ \"Music 2\" } </Link>\n<Link className=\"\" to=\"/group/5\"> Games 5 </Link>\n\n//\n\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"sources":["/Users/david/Desktop/David/www/kite/src/components/groups/Groups.js"],"names":["React","useQuery","Link","axios","getGroups","currentUser","postURL","data","get","Groups","props","isLoading","isError","error","refetchInterval","groups","console","log","map","group","groupID"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,IAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAeC,SAAf,CAAyBC,WAAzB,EAAsC;AACpC,QAAMC,OAAO,GAAG,kCAAkCD,WAAlD;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,GAAN,CAAUF,OAAV,CAAvB;AACA,SAAOC,IAAP;AACD;;AAED,MAAME,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAML,WAAW,GAAGK,KAAK,CAACL,WAA1B;AAEA,QAAM;AAAEM,IAAAA,SAAF;AAAaJ,IAAAA,IAAb;AAAmBK,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,MAAuCZ,QAAQ,CAAC,CAAC,aAAD,EAAgBI,WAAhB,CAAD,EAA+B,MAAMD,SAAS,CAACC,WAAD,CAA9C,EACnD;AAAES,IAAAA,eAAe,EAAE;AAAnB,GADmD,CAArD;AAIA,QAAMC,MAAM,GAAGR,IAAf;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAGA,sBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,eAEK;AAAA,2BAAWR,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL,EAGOE,IAAI,IAAIS,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAHf,eAKK;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACEA,MAAM,CAACG,GAAP,CAAWC,KAAK,iBACf;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASA,KAAK,CAACC,OAAQ,EAAlC;AAAA,qBAAuCD,KAAK,CAACC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKD,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAA6BD,KAAK,CAACC,OAAnC;AAAA;AAAA;AAAA;AAAA,cADD;AADF;AAAA;AAAA;AAAA;AAAA,YALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAiBC,CA9BH;;GAAMX,M;UAGyCR,Q;;;KAHzCQ,M;AAgCN,eAAeA,MAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link  } from \"react-router-dom\"\nimport axios from 'axios'\n\nasync function getGroups(currentUser) {\n  const postURL = 'http://localhost:3003/groups/' + currentUser;  \n  const { data } = await axios.get(postURL)\n  return data\n} \n\nconst Groups = (props) => {\n  const currentUser = props.currentUser;\n  \n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser), \n    { refetchInterval: 10000000 }\n  )\n\n  const groups = data;\n  console.log(isLoading)\n  console.log(isError)\n  console.log(error)\n\n\n  return (\n  <div className=\"posts\">\n       <p> Groups </p>\n       <p> User { currentUser } </p>\n       { data && console.log(groups)}\n\n       <div className=\"user\">\n        {groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } </Link>\n            <p>{ group.groupID }</p>\n          </div>\n        ))}\n\n    </div>\n  </div>\n  );\n  }\n  \nexport default Groups;\n/*\n\n\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios'\nimport IndividualPost from './IndividualPost';\n\nasync function getPosts(groupID) {\n  const postErrorURL = \"/posts/group/error\";\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \n  const { data } = await axios.get(postURL)\n  return data\n} \n\nconst PostList = (props) => {\n  const groupID = props.groupID;\n  \n  const { isLoading, data, isError, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID), \n    { refetchInterval: 10000000 }\n  )\n\n  const currentPosts = data;\n  console.log(isLoading)\n  console.log(isError)\n  console.log(error)\n\n  return (\n  <div className=\"posts\">\n       <p> Posts </p>\n      { isLoading && <div> loading... </div>}\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\n      { data && <IndividualPost posts = { currentPosts } title=\"The posts!\" />}\n      {console.log(data)}\n  </div>\n  );\n  }\n  \nexport default PostList;\n<p> <b> Groups </b></p>\n<p> Current User: { currentUser } </p>\n<p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n\n<Link to={`/group/1`}>{ \"Music 1\" } </Link>\n<Link to={`/group/2`}>{ \"Music 2\" } </Link>\n<Link className=\"\" to=\"/group/5\"> Games 5 </Link>\n\n//\n\n\n*/"]},"metadata":{},"sourceType":"module"}