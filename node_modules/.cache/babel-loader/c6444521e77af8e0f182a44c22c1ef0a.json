{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/groups/CreateGroup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation } from \"react-query\";\n//import { Link, useLocation, useNavigate, useResolvedPath } from \"react-router-dom\";\n//import { loginUser } from '../../functions/functions';\n//import { LoginContext } from \"../../functions/context/LoginContext\";\n//import axios from \"axios\";\n\n//FUNCTION 1: New Post API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function createNewGroup(api) {\n  const response = await api.post('http://localhost:3003/group/create/');\n  //setMessage(response.data)\n  console.log(response.data);\n  return response.data;\n}\nfunction CreateGroup(_ref) {\n  _s();\n  let {\n    api,\n    currentUser\n  } = _ref;\n  const [groupName, setGroupName] = useState('New Group!');\n\n  //FUNCTION 2: Handle New Group Submit Button\n\n  /*\n  const { isLoading, isError, error, mutate } = useMutation(createNewGroup(api))\n   const handleChange = (event) => {\n      const { name, value } = event.target\n      setGroupName(value)\n  }\n   const handleSubmit = (event) => {\n      event.preventDefault();\n      console.log(\"Create a new Group \" + groupName + \" for \"  + currentUser)\n      const newGroup = {\n          \"currentUser\": currentUser,\n          \"groupName\": groupName,\n          \"groupType\": \"kite\",\n          \"groupPrivate\": 1,\n          \"groupUsers\": [\"davey\", \"sam\", \"frodo\"],\n          \"notificationMessage\": \"Invited you to a new Group\",  \n          \"notificationType\": \"group_invite\",\n          \"notificationLink\": \"http://localhost:3003/group/77\"   \n      }\n      \n      mutate(newGroup)\n      \n  }\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"group-name\",\n        className: \"loginInput\",\n        type: \"text\",\n        value: groupName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", groupName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"loginButton\",\n        children: \" Create New Group \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n_s(CreateGroup, \"r1f7I7R4xUfDkgHoIy0yma38V/s=\");\n_c = CreateGroup;\nexport default CreateGroup;\n\n//EXAMPLE\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//FUNCTION 1: New Post API\nasync function makePostAPI(post) {\n    const postURL = \"http://localhost:3003/post/text\";\n    const response = await axios.post(postURL, post);\n\n    return response.data;\n} \n\nfunction NewPost({ groupID, currentUser, api }) {\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        //console.log(newPost)\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> {postCaption}</p>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPost;\n\n\n*/\nvar _c;\n$RefreshReg$(_c, \"CreateGroup\");","map":{"version":3,"names":["React","useState","useMutation","createNewGroup","api","response","post","console","log","data","CreateGroup","currentUser","groupName","setGroupName","handleSubmit","handleChange"],"sources":["/Users/david/Desktop/David/www/kite/src/components/groups/CreateGroup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from \"react-query\";\n//import { Link, useLocation, useNavigate, useResolvedPath } from \"react-router-dom\";\n//import { loginUser } from '../../functions/functions';\n//import { LoginContext } from \"../../functions/context/LoginContext\";\n//import axios from \"axios\";\n\n\n//FUNCTION 1: New Post API\nasync function createNewGroup(api) {\n    const response = await api.post('http://localhost:3003/group/create/')\n    //setMessage(response.data)\n    console.log(response.data)\n    return response.data;\n}\n\n\nfunction CreateGroup({api, currentUser}) {  \n    const [groupName, setGroupName] = useState('New Group!')\n    \n    //FUNCTION 2: Handle New Group Submit Button\n\n\n    /*\n    const { isLoading, isError, error, mutate } = useMutation(createNewGroup(api))\n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setGroupName(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"Create a new Group \" + groupName + \" for \"  + currentUser)\n        const newGroup = {\n            \"currentUser\": currentUser,\n            \"groupName\": groupName,\n            \"groupType\": \"kite\",\n            \"groupPrivate\": 1,\n            \"groupUsers\": [\"davey\", \"sam\", \"frodo\"],\n            \"notificationMessage\": \"Invited you to a new Group\",  \n            \"notificationType\": \"group_invite\",\n            \"notificationLink\": \"http://localhost:3003/group/77\"   \n        }\n        \n        mutate(newGroup)\n        \n    }\n    */\n    return (\n      <div className = \"login\">\n          <form onSubmit={ handleSubmit }>\n              <input name= \"group-name\" className=\"loginInput\" type=\"text\" value={ groupName } onChange={handleChange} />\n              <p> { groupName } </p>\n              <button type=\"submit\" className=\"loginButton\" > Create New Group </button>\n          </form>\n      </div>\n    );\n  }\n\nexport default CreateGroup;\n\n\n\n\n\n//EXAMPLE\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//FUNCTION 1: New Post API\nasync function makePostAPI(post) {\n    const postURL = \"http://localhost:3003/post/text\";\n    const response = await axios.post(postURL, post);\n\n    return response.data;\n} \n\nfunction NewPost({ groupID, currentUser, api }) {\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        //console.log(newPost)\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> {postCaption}</p>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPost;\n\n\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC;AACA;AACA;AACA;;AAGA;AAAA;AACA,eAAeC,cAAc,CAACC,GAAG,EAAE;EAC/B,MAAMC,QAAQ,GAAG,MAAMD,GAAG,CAACE,IAAI,CAAC,qCAAqC,CAAC;EACtE;EACAC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC1B,OAAOJ,QAAQ,CAACI,IAAI;AACxB;AAGA,SAASC,WAAW,OAAqB;EAAA;EAAA,IAApB;IAACN,GAAG;IAAEO;EAAW,CAAC;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,YAAY,CAAC;;EAExD;;EAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGI,oBACE;IAAK,SAAS,EAAG,OAAO;IAAA,uBACpB;MAAM,QAAQ,EAAGa,YAAc;MAAA,wBAC3B;QAAO,IAAI,EAAE,YAAY;QAAC,SAAS,EAAC,YAAY;QAAC,IAAI,EAAC,MAAM;QAAC,KAAK,EAAGF,SAAW;QAAC,QAAQ,EAAEG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3G;QAAA,WAAG,GAAC,EAAEH,SAAS,EAAE,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,eACtB;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,aAAa;QAAA,UAAE;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACvE;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAzCMF,WAAW;AAAA,KAAXA,WAAW;AA2CpB,eAAeA,WAAW;;AAM1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7EA;AAAA"},"metadata":{},"sourceType":"module"}