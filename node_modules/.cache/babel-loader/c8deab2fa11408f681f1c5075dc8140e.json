{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/AutoComplete.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useMemo } from 'react';\nimport { SearchBar } from './components/SearchBar';\nimport { SearchResultsList } from \"./components/SearchResultsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AutoComplete() {\n  _s();\n  const [results, setResults] = useState([]);\n  console.log(results);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Search Here \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        setResults: setResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), results && results.length > 0 && /*#__PURE__*/_jsxDEV(SearchResultsList, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Results \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n_s(AutoComplete, \"QYmH5xyAMv1uIO9V7tguRx7oNwo=\");\n_c = AutoComplete;\nexport default AutoComplete;\n\n//WORKING 2: Better\n/*\n        <SearchBar setResults={setResults} />\nfunction Example() {   \n    const [items, setItems] = useState([\"first\"])\n    const [query, setQuery] = useState([\"\"])\n    const inputRef = useRef()\n\n    const filteredItems = items.filter(item => {\n      return item.toLowerCase().includes(query.toLowerCase())\n    })\n\n    //PLAYGROUND\n    function onChange(e) {\n      const value = e.target.value;\n    }\n    \n    function onSubmit(e) {\n      e.preventDefault();\n      let value = inputRef.current.value;\n      \n      //value = \"hi\"\n      if(value === \"\") {\n        console.log(\"empty\")\n        return ;\n      } else {\n        setItems(prev => {\n          return [...prev, value]\n        })\n      }  \n      inputRef.current.value = \"\"\n    } \n\n\n\n    return (\n      <div className = \"login\">\n        <p> Search </p>\n        <input \n          value = {query} \n          onChange= {e => setQuery(e.target.value)} \n          type=\"search\" /> \n          <br /><br />\n\n        <form onSubmit={onSubmit}>\n            New Item: <input ref={inputRef} type=\"text\"  />\n            <button type=\"submit\" > Add </button>\n        </form>\n\n\n        <h4> Items </h4>\n        { items.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n        <h4> Filtered Items </h4>\n        { filteredItems.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n      </div>\n    );\n  }\n\nexport default Example;\n*/\n\n//WORKING\n/*\nfunction Example() {   \n    const [items, setItems] = useState([\"first\"])\n    const inputRef = useRef()\n\n    //PLAYGROUND\n    console.log(\"test\")\n\n    function onSubmit(e) {\n      e.preventDefault();\n      console.log(\"submit\")\n      console.log(items)\n      let value = inputRef.current.value;\n      \n      //value = \"hi\"\n      if(value === \"\") {\n        console.log(\"empty\")\n        return ;\n      } else {\n        setItems(prev => {\n          return [...prev, value]\n        })\n      }  \n      inputRef.current.value = \"\"\n    } \n\n\n\n    return (\n      <div className = \"login\">\n        <p> Search </p>\n        <input type=\"search\" /> <br /><br />\n\n        <form onSubmit={onSubmit}>\n            New Item: <input ref={inputRef} type=\"text\"  />\n            <button type=\"submit\" > Add </button>\n        </form>\n\n\n        <h4> Items </h4>\n        { items.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n      </div>\n    );\n  }\n\nexport default Example;\n\n*/\nvar _c;\n$RefreshReg$(_c, \"AutoComplete\");","map":{"version":3,"names":["React","useState","useRef","useMemo","SearchBar","SearchResultsList","AutoComplete","results","setResults","console","log","length"],"sources":["/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/AutoComplete.js"],"sourcesContent":["import React, { useState, useRef, useMemo } from 'react';\nimport { SearchBar } from './components/SearchBar';\nimport { SearchResultsList } from \"./components/SearchResultsList\";\n\n\nfunction AutoComplete() {   \n  const [results, setResults] = useState([]);\n  console.log(results)\n\n    return (\n      <div className = \"login\">\n        <p> Search Here </p>\n        <div className = \"search-bar-container\"> \n            <SearchBar setResults={setResults} />\n            {results && results.length > 0 && <SearchResultsList results={results} />}\n          <div> Results </div>\n        </div>\n      </div>\n    );\n  }\n\nexport default AutoComplete;\n\n\n\n\n//WORKING 2: Better\n/*\n        <SearchBar setResults={setResults} />\nfunction Example() {   \n    const [items, setItems] = useState([\"first\"])\n    const [query, setQuery] = useState([\"\"])\n    const inputRef = useRef()\n\n    const filteredItems = items.filter(item => {\n      return item.toLowerCase().includes(query.toLowerCase())\n    })\n\n    //PLAYGROUND\n    function onChange(e) {\n      const value = e.target.value;\n    }\n    \n    function onSubmit(e) {\n      e.preventDefault();\n      let value = inputRef.current.value;\n      \n      //value = \"hi\"\n      if(value === \"\") {\n        console.log(\"empty\")\n        return ;\n      } else {\n        setItems(prev => {\n          return [...prev, value]\n        })\n      }  \n      inputRef.current.value = \"\"\n    } \n\n\n\n    return (\n      <div className = \"login\">\n        <p> Search </p>\n        <input \n          value = {query} \n          onChange= {e => setQuery(e.target.value)} \n          type=\"search\" /> \n          <br /><br />\n\n        <form onSubmit={onSubmit}>\n            New Item: <input ref={inputRef} type=\"text\"  />\n            <button type=\"submit\" > Add </button>\n        </form>\n\n\n        <h4> Items </h4>\n        { items.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n        <h4> Filtered Items </h4>\n        { filteredItems.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n      </div>\n    );\n  }\n\nexport default Example;\n*/\n\n//WORKING\n/*\nfunction Example() {   \n    const [items, setItems] = useState([\"first\"])\n    const inputRef = useRef()\n\n    //PLAYGROUND\n    console.log(\"test\")\n\n    function onSubmit(e) {\n      e.preventDefault();\n      console.log(\"submit\")\n      console.log(items)\n      let value = inputRef.current.value;\n      \n      //value = \"hi\"\n      if(value === \"\") {\n        console.log(\"empty\")\n        return ;\n      } else {\n        setItems(prev => {\n          return [...prev, value]\n        })\n      }  \n      inputRef.current.value = \"\"\n    } \n\n\n\n    return (\n      <div className = \"login\">\n        <p> Search </p>\n        <input type=\"search\" /> <br /><br />\n\n        <form onSubmit={onSubmit}>\n            New Item: <input ref={inputRef} type=\"text\"  />\n            <button type=\"submit\" > Add </button>\n        </form>\n\n\n        <h4> Items </h4>\n        { items.map(item => (\n            <p key={item}> { item } </p>\n          ))\n        }\n      </div>\n    );\n  }\n\nexport default Example;\n\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,iBAAiB,QAAQ,gCAAgC;AAAC;AAGnE,SAASC,YAAY,GAAG;EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1CQ,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EAElB,oBACE;IAAK,SAAS,EAAG,OAAO;IAAA,wBACtB;MAAA,UAAG;IAAa;MAAA;MAAA;MAAA;IAAA,QAAI,eACpB;MAAK,SAAS,EAAG,sBAAsB;MAAA,wBACnC,QAAC,SAAS;QAAC,UAAU,EAAEC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,EACpCD,OAAO,IAAIA,OAAO,CAACI,MAAM,GAAG,CAAC,iBAAI,QAAC,iBAAiB;QAAC,OAAO,EAAEJ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3E;QAAA,UAAK;MAAS;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAdMD,YAAY;AAAA,KAAZA,YAAY;AAgBrB,eAAeA,YAAY;;AAK3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA;AAAA"},"metadata":{},"sourceType":"module"}