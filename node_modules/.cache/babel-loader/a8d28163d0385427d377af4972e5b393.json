{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\kite\\\\src\\\\components\\\\groups\\\\GroupList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosRequest = axios.create({\n  withCredentials: true\n});\n\nasync function refreshToken() {\n  const refreshURL = \"http://localhost:3003/refresh/tokens\";\n  const data = localStorage.getItem(\"localStorageCurrentUser\");\n  const userName = JSON.parse(data);\n  console.log(\"you are refreshing for\" + userName); //STEP 1: Call Logout API\n\n  axiosRequest.post(refreshURL, {\n    userName: userName,\n    refreshToken: \"dontneedheretoken\"\n  }).then(function (response) {\n    console.log(response.data);\n    return response.data;\n  }).catch(function (error) {\n    console.log(error);\n  });\n} // Add a response interceptor\n\n\naxiosRequest.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  console.log(\"interceptors: GOOD \");\n  return response;\n}, function (error) {\n  console.log(\"interceptors: NEED NEW TOKEN \");\n\n  if (error.response.status == 401) {\n    console.log(\"A new token was got!! Get a new token here\");\n    const refreshOutcome = refreshToken();\n    console.log(\"NEW TOKEN OUTCOME\");\n    console.log(refreshOutcome);\n  }\n\n  return Promise.reject(error);\n});\n\nasync function getGroups(currentUser) {\n  if (currentUser) {\n    console.log(\"GroupList: Getting groups for \" + currentUser);\n  }\n\n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser;\n  const {\n    data\n  } = await axiosRequest.get(groupURL);\n  return data;\n}\n\nconst Groups = props => {\n  _s();\n\n  const currentUser = props.currentUser;\n  console.log(\"GroupList: Getting groups for \" + currentUser);\n  const {\n    isLoading,\n    data,\n    isError,\n    error\n  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser), {\n    refetchInterval: 10000000\n  });\n  var groups = data;\n  console.log(groups); //console.log(isError)\n  //console.log(error)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groups\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 22\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" There was an error fetching the posts \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 20\n    }, this), data && console.log(data), data && groups.groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/group/${group.groupID}`,\n        children: [group.groupID, \" | \", group.groupName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, group.groupID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Groups, \"20VnH7aHnyusuHUg2Uycf4IaPvo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Groups;\nexport default Groups;\n/*\r\n       { data && console.log(\"\")}\r\n      {data && groups.map(group => (\r\n          <div className=\"group\" key={ group.groupID } >\r\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\r\n          </div>\r\n      ))}\r\n\r\n    \r\nasync function getPosts(groupID) {\r\n  const postErrorURL = \"/posts/group/error\";\r\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \r\n  const { data } = await axios.get(postURL)\r\n  return data\r\n} \r\n\r\nconst PostList = (props) => {\r\n  const groupID = props.groupID;\r\n  \r\n  const { isLoading, data, isError, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID), \r\n    { refetchInterval: 10000000 }\r\n  )\r\n\r\n  const currentPosts = data;\r\n  console.log(isLoading)\r\n  console.log(isError)\r\n  console.log(error)\r\n\r\n  return (\r\n  <div className=\"posts\">\r\n       <p> Posts </p>\r\n\r\n      { data && <IndividualPost posts = { currentPosts } title=\"The posts!\" />}\r\n      {console.log(data)}\r\n  </div>\r\n  );\r\n  }\r\n  \r\nexport default PostList;\r\n<p> <b> Groups </b></p>\r\n<p> Current User: { currentUser } </p>\r\n<p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\r\n\r\n<Link to={`/group/1`}>{ \"Music 1\" } </Link>\r\n<Link to={`/group/2`}>{ \"Music 2\" } </Link>\r\n<Link className=\"\" to=\"/group/5\"> Games 5 </Link>\r\n\r\n//\r\n\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"sources":["C:/wamp/www/kite/src/components/groups/GroupList.js"],"names":["React","useQuery","Link","axios","axiosRequest","create","withCredentials","refreshToken","refreshURL","data","localStorage","getItem","userName","JSON","parse","console","log","post","then","response","catch","error","interceptors","use","status","refreshOutcome","Promise","reject","getGroups","currentUser","groupURL","get","Groups","props","isLoading","isError","refetchInterval","groups","message","map","group","groupID","groupName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\n\r\nconst axiosRequest = axios.create({\r\n  withCredentials: true\r\n})  \r\n\r\nasync function refreshToken() {\r\n  const refreshURL = \"http://localhost:3003/refresh/tokens\"\r\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n    const userName = JSON.parse(data);\r\n    console.log(\"you are refreshing for\" + userName )\r\n    \r\n    //STEP 1: Call Logout API\r\n    axiosRequest.post(refreshURL, {\r\n      userName: userName,\r\n      refreshToken: \"dontneedheretoken\"\r\n    })\r\n    .then(function (response) {\r\n      console.log(response.data)\r\n      return response.data;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\n// Add a response interceptor\r\naxiosRequest.interceptors.response.use(function (response) {\r\n  // Any status code that lie within the range of 2xx cause this function to trigger\r\n  // Do something with response data\r\n  console.log(\"interceptors: GOOD \")\r\n  return response;\r\n}, function (error) {\r\n  console.log(\"interceptors: NEED NEW TOKEN \")\r\n  \r\n  if(error.response.status == 401) {\r\n    console.log(\"A new token was got!! Get a new token here\");\r\n    const refreshOutcome = refreshToken();\r\n    console.log(\"NEW TOKEN OUTCOME\")\r\n    console.log(refreshOutcome)\r\n  } \r\n  \r\n  return Promise.reject(error);\r\n  \r\n});\r\n\r\nasync function getGroups(currentUser) {\r\n  if(currentUser) {\r\n    console.log(\"GroupList: Getting groups for \" + currentUser)\r\n  }\r\n   \r\n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser; \r\n  const { data } = await axiosRequest.get(groupURL)\r\n\r\n  return data\r\n} \r\n\r\n\r\nconst Groups = (props) => {\r\n  const currentUser = props.currentUser;\r\n  console.log(\"GroupList: Getting groups for \" + currentUser)\r\n\r\n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser), \r\n    { refetchInterval: 10000000 }\r\n  )\r\n\r\n  var groups = data;\r\n\r\n  console.log(groups)\r\n  //console.log(isError)\r\n  //console.log(error)\r\n\r\n  return (\r\n  <div className=\"groups\">\r\n      { isLoading && <div> loading... </div>}\r\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\r\n      { data && console.log(data)}\r\n      {data && groups.groups.map(group => (\r\n          <div className=\"group\" key={ group.groupID } >\r\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\r\n          </div>\r\n      ))}\r\n  </div>\r\n  );\r\n  }\r\n  \r\nexport default Groups;\r\n\r\n\r\n/*\r\n       { data && console.log(\"\")}\r\n      {data && groups.map(group => (\r\n          <div className=\"group\" key={ group.groupID } >\r\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\r\n          </div>\r\n      ))}\r\n\r\n    \r\nasync function getPosts(groupID) {\r\n  const postErrorURL = \"/posts/group/error\";\r\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \r\n  const { data } = await axios.get(postURL)\r\n  return data\r\n} \r\n\r\nconst PostList = (props) => {\r\n  const groupID = props.groupID;\r\n  \r\n  const { isLoading, data, isError, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID), \r\n    { refetchInterval: 10000000 }\r\n  )\r\n\r\n  const currentPosts = data;\r\n  console.log(isLoading)\r\n  console.log(isError)\r\n  console.log(error)\r\n\r\n  return (\r\n  <div className=\"posts\">\r\n       <p> Posts </p>\r\n\r\n      { data && <IndividualPost posts = { currentPosts } title=\"The posts!\" />}\r\n      {console.log(data)}\r\n  </div>\r\n  );\r\n  }\r\n  \r\nexport default PostList;\r\n<p> <b> Groups </b></p>\r\n<p> Current User: { currentUser } </p>\r\n<p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\r\n\r\n<Link to={`/group/1`}>{ \"Music 1\" } </Link>\r\n<Link to={`/group/2`}>{ \"Music 2\" } </Link>\r\n<Link className=\"\" to=\"/group/5\"> Games 5 </Link>\r\n\r\n//\r\n\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}