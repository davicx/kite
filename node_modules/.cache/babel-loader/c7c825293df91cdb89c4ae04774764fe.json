{"ast":null,"code":"var _jsxFileName = \"/Users/chavasqu/Desktop/David/www/kite/src/components/login/LoginUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Link, useLocation, useNavigate } from \"react-router-dom\"; //import { loginUser } from '../../functions/functions';\n\nimport { LoginContext } from \"../../functions/context/LoginContext\"; //import useAuth from '../../functions/hooks/useAuth';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginUser() {\n  _s();\n\n  const {\n    currentUser,\n    setLoginState\n  } = useContext(LoginContext);\n  const [userName, setUserName] = useState('david');\n  const [password, setPassword] = useState('password');\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target; //This is new may not work\n    //const {setAuth } = useAuth();\n\n    if (name == \"username\") {\n      setUserName(value);\n    } else {\n      setPassword(value);\n    }\n\n    console.log(name);\n    console.log(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); //STEP 1: Call Login API\n    //STEP 2: Success\n    //Step 2A: Set local storage  \n\n    localStorage.setItem('currentUserLoggedIn', JSON.stringify(userName)); //Step 2B: Set context\n\n    setLoginState(userName); //Step 2C: Redirect to Groups\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current User: \", currentUser, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        className: \"loginInput\",\n        type: \"text\",\n        value: userName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        className: \"loginInput\",\n        type: \"text\",\n        value: password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"loginButton\",\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LoginUser, \"9sUUVzksslmnvy+npXBA2FvZPVU=\");\n\n_c = LoginUser;\nexport default LoginUser;\n/*\n\nimport React, { Component, useState} from 'react'\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        /*\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        */\n\n/*\n})\n.catch(function (error) {\nconsole.log(error);\n});\n}\nconst loginVerify = () => {\naxiosRequest.post(logoutVerifyURL, {\nuserName: \"davey\",\n})\n.then(function (response) {\nconsole.log(response.data)\n})\n.catch(function (error) {\nconsole.log(error);\n});\n }\nreturn (\n<div className=\"login\">\n<input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n<p></p>\n<input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n<p></p>\n<button className = \"loginButton\" onClick={ loginUser }> Login</button>\n<div className = \"simplerHolder\">\n<p>{ userName }</p> \n<p>{ password }</p>\n</div>\n<div>\n<button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n<div className = \"simplerHolder\"> \n<p>{ loggedInStatus }</p>\n</div>\n<div>\n<button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n</div>\n</div>\n<div>\n<button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n</div>\n</div>\n);\n}\nexport default Login;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginUser\");","map":{"version":3,"sources":["/Users/chavasqu/Desktop/David/www/kite/src/components/login/LoginUser.js"],"names":["React","useState","useContext","Link","useLocation","useNavigate","LoginContext","LoginUser","currentUser","setLoginState","userName","setUserName","password","setPassword","handleChange","event","name","value","target","console","log","handleSubmit","preventDefault","localStorage","setItem","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,WAA5B,QAA+C,kBAA/C,C,CACA;;AACA,SAASC,YAAT,QAA6B,sCAA7B,C,CACA;;;;AAGA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAgCP,UAAU,CAACI,YAAD,CAAhD;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,UAAD,CAAxC;;AAEA,QAAMa,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B,CAD8B,CAG9B;AACA;;AAEA,QAAGF,IAAI,IAAI,UAAX,EAAuB;AACrBL,MAAAA,WAAW,CAACM,KAAD,CAAX;AACD,KAFD,MAEO;AACLJ,MAAAA,WAAW,CAACI,KAAD,CAAX;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,GAbD;;AAeA,QAAMI,YAAY,GAAIN,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACO,cAAN,GAD4B,CAG5B;AAEA;AACA;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,qBAArB,EAA4CC,IAAI,CAACC,SAAL,CAAehB,QAAf,CAA5C,EAP4B,CAS5B;;AACAD,IAAAA,aAAa,CAACC,QAAD,CAAb,CAV4B,CAY5B;AACH,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAGW,YAAjB;AAAA,8BACI;AAAA,qCAAuBb,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAE,UAAb;AAAwB,QAAA,SAAS,EAAC,YAAlC;AAA+C,QAAA,IAAI,EAAC,MAApD;AAA2D,QAAA,KAAK,EAAGE,QAAnE;AAA8E,QAAA,QAAQ,EAAEI;AAAxF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAE,UAAb;AAAwB,QAAA,SAAS,EAAC,YAAlC;AAA+C,QAAA,IAAI,EAAC,MAApD;AAA2D,QAAA,KAAK,EAAGF,QAAnE;AAA8E,QAAA,QAAQ,EAAEE;AAAxF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA7CMP,S;;KAAAA,S;AA+CT,eAAeA,SAAfsourcesContent":["import React, { useState, useContext } from 'react'\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\n//import { loginUser } from '../../functions/functions';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\n//import useAuth from '../../functions/hooks/useAuth';\n\n\nfunction LoginUser() {  \n    const { currentUser, setLoginState} = useContext(LoginContext);\n    const [userName, setUserName] = useState('david')\n    const [password, setPassword] = useState('password')\n\n    const handleChange = (event) => {\n      const { name, value } = event.target\n\n      //This is new may not work\n      //const {setAuth } = useAuth();\n\n      if(name == \"username\") {\n        setUserName(value)\n      } else {\n        setPassword(value)\n      }\n      console.log(name)\n      console.log(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        //STEP 1: Call Login API\n\n        //STEP 2: Success\n        //Step 2A: Set local storage  \n        localStorage.setItem('currentUserLoggedIn', JSON.stringify(userName));\n\n        //Step 2B: Set context\n        setLoginState(userName)\n\n        //Step 2C: Redirect to Groups\n    }\n\n    return (\n      <div className = \"login\">\n          <form onSubmit={ handleSubmit }>\n              <label>Current User: { currentUser } </label> \n              <input name= \"username\" className=\"loginInput\" type=\"text\" value={ userName } onChange={handleChange} />\n              <input name= \"password\" className=\"loginInput\" type=\"text\" value={ password } onChange={handleChange} />\n              <button type=\"submit\" className=\"loginButton\" > Login </button>\n          </form>\n      </div>\n    );\n  }\n\nexport default LoginUser;\n\n/*\n\nimport React, { Component, useState} from 'react'\nimport Axios from \"axios\";\n\nconst axiosRequest = Axios.create({\n  withCredentials: true\n})\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        /*\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        *//*\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n*/\n"]},"metadata":{},"sourceType":"module"}