{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/Learning.js\",\n  _s = $RefreshSig$();\nimport { continueStatement } from '@babel/types';\nimport { func } from 'prop-types';\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Learning() {\n  _s();\n  const [items, setItems] = useState([\"first\"]);\n  const inputRef = useRef();\n\n  //PLAYGROUND\n  console.log(\"test\");\n\n  //THIS\n  //This references \n  // method -> obj\n  // function -> global (Window, global)\n  const video = {};\n\n  //CALL BIND APPLY\n  //CALL (Attaches function to object)\n  var obj = {\n    num: 2\n  };\n  var obj2 = {\n    num: 5\n  };\n  var addToThis = function (a) {\n    return this.num + a;\n  };\n\n  //Call (input object and parameter)\n  addToThis.call(obj, 3); //functionName.call(obj, functionArguments)\n  //console.log(addToThis.call(obj, 3))    \n\n  //APPLY (like call but can take array)\n  var addApply = function (a, b, c) {\n    return this.num + a + b + c;\n  };\n  var arr = [1, 2, 3];\n  //console.log(addApply.apply(obj, arr))   \n\n  //console.log(addApply.apply(obj, arr))  \n  //console.log(addApply.apply(obj2, arr))  \n\n  //BIND (gives a function that can run)\n  var bound = addToThis.bind(obj);\n  //console.log(bound(1))\n  var bound = addApply.bind(obj);\n  //console.log(bound(1,2,3))\n\n  //HOISTING\n  a = \"a\";\n  const sumConst = (a, b) => a + b;\n  console.log(\"sumFunc \" + sumFunc(1, 2));\n  console.log(\"sumConst \" + sumConst(3, 4));\n  console.log(a);\n  function sumFunc(a, b) {\n    return a + b;\n  }\n  var a;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n}\n_s(Learning, \"JBwEIUN74r2Qa0qd9ftrXY6mGK8=\");\n_c = Learning;\nexport default Learning;\nvar _c;\n$RefreshReg$(_c, \"Learning\");","map":{"version":3,"names":["continueStatement","func","React","useState","useRef","Learning","items","setItems","inputRef","console","log","video","obj","num","obj2","addToThis","a","call","addApply","b","c","arr","bound","bind","sumConst","sumFunc"],"sources":["/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/Learning.js"],"sourcesContent":["import { continueStatement } from '@babel/types';\nimport { func } from 'prop-types';\nimport React, { useState, useRef } from 'react';\n\nfunction Learning() {   \n    const [items, setItems] = useState([\"first\"])\n    const inputRef = useRef()\n\n    //PLAYGROUND\n    console.log(\"test\")\n\n    //THIS\n    //This references \n    // method -> obj\n    // function -> global (Window, global)\n    const video = {\n\n    }\n\n\n    //CALL BIND APPLY\n    //CALL (Attaches function to object)\n    var obj = {\n        num: 2\n    }\n\n    var obj2 = {\n        num: 5\n    }\n\n    var addToThis = function(a) {\n        return this.num + a;\n    }\n\n    //Call (input object and parameter)\n    addToThis.call(obj, 3) //functionName.call(obj, functionArguments)\n    //console.log(addToThis.call(obj, 3))    \n\n    //APPLY (like call but can take array)\n    var addApply = function(a,b,c) {\n        return this.num + a + b + c;\n    }\n    var arr = [1,2,3]\n    //console.log(addApply.apply(obj, arr))   \n\n    //console.log(addApply.apply(obj, arr))  \n    //console.log(addApply.apply(obj2, arr))  \n\n    //BIND (gives a function that can run)\n    var bound = addToThis.bind(obj);\n    //console.log(bound(1))\n    var bound = addApply.bind(obj);\n    //console.log(bound(1,2,3))\n\n    //HOISTING\n    a = \"a\";\n\n    const sumConst = (a,b) => a + b\n\n    console.log(\"sumFunc \" + sumFunc(1,2))\n    console.log(\"sumConst \" + sumConst(3,4))\n    console.log(a)\n\n\n    function sumFunc(a,b) {\n        return a + b;\n    }\n    \n    var a;\n\n    \n\n\n\n\n\n    return (\n      <div className = \"login\">\n\n      </div>\n    );\n  }\n\nexport default Learning;\n\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,cAAc;AAChD,SAASC,IAAI,QAAQ,YAAY;AACjC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAEhD,SAASC,QAAQ,GAAG;EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EAC7C,MAAMK,QAAQ,GAAGJ,MAAM,EAAE;;EAEzB;EACAK,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;;EAEnB;EACA;EACA;EACA;EACA,MAAMC,KAAK,GAAG,CAEd,CAAC;;EAGD;EACA;EACA,IAAIC,GAAG,GAAG;IACNC,GAAG,EAAE;EACT,CAAC;EAED,IAAIC,IAAI,GAAG;IACPD,GAAG,EAAE;EACT,CAAC;EAED,IAAIE,SAAS,GAAG,UAASC,CAAC,EAAE;IACxB,OAAO,IAAI,CAACH,GAAG,GAAGG,CAAC;EACvB,CAAC;;EAED;EACAD,SAAS,CAACE,IAAI,CAACL,GAAG,EAAE,CAAC,CAAC,EAAC;EACvB;;EAEA;EACA,IAAIM,QAAQ,GAAG,UAASF,CAAC,EAACG,CAAC,EAACC,CAAC,EAAE;IAC3B,OAAO,IAAI,CAACP,GAAG,GAAGG,CAAC,GAAGG,CAAC,GAAGC,CAAC;EAC/B,CAAC;EACD,IAAIC,GAAG,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EACjB;;EAEA;EACA;;EAEA;EACA,IAAIC,KAAK,GAAGP,SAAS,CAACQ,IAAI,CAACX,GAAG,CAAC;EAC/B;EACA,IAAIU,KAAK,GAAGJ,QAAQ,CAACK,IAAI,CAACX,GAAG,CAAC;EAC9B;;EAEA;EACAI,CAAC,GAAG,GAAG;EAEP,MAAMQ,QAAQ,GAAG,CAACR,CAAC,EAACG,CAAC,KAAKH,CAAC,GAAGG,CAAC;EAE/BV,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGe,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;EACtChB,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGc,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;EACxCf,OAAO,CAACC,GAAG,CAACM,CAAC,CAAC;EAGd,SAASS,OAAO,CAACT,CAAC,EAACG,CAAC,EAAE;IAClB,OAAOH,CAAC,GAAGG,CAAC;EAChB;EAEA,IAAIH,CAAC;EAQL,oBACE;IAAK,SAAS,EAAG;EAAO;IAAA;IAAA;IAAA;EAAA,QAElB;AAEV;AAAC,GA7EMX,QAAQ;AAAA,KAARA,QAAQ;AA+EjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}