{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/functions/hooks/PrivateRoutes.js\";\nimport { Outlet, Navigate } from 'react-router-dom';\nimport React, { useContext } from 'react'; //import { loginUser } from '../../functions/functions';\n\nimport { LoginContext } from \"../context/LoginContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoutes = () => {\n  const data = localStorage.getItem(\"currentUserLoggedIn\");\n  const currentUser = JSON.parse(data); //const { currentUser } = useContext(LoginContext);\n\n  console.log(\"LOGGED IN USER \" + currentUser);\n  var userLoggedIn = false;\n\n  if (currentUser == 'null') {\n    userLoggedIn = false;\n  } else {\n    userLoggedIn = true;\n  }\n\n  return userLoggedIn ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 24\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 36\n  }, this);\n};\n\n_c = PrivateRoutes;\nexport default PrivateRoutes;\n/*\n if (!auth) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n            }\n            \nimport React from 'react';\nimport Login from '../../pages/Login';\nimport { useLocation } from 'react-router'\nimport { Navigate, Outlet, Route, Routes } from 'react-router-dom'\n\n\n//Hard code for exampe \nconst useAuth = () => {\n    const currentUser = {\n        loggedIn: false\n    }\n    return currentUser && currentUser.loggedIn\n}\n\nconst PrivateRoutes = () => {\n    const useLocation = useLocation();\n    const isAuth  = useAuth();\n\n    return isAuth ? ( <Outlet /> \n    ) : (\n        <Navigate to=\"/login\" replace state = {{ from: location }}/>\n        )\n    }  \n\nexport default PrivateRoutes;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"sources":["/Users/david/Desktop/David/www/kite/src/functions/hooks/PrivateRoutes.js"],"names":["Outlet","Navigate","React","useContext","LoginContext","PrivateRoutes","data","localStorage","getItem","currentUser","JSON","parse","console","log","userLoggedIn"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,kBAAjC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAb;AACA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAApB,CAFwB,CAGxB;;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBJ,WAAhC;AACA,MAAIK,YAAY,GAAG,KAAnB;;AAEA,MAAGL,WAAW,IAAI,MAAlB,EAA0B;AACtBK,IAAAA,YAAY,GAAG,KAAf;AACD,GAFH,MAES;AACLA,IAAAA,YAAY,GAAG,IAAf;AACD;;AAEH,SACIA,YAAY,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAe,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAD/B;AAGH,CAhBD;;KAAMT,a;AAkBN,eAAeA,aAAf;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Outlet, Navigate } from 'react-router-dom'\nimport React, { useContext } from 'react'\n//import { loginUser } from '../../functions/functions';\nimport { LoginContext } from \"../context/LoginContext\";\n\n\nconst PrivateRoutes = () => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUser = JSON.parse(data);\n    //const { currentUser } = useContext(LoginContext);\n    console.log(\"LOGGED IN USER \" + currentUser)\n    var userLoggedIn = false\n\n    if(currentUser == 'null') {\n        userLoggedIn = false\n      } else {\n        userLoggedIn = true \n      }\n\n    return(\n        userLoggedIn ? <Outlet/> : <Navigate to=\"/login\"/>\n    )\n}\n\nexport default PrivateRoutes\n\n\n\n\n/*\n if (!auth) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n            }\n            \nimport React from 'react';\nimport Login from '../../pages/Login';\nimport { useLocation } from 'react-router'\nimport { Navigate, Outlet, Route, Routes } from 'react-router-dom'\n\n\n//Hard code for exampe \nconst useAuth = () => {\n    const currentUser = {\n        loggedIn: false\n    }\n    return currentUser && currentUser.loggedIn\n}\n\nconst PrivateRoutes = () => {\n    const useLocation = useLocation();\n    const isAuth  = useAuth();\n\n    return isAuth ? ( <Outlet /> \n    ) : (\n        <Navigate to=\"/login\" replace state = {{ from: location }}/>\n        )\n    }  \n\nexport default PrivateRoutes;\n*/\n\n\n"]},"metadata":{},"sourceType":"module"}