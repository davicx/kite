{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/components/MyAPI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PostList from './PostList';\nimport useFetch from \"../hooks/useFetch\";\n\n//http://localhost:3003/simple/posts\n//https://github.com/iamshaunjp/Complete-React-Tutorial/blob/lesson-17/dojo-blog/src/Home.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyAPI() {\n  _s();\n  const {\n    data: posts,\n    isPending,\n    error\n  } = useFetch(\"http://localhost:3003/simple/posts\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 26\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 30\n      }, this), posts && /*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(MyAPI, \"glyx7OFGgKIQn0li2DkFue9sixI=\", false, function () {\n  return [useFetch];\n});\n_c = MyAPI;\nexport default MyAPI;\n\n//WORKS 2\n/*\nimport React, { useState, useEffect } from 'react'\nimport PostList from './PostList';\nimport useFetch from \"../hooks/useFetch\";\n\n//http://localhost:3003/simple/posts\n//https://github.com/iamshaunjp/Complete-React-Tutorial/blob/lesson-17/dojo-blog/src/Home.js\n\nfunction MyAPI() {\n    const [posts, setPosts] = useState(null)\n    const [isPending, setIsPending] = useState(true)\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n      fetch('http://localhost:3003/simple/posts')\n        .then(res => {\n          if (!res.ok) { // error coming back from server\n            throw Error('could not fetch the data for that resource');\n          } \n          console.log(res)\n          return res.json();\n        })\n        .then(data => {\n            setPosts(data);\n            setIsPending(false);\n            setError(null)\n            console.log(data)\n        })\n        .catch(err => {\n          // auto catches network / connection error\n          setIsPending(false);\n          setError(err.message);\n        })\n    }, [])\n\n      return (\n        <div> \n            <ul> \n              { error && <div>{ error }</div> }\n              { isPending && <div>Loading...</div> }\n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\nexport default MyAPI;\n*/\n//WORKS\n/*\n\nfunction MyAPI() {\n    const [posts, setPosts] = useState(null)\n    const [isPending, setIsPending] = useState(true)\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n      fetch('http://localhost:3003/simple/posts')\n        .then(res => {\n          if (!res.ok) { // error coming back from server\n            throw Error('could not fetch the data for that resource');\n          } \n          console.log(res)\n          return res.json();\n        })\n        .then(data => {\n            setPosts(data);\n            setIsPending(false);\n            setError(null)\n            console.log(data)\n        })\n        .catch(err => {\n          // auto catches network / connection error\n          setIsPending(false);\n          setError(err.message);\n        })\n    }, [])\n\n      return (\n        <div> \n            <ul> \n              { error && <div>{ error }</div> }\n              { isPending && <div>Loading...</div> }\n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\nexport default MyAPI;\n*/\n\n//APPENDIX\n/*\n    const handleClick = (postID) => {\n      console.log(postID)\n    }\n    \n\n              {posts && \n                posts.map((post) => {\n                  return <li key = {post.postID}> { post.postCaption } </li>\n                })\n              }\n\n  const [blogs, setBlogs] = useState(null)\n\n  useEffect(() => {\n    fetch('http://localhost:8000/blogs')\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        setBlogs(data);\n      })\n  }, [])\n\n  return (\n    <div className=\"home\">\n      {blogs && <BlogList blogs={blogs} />}\n    </div>\n  );\n  */\n\n//WORKING 2\n/*\nimport React, { useState, useEffect } from 'react'\nimport { act } from 'react-dom/test-utils';\n\nfunction Activities() {\n    const [activity, setActivity] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n    function loadActivity() {\n        setIsLoading(true);\n        fetch(\"https://www.boredapi.com/api/activity\")\n        .then((response) => response.json())\n        .then((data) => {\n            setActivity([...activity, data]);\n            setIsLoading(false)\n        });\n    }\n\n    useEffect(() => {\n        loadActivity()\n      }, []);\n\n      if(activity.length === 0) {\n        return <p> loading...</p>\n      }\n\n      return (\n        <div> \n            <ul> \n                {activity.map((currentActivity) => {\n                    return <li key = {currentActivity.key}> { currentActivity.activity } </li>\n                })}\n            </ul>\n          <button disabled={isLoading} onClick={loadActivity}> Add One </button>\n        </div>\n    );\n}\n\nexport default Activities;\n\n*/\n\n//WORKING\n/*\nimport React, { useState, useEffect } from 'react'\nimport { act } from 'react-dom/test-utils';\n\nfunction Activities() {\n    const [activity, setActivity] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n    function loadActivity() {\n        setIsLoading(true);\n        fetch(\"https://www.boredapi.com/api/activity\")\n        .then((response) => response.json())\n        .then((data) => {\n            setActivity([...activity, data]);\n            setIsLoading(false)\n        });\n    }\n\n    useEffect(() => {\n        loadActivity()\n      }, []);\n\n      if(isLoading) {\n        return <p> loading...</p>\n      }\n\n      return (\n        <div> \n            <ul> \n                {activity.map((currentActivity) => {\n                    return <li key = {currentActivity.key}> { currentActivity.activity } </li>\n                })}\n            </ul>\n          <button onClick={loadActivity}> Add One </button>\n        </div>\n    );\n}\n\nexport default Activities;\n*/\n\n/*\nfunction MyAPI() {\n    const [posts, setPosts] = useState(null)\n\n    const handleClick = (postID) => {\n      console.log(postID)\n    }\n    \n    useEffect(() => {\n      fetch('http://localhost:3003/simple/posts')\n        .then(res => {\n          return res.json();\n        })\n        .then(data => {\n            setPosts(data);\n            console.log(data)\n        })\n    }, [])\n  \n      return (\n        <div> \n            <ul> \n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\nexport default MyAPI;\n\n*/\nvar _c;\n$RefreshReg$(_c, \"MyAPI\");","map":{"version":3,"names":["React","useState","useEffect","PostList","useFetch","MyAPI","data","posts","isPending","error"],"sources":["/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/learnAPI/components/MyAPI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PostList from './PostList';\nimport useFetch from \"../hooks/useFetch\";\n\n//http://localhost:3003/simple/posts\n//https://github.com/iamshaunjp/Complete-React-Tutorial/blob/lesson-17/dojo-blog/src/Home.js\n\nfunction MyAPI() {\n    const { data: posts, isPending, error } = useFetch(\"http://localhost:3003/simple/posts\")\n\n    return (\n        <div> \n            <ul> \n              { error && <div>{ error }</div> }\n              { isPending && <div>Loading...</div> }\n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\nexport default MyAPI;\n\n\n\n\n\n\n//WORKS 2\n/*\nimport React, { useState, useEffect } from 'react'\nimport PostList from './PostList';\nimport useFetch from \"../hooks/useFetch\";\n\n//http://localhost:3003/simple/posts\n//https://github.com/iamshaunjp/Complete-React-Tutorial/blob/lesson-17/dojo-blog/src/Home.js\n\nfunction MyAPI() {\n    const [posts, setPosts] = useState(null)\n    const [isPending, setIsPending] = useState(true)\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n      fetch('http://localhost:3003/simple/posts')\n        .then(res => {\n          if (!res.ok) { // error coming back from server\n            throw Error('could not fetch the data for that resource');\n          } \n          console.log(res)\n          return res.json();\n        })\n        .then(data => {\n            setPosts(data);\n            setIsPending(false);\n            setError(null)\n            console.log(data)\n        })\n        .catch(err => {\n          // auto catches network / connection error\n          setIsPending(false);\n          setError(err.message);\n        })\n    }, [])\n\n      return (\n        <div> \n            <ul> \n              { error && <div>{ error }</div> }\n              { isPending && <div>Loading...</div> }\n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\nexport default MyAPI;\n*/\n//WORKS\n/*\n\nfunction MyAPI() {\n    const [posts, setPosts] = useState(null)\n    const [isPending, setIsPending] = useState(true)\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n      fetch('http://localhost:3003/simple/posts')\n        .then(res => {\n          if (!res.ok) { // error coming back from server\n            throw Error('could not fetch the data for that resource');\n          } \n          console.log(res)\n          return res.json();\n        })\n        .then(data => {\n            setPosts(data);\n            setIsPending(false);\n            setError(null)\n            console.log(data)\n        })\n        .catch(err => {\n          // auto catches network / connection error\n          setIsPending(false);\n          setError(err.message);\n        })\n    }, [])\n\n      return (\n        <div> \n            <ul> \n              { error && <div>{ error }</div> }\n              { isPending && <div>Loading...</div> }\n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\nexport default MyAPI;\n*/\n\n//APPENDIX\n/*\n    const handleClick = (postID) => {\n      console.log(postID)\n    }\n    \n\n              {posts && \n                posts.map((post) => {\n                  return <li key = {post.postID}> { post.postCaption } </li>\n                })\n              }\n\n  const [blogs, setBlogs] = useState(null)\n\n  useEffect(() => {\n    fetch('http://localhost:8000/blogs')\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        setBlogs(data);\n      })\n  }, [])\n\n  return (\n    <div className=\"home\">\n      {blogs && <BlogList blogs={blogs} />}\n    </div>\n  );\n  */\n\n\n//WORKING 2\n/*\nimport React, { useState, useEffect } from 'react'\nimport { act } from 'react-dom/test-utils';\n\nfunction Activities() {\n    const [activity, setActivity] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n    function loadActivity() {\n        setIsLoading(true);\n        fetch(\"https://www.boredapi.com/api/activity\")\n        .then((response) => response.json())\n        .then((data) => {\n            setActivity([...activity, data]);\n            setIsLoading(false)\n        });\n    }\n\n    useEffect(() => {\n        loadActivity()\n      }, []);\n\n      if(activity.length === 0) {\n        return <p> loading...</p>\n      }\n\n      return (\n        <div> \n            <ul> \n                {activity.map((currentActivity) => {\n                    return <li key = {currentActivity.key}> { currentActivity.activity } </li>\n                })}\n            </ul>\n          <button disabled={isLoading} onClick={loadActivity}> Add One </button>\n        </div>\n    );\n}\n\nexport default Activities;\n\n*/\n\n//WORKING\n/*\nimport React, { useState, useEffect } from 'react'\nimport { act } from 'react-dom/test-utils';\n\nfunction Activities() {\n    const [activity, setActivity] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n    function loadActivity() {\n        setIsLoading(true);\n        fetch(\"https://www.boredapi.com/api/activity\")\n        .then((response) => response.json())\n        .then((data) => {\n            setActivity([...activity, data]);\n            setIsLoading(false)\n        });\n    }\n\n    useEffect(() => {\n        loadActivity()\n      }, []);\n\n      if(isLoading) {\n        return <p> loading...</p>\n      }\n\n      return (\n        <div> \n            <ul> \n                {activity.map((currentActivity) => {\n                    return <li key = {currentActivity.key}> { currentActivity.activity } </li>\n                })}\n            </ul>\n          <button onClick={loadActivity}> Add One </button>\n        </div>\n    );\n}\n\nexport default Activities;\n*/\n\n\n\n/*\nfunction MyAPI() {\n    const [posts, setPosts] = useState(null)\n\n    const handleClick = (postID) => {\n      console.log(postID)\n    }\n    \n    useEffect(() => {\n      fetch('http://localhost:3003/simple/posts')\n        .then(res => {\n          return res.json();\n        })\n        .then(data => {\n            setPosts(data);\n            console.log(data)\n        })\n    }, [])\n  \n      return (\n        <div> \n            <ul> \n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\nexport default MyAPI;\n\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,mBAAmB;;AAExC;AACA;AAAA;AAEA,SAASC,KAAK,GAAG;EAAA;EACb,MAAM;IAAEC,IAAI,EAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGL,QAAQ,CAAC,oCAAoC,CAAC;EAExF,oBACI;IAAA,uBACI;MAAA,WACIK,KAAK,iBAAI;QAAA,UAAOA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,EAC7BD,SAAS,iBAAI;QAAA,UAAK;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM,EACnCD,KAAK,iBAAI,QAAC,QAAQ;QAAC,KAAK,EAAIA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EAClC;IAAA;IAAA;IAAA;EAAA,QACH;AAEd;AAAC,GAZQF,KAAK;EAAA,QACgCD,QAAQ;AAAA;AAAA,KAD7CC,KAAK;AAcd,eAAeA,KAAK;;AAOp},"metadata":{},"sourceType":"module"}