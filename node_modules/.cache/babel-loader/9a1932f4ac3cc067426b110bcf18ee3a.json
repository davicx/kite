{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\kite\\\\src\\\\components\\\\groups\\\\GroupList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosRequest = axios.create({\n  withCredentials: true\n});\n\nasync function getGroups(currentUser) {\n  //currentUser = \"davey\"\n  if (currentUser) {\n    console.log(\"GroupList: Getting groups for \" + currentUser);\n  } //const groupURL = \"http://localhost:3003/posts/user/\" + currentUser;   \n\n\n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser;\n  const {\n    data\n  } = await axiosRequest.get(groupURL); //console.log(\"data\")\n  //console.log(data)\n\n  return data;\n} //const groupURL = 'http://localhost:3003/groups/' + currentUser;\n//const groupURL = \"http://localhost:3003/posts/group/\" + currentUser;\n//const groupURL = \"http://localhost:3003/test/\" + currentUser;\n\n\nconst Groups = props => {\n  _s();\n\n  const currentUser = props.currentUser;\n  console.log(\"GroupList: Getting groups for \" + currentUser);\n  const {\n    isLoading,\n    data,\n    isError,\n    error\n  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser), {\n    refetchInterval: 10000000\n  });\n  var groups = data.groups;\n  console.log(groups); //console.log(isError)\n  //console.log(error)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groups\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 22\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" There was an error fetching the posts \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this), data && console.log(data), data && groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", group.groupID, \" | \", group.groupName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, group.groupID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Groups, \"20VnH7aHnyusuHUg2Uycf4IaPvo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Groups;\nexport default Groups;\n/*\r\n       { data && console.log(\"\")}\r\n      {data && groups.map(group => (\r\n          <div className=\"group\" key={ group.groupID } >\r\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\r\n          </div>\r\n      ))}\r\n\r\n    \r\nasync function getPosts(groupID) {\r\n  const postErrorURL = \"/posts/group/error\";\r\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \r\n  const { data } = await axios.get(postURL)\r\n  return data\r\n} \r\n\r\nconst PostList = (props) => {\r\n  const groupID = props.groupID;\r\n  \r\n  const { isLoading, data, isError, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID), \r\n    { refetchInterval: 10000000 }\r\n  )\r\n\r\n  const currentPosts = data;\r\n  console.log(isLoading)\r\n  console.log(isError)\r\n  console.log(error)\r\n\r\n  return (\r\n  <div className=\"posts\">\r\n       <p> Posts </p>\r\n\r\n      { data && <IndividualPost posts = { currentPosts } title=\"The posts!\" />}\r\n      {console.log(data)}\r\n  </div>\r\n  );\r\n  }\r\n  \r\nexport default PostList;\r\n<p> <b> Groups </b></p>\r\n<p> Current User: { currentUser } </p>\r\n<p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\r\n\r\n<Link to={`/group/1`}>{ \"Music 1\" } </Link>\r\n<Link to={`/group/2`}>{ \"Music 2\" } </Link>\r\n<Link className=\"\" to=\"/group/5\"> Games 5 </Link>\r\n\r\n//\r\n\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"sources":["C:/wamp/www/kite/src/components/groups/GroupList.js"],"names":["React","useQuery","Link","axios","axiosRequest","create","withCredentials","getGroups","currentUser","console","log","groupURL","data","get","Groups","props","isLoading","isError","error","refetchInterval","groups","message","map","group","groupID","groupName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAa;AAChCC,EAAAA,eAAe,EAAE;AADe,CAAb,CAArB;;AAIA,eAAeC,SAAf,CAAyBC,WAAzB,EAAsC;AACpC;AACA,MAAGA,WAAH,EAAgB;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCF,WAA/C;AACD,GAJmC,CAOpC;;;AACA,QAAMG,QAAQ,GAAG,uCAAuCH,WAAxD;AAGA,QAAM;AAAEI,IAAAA;AAAF,MAAW,MAAMR,YAAY,CAACS,GAAb,CAAiBF,QAAjB,CAAvB,CAXoC,CAYpC;AACA;;AACA,SAAOC,IAAP;AACD,C,CAEC;AACA;AACA;;;AAGF,MAAME,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMP,WAAW,GAAGO,KAAK,CAACP,WAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCF,WAA/C;AAEA,QAAM;AAAEQ,IAAAA,SAAF;AAAaJ,IAAAA,IAAb;AAAmBK,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,MAAuCjB,QAAQ,CAAC,CAAC,aAAD,EAAgBO,WAAhB,CAAD,EAA+B,MAAMD,SAAS,CAACC,WAAD,CAA9C,EACnD;AAAEW,IAAAA,eAAe,EAAE;AAAnB,GADmD,CAArD;AAIA,MAAIC,MAAM,GAAGR,IAAI,CAACQ,MAAlB;AAEAX,EAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ,EAVwB,CAWxB;AACA;;AAEA,sBACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,eACMJ,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,EAEMC,OAAO,iBAAI;AAAA,4DAA8CC,KAAK,CAACG,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFjB,EAGMT,IAAI,IAAIH,OAAO,CAACC,GAAR,CAAYE,IAAZ,CAHd,EAIKA,IAAI,IAAIQ,MAAM,CAACE,GAAP,CAAWC,KAAK,iBACrB;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAA,wBAAMA,KAAK,CAACC,OAAZ,SAAyBD,KAAK,CAACE,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAA6BF,KAAK,CAACC,OAAnC;AAAA;AAAA;AAAA;AAAA,YADK,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAYC,CA1BH;;GAAMV,M;UAIyCb,Q;;;KAJzCa,M;AA4BN,eAAeA,MAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\n\r\nconst axiosRequest = axios.create({\r\n  withCredentials: true\r\n})  \r\n\r\nasync function getGroups(currentUser) {\r\n  //currentUser = \"davey\"\r\n  if(currentUser) {\r\n    console.log(\"GroupList: Getting groups for \" + currentUser)\r\n  }\r\n  \r\n\r\n  //const groupURL = \"http://localhost:3003/posts/user/\" + currentUser;   \r\n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser; \r\n \r\n \r\n  const { data } = await axiosRequest.get(groupURL)\r\n  //console.log(\"data\")\r\n  //console.log(data)\r\n  return data\r\n} \r\n\r\n  //const groupURL = 'http://localhost:3003/groups/' + currentUser;\r\n  //const groupURL = \"http://localhost:3003/posts/group/\" + currentUser;\r\n  //const groupURL = \"http://localhost:3003/test/\" + currentUser;\r\n\r\n\r\nconst Groups = (props) => {\r\n  const currentUser = props.currentUser;\r\n  console.log(\"GroupList: Getting groups for \" + currentUser)\r\n\r\n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser), \r\n    { refetchInterval: 10000000 }\r\n  )\r\n\r\n  var groups = data.groups;\r\n\r\n  console.log(groups)\r\n  //console.log(isError)\r\n  //console.log(error)\r\n\r\n  return (\r\n  <div className=\"groups\">\r\n      { isLoading && <div> loading... </div>}\r\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\r\n      { data && console.log(data)}\r\n      {data && groups.map(group => (\r\n          <div className=\"group\" key={ group.groupID } >\r\n            <p> { group.groupID } | {group.groupName } </p>\r\n          </div>\r\n      ))}\r\n  </div>\r\n  );\r\n  }\r\n  \r\nexport default Groups;\r\n\r\n\r\n/*\r\n       { data && console.log(\"\")}\r\n      {data && groups.map(group => (\r\n          <div className=\"group\" key={ group.groupID } >\r\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\r\n          </div>\r\n      ))}\r\n\r\n    \r\nasync function getPosts(groupID) {\r\n  const postErrorURL = \"/posts/group/error\";\r\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;  \r\n  const { data } = await axios.get(postURL)\r\n  return data\r\n} \r\n\r\nconst PostList = (props) => {\r\n  const groupID = props.groupID;\r\n  \r\n  const { isLoading, data, isError, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID), \r\n    { refetchInterval: 10000000 }\r\n  )\r\n\r\n  const currentPosts = data;\r\n  console.log(isLoading)\r\n  console.log(isError)\r\n  console.log(error)\r\n\r\n  return (\r\n  <div className=\"posts\">\r\n       <p> Posts </p>\r\n\r\n      { data && <IndividualPost posts = { currentPosts } title=\"The posts!\" />}\r\n      {console.log(data)}\r\n  </div>\r\n  );\r\n  }\r\n  \r\nexport default PostList;\r\n<p> <b> Groups </b></p>\r\n<p> Current User: { currentUser } </p>\r\n<p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\r\n\r\n<Link to={`/group/1`}>{ \"Music 1\" } </Link>\r\n<Link to={`/group/2`}>{ \"Music 2\" } </Link>\r\n<Link className=\"\" to=\"/group/5\"> Games 5 </Link>\r\n\r\n//\r\n\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}