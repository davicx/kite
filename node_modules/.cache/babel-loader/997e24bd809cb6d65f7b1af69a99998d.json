{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/posts/actions/NewPhotoPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function postImage(_ref) {\n  let {\n    image,\n    description\n  } = _ref;\n  const formData = new FormData();\n  formData.append(\"image\", image);\n  formData.append(\"description\", description);\n  //const result = await axios.post('http://localhost:3003/sam/images/local', formData, { headers: {'Content-Type': 'multipart/form-data'}})\n  //const result = await axios.post('http://localhost:3003/sam/images/', formData, { headers: {'Content-Type': 'multipart/form-data'}})\n  const result = await axios.post('http://localhost:3003/post/photo/local/aws', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  console.log(result.data);\n  return result.data;\n}\nconst NewPhotoPost = () => {\n  _s();\n  const [file, setFile] = useState();\n  const [description, setDescription] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const submit = async event => {\n    event.preventDefault();\n    const result = await postImage({\n      image: file,\n      description: description\n    });\n    setImages([result.image, ...images]);\n  };\n  const fileSelected = event => {\n    const file = event.target.files[0];\n    setFile(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      className: \"sixty\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: fileSelected,\n        className: \"simple-border\",\n        type: \"file\",\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: description,\n        className: \"simple-border\",\n        onChange: e => setDescription(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n_s(NewPhotoPost, \"okpFgTUxlqKEvIvA0VqXAexb4qg=\");\n_c = NewPhotoPost;\nexport default NewPhotoPost;\n\n/*\n\n//FUNCTION 1: New Post API\nasync function makePostAPI(post, images) {\n    const formData = new FormData();\n    /*\n    postImage\n    postType\n    masterSite\n    postFrom\n    postTo\n    groupID\n    listID\n    postCaption\n    notificationMessage: Posted a Photo\n    notificationType: new_post_photo\n    notificationLink: http://localhost:3003/posts/group/77\n\n    */\n/*\n formData.append(\"image\", image)\n formData.append(\"description\", post.postCaptions)\n const result = await axios.post('http://localhost:3003/post/photo/local/aws', formData, { headers: {'Content-Type': 'multipart/form-data'}})\n    console.log(result.data)\n return result.data\n} \nfunction NewPhotoPost({ groupID, currentUser, api }) {\n const [file, setFile] = useState()\n const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n //const [images, setImages] = useState([])\n  //FUNCTION 2: Handle New Post Submit Button\n const handleChange = (event) => {\n     const { name, value } = event.target\n     setPostCaption(value)\n }\n  //FUNCTION 3: File Upload Handling\n const fileSelected = event => {\n     const file = event.target.files[0]\n         setFile(file)\n }\n \n  const handleSubmit = (event) => {\n     event.preventDefault();\n      var newPost = {\n         masterSite: \"kite\",\n         postType: \"text\",\n         postFrom: currentUser,\n         postTo: groupID,\n         groupID: groupID,\n         listID: 0,\n         postCaption: postCaption,\n         notificationMessage: \"Posted a Message\",   \n         notificationType: \"new_post_text\",\n         notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n     }\n     mutate(newPost, image)\n     \n }\n  //FUNCTION 3: React Query Mutation\n const queryClient = useQueryClient();\n const { isLoading, mutate } = useMutation(makePostAPI, {\n     onSuccess: (returnedData) => {\n       queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n             var updatedPostData = structuredClone(originalQueryData);\n             let newPost = returnedData.data;\n              updatedPostData.unshift(newPost);\n              return updatedPostData;     \n         })\n     }\n   })\n  //FUNCTION 4: React and Site Page\n return (\n     <div className=\"new-post\">\n         <p><b> Make a Post </b>to Group { groupID } </p>\n         <p> Current User: { currentUser} </p>\n         <form onSubmit={ handleSubmit }>\n             <label> </label> \n             <input name= \"postCaption\" className = \"new-post-caption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n             <p> &nbsp </p>\n             <input onChange={fileSelected} className=\"simple-border\" type=\"file\" accept=\"image/*\"></input>\n             <button type=\"submit\"> Submit </button>\n         </form>\n     </div>\n );\n}\nexport default NewPhotoPost;\n*/\n\n/*\n<input onChange={fileSelected} className=\"simple-border\" type=\"file\" accept=\"image/*\"></input>\n<input value={description} className=\"simple-border\" onChange={e => setDescription(e.target.value)} type=\"text\"></input>\n<button type=\"submit\">Submit</button>\n\n//WORKS FOR TEXT: Trying to build one with photo to AWS\n//FUNCTION 1: New Post API\nasync function makePostAPI(post) {\n    const postURL = \"http://localhost:3003/post/text\";\n    const response = await axios.post(postURL, post);\n\n    return response.data;\n} \n\nfunction NewPost({ groupID, currentUser, api }) {\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        //console.log(newPost)\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" className = \"new-post-caption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> &nbsp </p>\n                <input type=\"file\" id=\"myFile\" name=\"filename\"></input>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPost;\n*/\nvar _c;\n$RefreshReg$(_c, \"NewPhotoPost\");","map":{"version":3,"names":["React","useState","useMutation","useQueryClient","axios","postImage","image","description","formData","FormData","append","result","post","headers","console","log","data","NewPhotoPost","file","setFile","setDescription","images","setImages","submit","event","preventDefault","fileSelected","target","files","e","value"],"sources":["/Users/david/Desktop/David/www/kite/src/components/posts/actions/NewPhotoPost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nasync function postImage({image, description}) {\n    const formData = new FormData();\n    formData.append(\"image\", image)\n    formData.append(\"description\", description)\n    //const result = await axios.post('http://localhost:3003/sam/images/local', formData, { headers: {'Content-Type': 'multipart/form-data'}})\n    //const result = await axios.post('http://localhost:3003/sam/images/', formData, { headers: {'Content-Type': 'multipart/form-data'}})\n    const result = await axios.post('http://localhost:3003/post/photo/local/aws', formData, { headers: {'Content-Type': 'multipart/form-data'}})\n  \n    console.log(result.data)\n    return result.data\n}\n\n\nconst NewPhotoPost = () => {\n    const [file, setFile] = useState()\n    const [description, setDescription] = useState(\"\")\n    const [images, setImages] = useState([])\n  \n    const submit = async event => {\n      event.preventDefault()\n      const result = await postImage({image: file, description: description})\n      setImages([result.image, ...images])\n    }\n  \n    const fileSelected = event => {\n      const file = event.target.files[0]\n          setFile(file)\n      }\n  \n    return (\n      <div className=\"App\">\n        <form onSubmit={submit} className = \"sixty\">\n          <input onChange={fileSelected} className=\"simple-border\" type=\"file\" accept=\"image/*\"></input>\n          <input value={description} className=\"simple-border\" onChange={e => setDescription(e.target.value)} type=\"text\"></input>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n}\n\nexport default NewPhotoPost;\n\n\n/*\n\n//FUNCTION 1: New Post API\nasync function makePostAPI(post, images) {\n    const formData = new FormData();\n    /*\n    postImage\n    postType\n    masterSite\n    postFrom\n    postTo\n    groupID\n    listID\n    postCaption\n    notificationMessage: Posted a Photo\n    notificationType: new_post_photo\n    notificationLink: http://localhost:3003/posts/group/77\n\n    */\n   /*\n    formData.append(\"image\", image)\n    formData.append(\"description\", post.postCaptions)\n    const result = await axios.post('http://localhost:3003/post/photo/local/aws', formData, { headers: {'Content-Type': 'multipart/form-data'}})\n  \n    console.log(result.data)\n    return result.data\n} \n\nfunction NewPhotoPost({ groupID, currentUser, api }) {\n    const [file, setFile] = useState()\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n    //const [images, setImages] = useState([])\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    //FUNCTION 3: File Upload Handling\n    const fileSelected = event => {\n        const file = event.target.files[0]\n            setFile(file)\n    }\n    \n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        mutate(newPost, image)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" className = \"new-post-caption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> &nbsp </p>\n                <input onChange={fileSelected} className=\"simple-border\" type=\"file\" accept=\"image/*\"></input>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPhotoPost;\n\n\n*/\n\n/*\n<input onChange={fileSelected} className=\"simple-border\" type=\"file\" accept=\"image/*\"></input>\n<input value={description} className=\"simple-border\" onChange={e => setDescription(e.target.value)} type=\"text\"></input>\n<button type=\"submit\">Submit</button>\n\n//WORKS FOR TEXT: Trying to build one with photo to AWS\n//FUNCTION 1: New Post API\nasync function makePostAPI(post) {\n    const postURL = \"http://localhost:3003/post/text\";\n    const response = await axios.post(postURL, post);\n\n    return response.data;\n} \n\nfunction NewPost({ groupID, currentUser, api }) {\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        //console.log(newPost)\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" className = \"new-post-caption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> &nbsp </p>\n                <input type=\"file\" id=\"myFile\" name=\"filename\"></input>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPost;\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,eAAeC,SAAS,OAAuB;EAAA,IAAtB;IAACC,KAAK;IAAEC;EAAW,CAAC;EACzC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;EAC/BE,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEH,WAAW,CAAC;EAC3C;EACA;EACA,MAAMI,MAAM,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,4CAA4C,EAAEJ,QAAQ,EAAE;IAAEK,OAAO,EAAE;MAAC,cAAc,EAAE;IAAqB;EAAC,CAAC,CAAC;EAE5IC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACK,IAAI,CAAC;EACxB,OAAOL,MAAM,CAACK,IAAI;AACtB;AAGA,MAAMC,YAAY,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,EAAE;EAClC,MAAM,CAACM,WAAW,EAAEa,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMsB,MAAM,GAAG,MAAMC,KAAK,IAAI;IAC5BA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMd,MAAM,GAAG,MAAMN,SAAS,CAAC;MAACC,KAAK,EAAEY,IAAI;MAAEX,WAAW,EAAEA;IAAW,CAAC,CAAC;IACvEe,SAAS,CAAC,CAACX,MAAM,CAACL,KAAK,EAAE,GAAGe,MAAM,CAAC,CAAC;EACtC,CAAC;EAED,MAAMK,YAAY,GAAGF,KAAK,IAAI;IAC5B,MAAMN,IAAI,GAAGM,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BT,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC;EAEH,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAM,QAAQ,EAAEK,MAAO;MAAC,SAAS,EAAG,OAAO;MAAA,wBACzC;QAAO,QAAQ,EAAEG,YAAa;QAAC,SAAS,EAAC,eAAe;QAAC,IAAI,EAAC,MAAM;QAAC,MAAM,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9F;QAAO,KAAK,EAAEnB,WAAY;QAAC,SAAS,EAAC,eAAe;QAAC,QAAQ,EAAEsB,CAAC,IAAIT,cAAc,CAACS,CAAC,CAACF,MAAM,CAACG,KAAK,CAAE;QAAC,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS,eACxH;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAChC;IAAA;IAAA;IAAA;EAAA,QACH;AAEZ,CAAC;AAAA,GAzBKb,YAAY;AAAA,KAAZA,YAAY;AA2BlB,eAAeA,YAAY;;AAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7EA;AAAA"},"metadata":{},"sourceType":"module"}