{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/posts/actions/DeletePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({});\nasync function deletePostAPI(deletePost) {\n  const postURL = \"http://localhost:3003/post/delete/\";\n  const response = await axios.post(postURL, deletePost);\n  console.log(response.data);\n  return response.data;\n}\nconst DeletePost = _ref => {\n  _s();\n  let {\n    groupID,\n    currentUser,\n    postID\n  } = _ref;\n  const queryClient = useQueryClient();\n  const handleDeletePost = (currentUser, postID) => {\n    var deletePost = {\n      postID: postID,\n      currentUser: currentUser\n    };\n    console.log(\"DELETE \");\n    console.log(deletePost);\n    mutate(deletePost);\n  };\n  const {\n    isLoading,\n    mutate\n  } = useMutation(deletePostAPI, {\n    onSuccess: returnedData => {\n      queryClient.setQueryData(['group-posts', groupID], originalQueryData => {\n        queryClient.invalidateQueries(['group-posts', groupID]);\n        console.log(\"originalQueryData\");\n        console.log(originalQueryData);\n        console.log(\"returnedData\");\n        console.log(returnedData);\n        console.log(\"deletedPostID\");\n        console.log(deletedPostID);\n        //var updatedQueryData = structuredClone(originalQueryData);\n        var updatedQueryData = [];\n\n        //STEP 1: Remove post with this ID\n        const deletedPostID = returnedData.data[0].postID;\n        for (let i = 0; i < originalQueryData.length; i++) {\n          if (originalQueryData[i].postID != deletedPostID) {\n            updatedQueryData.push(originalQueryData[i]);\n          }\n        }\n        return updatedQueryData;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"\",\n      onClick: () => {\n        handleDeletePost(currentUser, postID);\n      },\n      children: \"Delete Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(DeletePost, \"sG6dR2SYHBppzfZZ0/U+hBJTR78=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = DeletePost;\nexport default DeletePost;\n\n/*\nfunction LikePost({groupID, post, currentUser}) {\n\n\n\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n*/\nvar _c;\n$RefreshReg$(_c, \"DeletePost\");","map":{"version":3,"names":["React","useState","useMutation","useQueryClient","axios","api","create","deletePostAPI","deletePost","postURL","response","post","console","log","data","DeletePost","groupID","currentUser","postID","queryClient","handleDeletePost","mutate","isLoading","onSuccess","returnedData","setQueryData","originalQueryData","invalidateQueries","deletedPostID","updatedQueryData","i","length","push"],"sources":["/Users/david/Desktop/David/www/kite/src/components/posts/actions/DeletePost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n\n})\n\nasync function deletePostAPI(deletePost) {\n  const postURL = \"http://localhost:3003/post/delete/\"\n  const response = await axios.post(postURL, deletePost);\n  console.log(response.data)\n\n  return response.data;\n  } \n  \n\nconst DeletePost = ({ groupID, currentUser, postID}) => {\n  const queryClient = useQueryClient();\n\n  const handleDeletePost = (currentUser, postID) => {\n    var deletePost = {\n        postID: postID,\n        currentUser: currentUser   \n    }\n    console.log(\"DELETE \")\n    console.log(deletePost)\n    mutate(deletePost) \n  }\n\n    const { isLoading, mutate } = useMutation(deletePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n            queryClient.invalidateQueries(['group-posts', groupID]) \n\n            console.log(\"originalQueryData\")\n            console.log(originalQueryData)\n            console.log(\"returnedData\")\n            console.log(returnedData)\n\n            \n            console.log(\"deletedPostID\")\n            console.log(deletedPostID)\n            //var updatedQueryData = structuredClone(originalQueryData);\n            var updatedQueryData = [];\n\n\n            //STEP 1: Remove post with this ID\n            const deletedPostID = returnedData.data[0].postID\n\n            for (let i = 0; i < originalQueryData.length; i++) {\n                if(originalQueryData[i].postID != deletedPostID) {\n                    updatedQueryData.push(originalQueryData[i])\n                }\n            }\n    \n            return updatedQueryData;\n            \n            })    \n            \n        }\n       \n\n      })\n      \n\n    return (     \n        <div className=\"\" >\n            <button type=\"submit\" className = \"\" onClick={() => { handleDeletePost(currentUser, postID) }}>Delete Me</button>                 \n        </div>       \n        );\n    }  \n\nexport default DeletePost;\n\n/*\nfunction LikePost({groupID, post, currentUser}) {\n\n\n\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n*/\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC,CAEzB,CAAC,CAAC;AAEF,eAAeC,aAAa,CAACC,UAAU,EAAE;EACvC,MAAMC,OAAO,GAAG,oCAAoC;EACpD,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACF,OAAO,EAAED,UAAU,CAAC;EACtDI,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAE1B,OAAOJ,QAAQ,CAACI,IAAI;AACpB;AAGF,MAAMC,UAAU,GAAG,QAAqC;EAAA;EAAA,IAApC;IAAEC,OAAO;IAAEC,WAAW;IAAEC;EAAM,CAAC;EACjD,MAAMC,WAAW,GAAGhB,cAAc,EAAE;EAEpC,MAAMiB,gBAAgB,GAAG,CAACH,WAAW,EAAEC,MAAM,KAAK;IAChD,IAAIV,UAAU,GAAG;MACbU,MAAM,EAAEA,MAAM;MACdD,WAAW,EAAEA;IACjB,CAAC;IACDL,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBD,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;IACvBa,MAAM,CAACb,UAAU,CAAC;EACpB,CAAC;EAEC,MAAM;IAAEc,SAAS;IAAED;EAAO,CAAC,GAAGnB,WAAW,CAACK,aAAa,EAAE;IACrDgB,SAAS,EAAGC,YAAY,IAAK;MAC3BL,WAAW,CAACM,YAAY,CAAC,CAAC,aAAa,EAAET,OAAO,CAAC,EAAGU,iBAAiB,IAAK;QACxEP,WAAW,CAACQ,iBAAiB,CAAC,CAAC,aAAa,EAAEX,OAAO,CAAC,CAAC;QAEvDJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChCD,OAAO,CAACC,GAAG,CAACa,iBAAiB,CAAC;QAC9Bd,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3BD,OAAO,CAACC,GAAG,CAACW,YAAY,CAAC;QAGzBZ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC5BD,OAAO,CAACC,GAAG,CAACe,aAAa,CAAC;QAC1B;QACA,IAAIC,gBAAgB,GAAG,EAAE;;QAGzB;QACA,MAAMD,aAAa,GAAGJ,YAAY,CAACV,IAAI,CAAC,CAAC,CAAC,CAACI,MAAM;QAEjD,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,iBAAiB,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;UAC/C,IAAGJ,iBAAiB,CAACI,CAAC,CAAC,CAACZ,MAAM,IAAIU,aAAa,EAAE;YAC7CC,gBAAgB,CAACG,IAAI,CAACN,iBAAiB,CAACI,CAAC,CAAC,CAAC;UAC/C;QACJ;QAEA,OAAOD,gBAAgB;MAEvB,CAAC,CAAC;IAEN;EAGF,CAAC,CAAC;EAGJ,oBACI;IAAK,SAAS,EAAC,EAAE;IAAA,uBACb;MAAQ,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAG,EAAE;MAAC,OAAO,EAAE,MAAM;QAAET,gBAAgB,CAACH,WAAW,EAAEC,MAAM,CAAC;MAAC,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QAC/G;AAEV,CAAC;AAAA,GAtDCH,UAAU;EAAA,QACMZ,cAAc,EAYFD,WAAW;AAAA;AAAA,KAbvCa,UAAU;AAwDhB,eAAeA,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA"},"metadata":{},"sourceType":"module"}