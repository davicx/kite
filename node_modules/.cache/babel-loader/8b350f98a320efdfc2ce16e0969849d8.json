{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/pages/Playground.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { useNavigate } from \"react-router-dom\";\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport functions from \"../functions/functions\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playground() {\n  _s();\n  const [postCaption, editPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!');\n  const handleEditPost = (postID, currentUser) => {\n    var likedPost = {\n      postID: postID,\n      currentUser: currentUser,\n      groupID: groupID\n    };\n    mutate(likedPost);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" Playground \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Post caption! Edit Me! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"\",\n      onClick: () => {\n        handleEditPost(postID, postCaption);\n      },\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Playground, \"/klvfyNKPAeL1HgheMGi/Nlbjow=\");\n_c = Playground;\nexport default Playground;\n\n/*\nconst Search = () => {\n  const [showResults, setShowResults] = React.useState(false)\n  const onClick = () => setShowResults(true)\n  return (\n    <div>\n      <input type=\"submit\" value=\"Search\" onClick={onClick} />\n      { showResults ? <Results /> : null }\n    </div>\n  )\n}\n\nconst Results = () => (\n  <div id=\"results\" className=\"search-results\">\n    Some Results\n  </div>\n)\n*/\n\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n\n//Create the API to call \nconst api = axios.create({\n\n})\n\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\"\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n//COMPONENT: Like Post  \nfunction LikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  //const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser,\n        groupID: groupID\n    }\n\n    mutate(likedPost)\n\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n        console.log(returnedData)\n        \n          //STEP 1: Get post ID of updated post and new like array \n          var updatedQueryData = structuredClone(originalQueryData);\n          console.log(\"updatedQueryData\")\n          console.log(updatedQueryData)\n          console.log(\"updatedQueryData\")\n\n          const postID = returnedData.postID;\n          const currentUser = returnedData.currentUser;\n\n          for (let i = 0; i < updatedQueryData.length; i++) {\n\n              if(updatedQueryData[i].postID == postID) {\n\n                  var postLike = returnedData.newLike[0];\n\n                  //Create the new array of users who have liked this\n                  updatedQueryData[i].postLikesArray.push(postLike)\n                  updatedQueryData[i].simpleLikesArray.push(currentUser)\n                  updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n              }\n          }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n*/\nvar _c;\n$RefreshReg$(_c, \"Playground\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useQuery","useNavigate","useLoginStatus","functions","axios","Playground","postCaption","editPostCaption","handleEditPost","postID","currentUser","likedPost","groupID","mutate"],"sources":["/Users/david/Desktop/David/www/kite/src/pages/Playground.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { useNavigate  } from \"react-router-dom\" \nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport functions from \"../functions/functions\";\n\nimport axios from 'axios'\n\n\n\nfunction Playground() {\n    const [postCaption, editPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleEditPost = (postID, currentUser) => {\n        var likedPost = {\n            postID: postID,\n            currentUser: currentUser,\n            groupID: groupID\n        }\n    \n        mutate(likedPost)\n    \n      }\n\n  return (\n    <div className=\"user\">\n        <h4> Playground </h4>\n        <p> Post caption! Edit Me! </p>\n        <button type=\"submit\" className = \"\" onClick={() => { handleEditPost(postID, postCaption) }}>Edit Post</button>\n\n    </div>\n  );\n}\n\nexport default Playground;\n\n\n/*\nconst Search = () => {\n  const [showResults, setShowResults] = React.useState(false)\n  const onClick = () => setShowResults(true)\n  return (\n    <div>\n      <input type=\"submit\" value=\"Search\" onClick={onClick} />\n      { showResults ? <Results /> : null }\n    </div>\n  )\n}\n\nconst Results = () => (\n  <div id=\"results\" className=\"search-results\">\n    Some Results\n  </div>\n)\n*/\n\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n\n//Create the API to call \nconst api = axios.create({\n\n})\n\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\"\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n//COMPONENT: Like Post  \nfunction LikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  //const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser,\n        groupID: groupID\n    }\n\n    mutate(likedPost)\n\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n        console.log(returnedData)\n        \n          //STEP 1: Get post ID of updated post and new like array \n          var updatedQueryData = structuredClone(originalQueryData);\n          console.log(\"updatedQueryData\")\n          console.log(updatedQueryData)\n          console.log(\"updatedQueryData\")\n\n          const postID = returnedData.postID;\n          const currentUser = returnedData.currentUser;\n\n          for (let i = 0; i < updatedQueryData.length; i++) {\n\n              if(updatedQueryData[i].postID == postID) {\n\n                  var postLike = returnedData.newLike[0];\n\n                  //Create the new array of users who have liked this\n                  updatedQueryData[i].postLikesArray.push(postLike)\n                  updatedQueryData[i].simpleLikesArray.push(currentUser)\n                  updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n              }\n          }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,QAAS,kBAAkB;AAC/C,OAAOC,cAAc,MAAM,mCAAmC;AAC9D,OAAOC,SAAS,MAAM,wBAAwB;AAE9C,OAAOC,KAAK,MAAM,OAAO;AAAA;AAIzB,SAASC,UAAU,GAAG;EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,4DAA4D,CAAC;EAE7G,MAAMW,cAAc,GAAG,CAACC,MAAM,EAAEC,WAAW,KAAK;IAC5C,IAAIC,SAAS,GAAG;MACZF,MAAM,EAAEA,MAAM;MACdC,WAAW,EAAEA,WAAW;MACxBE,OAAO,EAAEA;IACb,CAAC;IAEDC,MAAM,CAACF,SAAS,CAAC;EAEnB,CAAC;EAEL,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB;MAAA,UAAG;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAI,eAC/B;MAAQ,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAG,EAAE;MAAC,OAAO,EAAE,MAAM;QAAEH,cAAc,CAACC,MAAM,EAAEH,WAAW,CAAC;MAAC,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAE7G;AAEV;AAAC,GAtBQD,UAAU;AAAA,KAAVA,UAAU;AAwBnB,eAAeA,UAAU;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhFA;AAAA"},"metadata":{},"sourceType":"module"}