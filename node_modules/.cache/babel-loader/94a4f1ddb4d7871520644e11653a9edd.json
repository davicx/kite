{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/comments/display/CommentList.js\";\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport IndividualComment from './IndividualComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\np;\nconst CommentList = _ref => {\n  let {\n    api,\n    groupID,\n    postComments,\n    postID\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: postComments && postComments.map(comment => /*#__PURE__*/_jsxDEV(IndividualComment, {\n        api: api,\n        comment: comment,\n        groupID: groupID\n      }, comment.commentID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n_c = CommentList;\nexport default CommentList;\n\n//BACKUP\n/*\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport IndividualComment from './IndividualComment';\n\n//<Comments api = { api } groupID = { groupID } postID = { post.postID } currentUser = {currentUser}  /> \n\n\nasync function getComments(postID, api) {\n    const commentPostURL = \"http://localhost:3003/comments/\" + postID; \n    const response = await api.get(commentPostURL)\n    //console.log(\"response\")\n    //console.log(response)\n    //console.log(\"response\")\n  \n    return response.data\n  \n} \n\n\n//This does not need API just send as a prop\nconst CommentList = ({api, groupID, postComments, postID}) => {\n    const localData = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUser = JSON.parse(localData);\n    //console.log(\"Posts: Getting Comments for the post \" + postID)\n\n    \n    const onError = (error) => {\n      console.log(\"Do something here if there is Error!\")\n      console.log(error)\n    }\n  \n    const { isLoading, data, isError, error  } = useQuery(['post-comments', postID], () => getComments(postID, api), \n      { refetchInterval: 10000000,\n        onError: onError\n      }\n    )\n\n    const currentPosts = data;\n    \n//<IndividualComment api = { api } post = { post }  groupID = { groupID } currentUser = {currentUser} key = { post.postID }/>\n  return (\n  <div className=\"posts\">\n       <p><b> Comments</b> </p>\n       <div className = \"post-list\" >\n       {postComments && postComments.map((comment) => (\n            <IndividualComment api = { api } comment = { comment }  groupID = { groupID }  key = { comment.commentID }/>\n          ))}\n       </div>\n  </div>\n  );\n  }\n  \nexport default CommentList;\n*/\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useQuery","IndividualComment","p","CommentList","api","groupID","postComments","postID","map","comment","commentID"],"sources":["/Users/david/Desktop/David/www/kite/src/components/comments/display/CommentList.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from \"react-query\";\nimport IndividualComment from './IndividualComment';\n\np\nconst CommentList = ({api, groupID, postComments, postID}) => {\n\n      return (\n  <div className=\"posts\">\n       <p><b> Comments</b> </p>\n       <div className = \"post-list\" >\n       {postComments && postComments.map((comment) => (\n            <IndividualComment api = { api } comment = { comment }  groupID = { groupID }  key = { comment.commentID }/>\n          ))}\n       </div>\n  </div>\n  );\n  }\n  \nexport default CommentList;\n\n\n\n\n//BACKUP\n/*\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport IndividualComment from './IndividualComment';\n\n//<Comments api = { api } groupID = { groupID } postID = { post.postID } currentUser = {currentUser}  /> \n\n\nasync function getComments(postID, api) {\n    const commentPostURL = \"http://localhost:3003/comments/\" + postID; \n    const response = await api.get(commentPostURL)\n    //console.log(\"response\")\n    //console.log(response)\n    //console.log(\"response\")\n  \n    return response.data\n  \n} \n\n\n//This does not need API just send as a prop\nconst CommentList = ({api, groupID, postComments, postID}) => {\n    const localData = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUser = JSON.parse(localData);\n    //console.log(\"Posts: Getting Comments for the post \" + postID)\n\n    \n    const onError = (error) => {\n      console.log(\"Do something here if there is Error!\")\n      console.log(error)\n    }\n  \n    const { isLoading, data, isError, error  } = useQuery(['post-comments', postID], () => getComments(postID, api), \n      { refetchInterval: 10000000,\n        onError: onError\n      }\n    )\n\n    const currentPosts = data;\n    \n//<IndividualComment api = { api } post = { post }  groupID = { groupID } currentUser = {currentUser} key = { post.postID }/>\n  return (\n  <div className=\"posts\">\n       <p><b> Comments</b> </p>\n       <div className = \"post-list\" >\n       {postComments && postComments.map((comment) => (\n            <IndividualComment api = { api } comment = { comment }  groupID = { groupID }  key = { comment.commentID }/>\n          ))}\n       </div>\n  </div>\n  );\n  }\n  \nexport default CommentList;\n*/\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC;AAEpDC,CAAC;AACD,MAAMC,WAAW,GAAG,QAA0C;EAAA,IAAzC;IAACC,GAAG;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAM,CAAC;EAEnD,oBACJ;IAAK,SAAS,EAAC,OAAO;IAAA,wBACjB;MAAA,wBAAG;QAAA,UAAG;MAAS;QAAA;QAAA;QAAA;MAAA,QAAI,KAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eACxB;MAAK,SAAS,EAAG,WAAW;MAAA,UAC3BD,YAAY,IAAIA,YAAY,CAACE,GAAG,CAAEC,OAAO,iBACrC,QAAC,iBAAiB;QAAC,GAAG,EAAKL,GAAK;QAAC,OAAO,EAAKK,OAAS;QAAE,OAAO,EAAKJ;MAAS,GAAUI,OAAO,CAACC,SAAS;QAAA;QAAA;QAAA;MAAA,QACzG;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEN,CAAC;AAAA,KAZGP,WAAW;AAcjB,eAAeA,WAAW;;AAK1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtDA;AAAA"},"metadata":{},"sourceType":"module"}