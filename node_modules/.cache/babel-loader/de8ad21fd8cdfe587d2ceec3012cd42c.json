{"ast":null,"code":"var _jsxFileName = \"/Users/chavasqu/Desktop/David/www/kite/src/components/login/RequireAuth.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation, Navigate, Outlet } from \"react-router-dom\";\nimport { LoginContext } from \"../../functions/context/LoginContext\";\nimport React, { useState, useContext } from 'react'; //import useAuth from \"../hooks/useAuth\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RequireAuth = () => {\n  _s();\n\n  const {\n    currentUser,\n    setLoginState\n  } = useContext(LoginContext);\n  const location = useLocation();\n\n  if (currentUser == 'null') {\n    userLoggedIn = false;\n  } else {\n    userLoggedIn = true;\n  }\n\n  return userLoggedIn ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 24\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\",\n    state: {\n      from: location\n    },\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 37\n  }, this);\n};\n\n_s(RequireAuth, \"j0zTrMKJtHLETSsUF6l/WFk+6rc=\", false, function () {\n  return [useLocation];\n});\n\n_c = RequireAuth;\nexport default RequireAuth;\n/*\nconst RequireAuth = ({ allowedRoles }) => {\n    \n    const location = useLocation();\n\n    return (\n        auth?.roles?.find(role => allowedRoles?.includes(role))\n            ? <Outlet />\n            : auth?.user\n                ? <Navigate to=\"/unauthorized\" state={{ from: location }} replace />\n                : <Navigate to=\"/login\" state={{ from: location }} replace />\n    );\n}\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"RequireAuth\");","map":{"version":3,"sources":["/Users/chavasqu/Desktop/David/www/kite/src/components/login/RequireAuth.js"],"names":["useLocation","Navigate","Outlet","LoginContext","React","useState","useContext","RequireAuth","currentUser","setLoginState","location","userLoggedIn","from"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,kBAA9C;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C,C,CACA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAgCH,UAAU,CAACH,YAAD,CAAhD;AACA,QAAMO,QAAQ,GAAGV,WAAW,EAA5B;;AACA,MAAGQ,WAAW,IAAI,MAAlB,EAA0B;AACtBG,IAAAA,YAAY,GAAG,KAAf;AACD,GAFH,MAES;AACLA,IAAAA,YAAY,GAAG,IAAf;AACH;;AAED,SACIA,YAAY,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAgB,QAAC,QAAD;AAAU,IAAA,EAAE,EAAG,GAAf;AAAmB,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAEF;AAAP,KAA1B;AAA4C,IAAA,OAAO;AAAnD;AAAA;AAAA;AAAA;AAAA,UADhC;AAGH,CAZD;;GAAMH,W;UAEeP,W;;;KAFfO,W;AAcN,eAAeA,WAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useLocation, Navigate, Outlet } from \"react-router-dom\";\nimport { LoginContext } from \"../../functions/context/LoginContext\";\nimport React, { useState, useContext } from 'react'\n//import useAuth from \"../hooks/useAuth\";\n\nconst RequireAuth = () => {\n    const { currentUser, setLoginState} = useContext(LoginContext);\n    const location = useLocation();\n    if(currentUser == 'null') {\n        userLoggedIn = false\n      } else {\n        userLoggedIn = true \n    }\n\n    return (\n        userLoggedIn ? <Outlet /> : <Navigate to = \"/\" state={{from: location}} replace />\n    );\n}\n\nexport default RequireAuth;\n\n/*\nconst RequireAuth = ({ allowedRoles }) => {\n    \n    const location = useLocation();\n\n    return (\n        auth?.roles?.find(role => allowedRoles?.includes(role))\n            ? <Outlet />\n            : auth?.user\n                ? <Navigate to=\"/unauthorized\" state={{ from: location }} replace />\n                : <Navigate to=\"/login\" state={{ from: location }} replace />\n    );\n}\n*/"]},"metadata":{},"sourceType":"module"}