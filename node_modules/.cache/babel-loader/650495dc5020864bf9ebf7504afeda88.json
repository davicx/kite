{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/LikePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios';\n\n//Create the API to call \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({});\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\";\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data);\n  return response.data;\n}\nfunction LikePost(_ref) {\n  _s();\n  let {\n    groupID,\n    post,\n    currentUser\n  } = _ref;\n  const queryClient = useQueryClient();\n  //const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n      postID: postID,\n      currentUser: currentUser,\n      groupID: groupID\n    };\n    mutate(likedPost);\n  };\n  const {\n    isLoading,\n    mutate\n  } = useMutation(likePostAPI, {\n    onSuccess: returnedData => {\n      queryClient.setQueryData(['group-posts', groupID], originalQueryData => {\n        console.log(returnedData);\n\n        //STEP 1: Get post ID of updated post and new like array \n        var updatedQueryData = structuredClone(originalQueryData);\n        const postID = returnedData.postID;\n        const currentUser = returnedData.currentUser;\n        for (let i = 0; i < updatedQueryData.length; i++) {\n          if (updatedQueryData[i].postID == postID) {\n            var postLike = returnedData.newLike[0];\n\n            //Create the new array of users who have liked this\n            updatedQueryData[i].postLikesArray.push(postLike);\n            updatedQueryData[i].simpleLikesArray.push(currentUser);\n            updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length;\n          }\n        }\n        return updatedQueryData;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"\",\n      onClick: () => {\n        handleLikePost(postID, currentUser);\n      },\n      children: \"Like Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(LikePost, \"sG6dR2SYHBppzfZZ0/U+hBJTR78=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = LikePost;\nexport default LikePost;\nvar _c;\n$RefreshReg$(_c, \"LikePost\");","map":{"version":3,"names":["React","useState","useMutation","useQueryClient","axios","api","create","likePostAPI","likedPost","postURL","response","post","console","log","data","LikePost","groupID","currentUser","queryClient","postID","handleLikePost","mutate","isLoading","onSuccess","returnedData","setQueryData","originalQueryData","updatedQueryData","structuredClone","i","length","postLike","newLike","postLikesArray","push","simpleLikesArray","totalLikes"],"sources":["/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/LikePost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n\n//Create the API to call \nconst api = axios.create({\n\n})\n\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\"\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n\nfunction LikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  //const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser,\n        groupID: groupID\n    }\n\n    mutate(likedPost)\n\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n        console.log(returnedData)\n        \n        //STEP 1: Get post ID of updated post and new like array \n        var updatedQueryData = structuredClone(originalQueryData);\n        const postID = returnedData.postID;\n        const currentUser = returnedData.currentUser;\n\n        for (let i = 0; i < updatedQueryData.length; i++) {\n\n            if(updatedQueryData[i].postID == postID) {\n\n                var postLike = returnedData.newLike[0];\n\n                //Create the new array of users who have liked this\n                updatedQueryData[i].postLikesArray.push(postLike)\n                updatedQueryData[i].simpleLikesArray.push(currentUser)\n                updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n            }\n        }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AACzD,OAAOC,KAAK,MAAM,OAAO;;AAGzB;AAAA;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC,CAEzB,CAAC,CAAC;AAEF,eAAeC,WAAW,CAACC,SAAS,EAAE;EACpC,MAAMC,OAAO,GAAG,iCAAiC;EACjD,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACF,OAAO,EAAED,SAAS,CAAC;EACrDI,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAE1B,OAAOJ,QAAQ,CAACI,IAAI;AACtB;AAGA,SAASC,QAAQ,OAA+B;EAAA;EAAA,IAA9B;IAACC,OAAO;IAAEL,IAAI;IAAEM;EAAW,CAAC;EAC5C,MAAMC,WAAW,GAAGf,cAAc,EAAE;EACpC;EACA,MAAMgB,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAG1B,MAAMC,cAAc,GAAG,CAACD,MAAM,EAAEF,WAAW,KAAK;IAC9C,IAAIT,SAAS,GAAG;MACZW,MAAM,EAAEA,MAAM;MACdF,WAAW,EAAEA,WAAW;MACxBD,OAAO,EAAEA;IACb,CAAC;IAEDK,MAAM,CAACb,SAAS,CAAC;EAEnB,CAAC;EAED,MAAM;IAAEc,SAAS;IAAED;EAAO,CAAC,GAAGnB,WAAW,CAACK,WAAW,EAAE;IACrDgB,SAAS,EAAGC,YAAY,IAAK;MAC3BN,WAAW,CAACO,YAAY,CAAC,CAAC,aAAa,EAAET,OAAO,CAAC,EAAGU,iBAAiB,IAAK;QACxEd,OAAO,CAACC,GAAG,CAACW,YAAY,CAAC;;QAEzB;QACA,IAAIG,gBAAgB,GAAGC,eAAe,CAACF,iBAAiB,CAAC;QACzD,MAAMP,MAAM,GAAGK,YAAY,CAACL,MAAM;QAClC,MAAMF,WAAW,GAAGO,YAAY,CAACP,WAAW;QAE5C,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,gBAAgB,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;UAE9C,IAAGF,gBAAgB,CAACE,CAAC,CAAC,CAACV,MAAM,IAAIA,MAAM,EAAE;YAErC,IAAIY,QAAQ,GAAGP,YAAY,CAACQ,OAAO,CAAC,CAAC,CAAC;;YAEtC;YACAL,gBAAgB,CAACE,CAAC,CAAC,CAACI,cAAc,CAACC,IAAI,CAACH,QAAQ,CAAC;YACjDJ,gBAAgB,CAACE,CAAC,CAAC,CAACM,gBAAgB,CAACD,IAAI,CAACjB,WAAW,CAAC;YACtDU,gBAAgB,CAACE,CAAC,CAAC,CAACO,UAAU,GAAGT,gBAAgB,CAACE,CAAC,CAAC,CAACM,gBAAgB,CAACL,MAAM;UAEhF;QACJ;QAEI,OAAOH,gBAAgB;MAE3B,CAAC,CAAC;IAEN;EACF,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,EAAE;IAAA,uBACb;MAAQ,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAG,EAAE;MAAC,OAAO,EAAE,MAAM;QAAEP,cAAc,CAACD,MAAM,EAAEF,WAAW,CAAC;MAAC,CAAE;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QAC3G;AAEV;AAAC,GArDQF,QAAQ;EAAA,QACKZ,cAAc,EAgBJD,WAAW;AAAA;AAAA,KAjBlCa,QAAQ;AAwDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}