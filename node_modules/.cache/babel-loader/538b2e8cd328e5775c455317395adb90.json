{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/posts/Posts.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios';\nimport IndividualPost from './IndividualPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosRequest = axios.create({\n  withCredentials: true\n});\nasync function getPosts(groupID) {\n  const groupPostURL = \"http://localhost:3003/posts/group/\" + groupID;\n  const response = await axiosRequest.get(groupPostURL);\n  return response.data;\n}\nconst Posts = _ref => {\n  _s();\n  let {\n    groupID\n  } = _ref;\n  const localData = localStorage.getItem(\"localStorageCurrentUser\");\n  const currentUser = JSON.parse(localData);\n  console.log(\"Posts: Getting posts for the group \" + groupID);\n  const onError = error => {\n    console.log(\"Do something here if there is Error!\");\n    console.log(error);\n  };\n  const {\n    isLoading,\n    data,\n    isError,\n    error\n  } = useQuery(['group-posts', groupID], () => getPosts(groupID), {\n    refetchInterval: 10000000,\n    onError: onError\n  });\n\n  //Like Post\n  //Edit Post\n  //Delete Post \n\n  const currentPosts = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Group Posts \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 26\n      }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" There was an error fetching the posts \", error.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 24\n      }, this), data && currentPosts.map(post => console.log(post)), data && currentPosts.map(post => /*#__PURE__*/_jsxDEV(IndividualPost, {\n        post: post,\n        currentUser: currentUser\n      }, post.postID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n_s(Posts, \"20VnH7aHnyusuHUg2Uycf4IaPvo=\", false, function () {\n  return [useQuery];\n});\n_c = Posts;\nexport default Posts;\n\n/*\nimport React, { useState } from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios'\nimport Post from './Post';\n\nvar currentUser = \"davey\"\n\nconst api = axios.create({\n  \n})\n\nasync function getPosts(groupID) {\n  const postURL = 'http://localhost:3003/api/posts';  \n  const { data } = await api.get(postURL)\n  console.log(data)\n  return data\n} \n\n\nfunction WallPosts() {\n    var groupID = 72;\n    const postID = 1;\n \n    const { isLoading, data, isError, error  } = useQuery({\n        queryKey: ['group', groupID],\n        queryFn: () => getPosts(postID),\n        refetchInterval: 10000000 \n      })\n    \n    const currentPosts = data;\n    //console.log(isLoading  + \" \" + isError + \" \" + error)\n  \n    return (\n    <div className=\"posts\">\n        { isLoading && <div> loading... </div>}\n        { isError && <div> There was an error fetching the posts { error.message } </div>}\n        { data && currentPosts.map((post) => (\n            <Post post = { post }  currentUser = {currentUser} key = { post.postID }/>\n        ))}\n    </div>\n    );\n}\n\nexport default WallPosts;\n\n\n*/\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useQuery","axios","IndividualPost","axiosRequest","create","withCredentials","getPosts","groupID","groupPostURL","response","get","data","Posts","localData","localStorage","getItem","currentUser","JSON","parse","console","log","onError","error","isLoading","isError","refetchInterval","currentPosts","message","map","post","postID"],"sources":["/Users/david/Desktop/David/www/kite/src/components/posts/Posts.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios'\nimport IndividualPost from './IndividualPost';\n\nconst axiosRequest = axios.create({\n    withCredentials: true\n  })  \n\nasync function getPosts(groupID) {\n    const groupPostURL = \"http://localhost:3003/posts/group/\" + groupID; \n    const response = await axiosRequest.get(groupPostURL)\n  \n    return response.data\n  \n} \n\nconst Posts = ({groupID}) => {\n    const localData = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUser = JSON.parse(localData);\n    console.log(\"Posts: Getting posts for the group \" + groupID)\n\n    const onError = (error) => {\n      console.log(\"Do something here if there is Error!\")\n      console.log(error)\n    }\n  \n    const { isLoading, data, isError, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID), \n      { refetchInterval: 10000000,\n        onError: onError\n      }\n    )\n\n    //Like Post\n    //Edit Post\n    //Delete Post \n\n    const currentPosts = data;\n\n  return (\n  <div className=\"posts\">\n       <p><b> Group Posts </b> </p>\n       <div className = \"post-list\" >\n          { isLoading && <div> loading... </div>}\n          { isError && <div> There was an error fetching the posts { error.message } </div>}\n          {data && currentPosts.map((post) => (console.log(post)))}\n          {data && currentPosts.map((post) => (\n            <IndividualPost post = { post }  currentUser = {currentUser} key = { post.postID }/>\n          ))}\n       </div>\n  </div>\n  );\n  }\n  \nexport default Posts;\n\n\n/*\nimport React, { useState } from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios'\nimport Post from './Post';\n\nvar currentUser = \"davey\"\n\nconst api = axios.create({\n  \n})\n\nasync function getPosts(groupID) {\n  const postURL = 'http://localhost:3003/api/posts';  \n  const { data } = await api.get(postURL)\n  console.log(data)\n  return data\n} \n\n\nfunction WallPosts() {\n    var groupID = 72;\n    const postID = 1;\n \n    const { isLoading, data, isError, error  } = useQuery({\n        queryKey: ['group', groupID],\n        queryFn: () => getPosts(postID),\n        refetchInterval: 10000000 \n      })\n    \n    const currentPosts = data;\n    //console.log(isLoading  + \" \" + isError + \" \" + error)\n  \n    return (\n    <div className=\"posts\">\n        { isLoading && <div> loading... </div>}\n        { isError && <div> There was an error fetching the posts { error.message } </div>}\n        { data && currentPosts.map((post) => (\n            <Post post = { post }  currentUser = {currentUser} key = { post.postID }/>\n        ))}\n    </div>\n    );\n}\n\nexport default WallPosts;\n\n\n*/"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAE9C,MAAMC,YAAY,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC9BC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEJ,eAAeC,QAAQ,CAACC,OAAO,EAAE;EAC7B,MAAMC,YAAY,GAAG,oCAAoC,GAAGD,OAAO;EACnE,MAAME,QAAQ,GAAG,MAAMN,YAAY,CAACO,GAAG,CAACF,YAAY,CAAC;EAErD,OAAOC,QAAQ,CAACE,IAAI;AAExB;AAEA,MAAMC,KAAK,GAAG,QAAe;EAAA;EAAA,IAAd;IAACL;EAAO,CAAC;EACpB,MAAMM,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,yBAAyB,CAAC;EACjE,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;EACzCM,OAAO,CAACC,GAAG,CAAC,qCAAqC,GAAGb,OAAO,CAAC;EAE5D,MAAMc,OAAO,GAAIC,KAAK,IAAK;IACzBH,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IACnDD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACpB,CAAC;EAED,MAAM;IAAEC,SAAS;IAAEZ,IAAI;IAAEa,OAAO;IAAEF;EAAO,CAAC,GAAGtB,QAAQ,CAAC,CAAC,aAAa,EAAEO,OAAO,CAAC,EAAE,MAAMD,QAAQ,CAACC,OAAO,CAAC,EACrG;IAAEkB,eAAe,EAAE,QAAQ;IACzBJ,OAAO,EAAEA;EACX,CAAC,CACF;;EAED;EACA;EACA;;EAEA,MAAMK,YAAY,GAAGf,IAAI;EAE3B,oBACA;IAAK,SAAS,EAAC,OAAO;IAAA,wBACjB;MAAA,wBAAG;QAAA,UAAG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAI,KAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eAC5B;MAAK,SAAS,EAAG,WAAW;MAAA,WACvBY,SAAS,iBAAI;QAAA,UAAK;MAAY;QAAA;QAAA;QAAA;MAAA,QAAM,EACpCC,OAAO,iBAAI;QAAA,WAAK,yCAAuC,EAAEF,KAAK,CAACK,OAAO,EAAE,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,EAChFhB,IAAI,IAAIe,YAAY,CAACE,GAAG,CAAEC,IAAI,IAAMV,OAAO,CAACC,GAAG,CAACS,IAAI,CAAE,CAAC,EACvDlB,IAAI,IAAIe,YAAY,CAACE,GAAG,CAAEC,IAAI,iBAC7B,QAAC,cAAc;QAAC,IAAI,EAAKA,IAAM;QAAE,WAAW,EAAIb;MAAY,GAASa,IAAI,CAACC,MAAM;QAAA;QAAA;QAAA;MAAA,QACjF,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEN,CAAC;AAAA,GAnCGlB,KAAK;EAAA,QAUsCZ,QAAQ;AAAA;AAAA,KAVnDY,KAAK;AAqCX,eAAeA,KAAK;;AAGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAAA"},"metadata":{},"sourceType":"module"}