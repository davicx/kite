{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchBar = _ref => {\n  _s();\n  let {\n    setResults\n  } = _ref;\n  const [input, setInput] = useState(\"\");\n\n  //This filters on front end dont do this normally just fetch correct\n  const fetchData = value => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(json => {\n      const results = json.filter(user => {\n        return value && user && user.name && user.name.toLowerCase().includes(value);\n      });\n      setResults(results);\n      //console.log(results)\n    });\n  };\n\n  const handleChange = value => {\n    setInput(value);\n    fetchData(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n      id: \"search-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Type to search...\",\n      value: input,\n      onChange: e => handleChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n/*\nexport const SearchBar = ({ setResults }) => {\n  const [input, setInput] = useState(\"\");\n\n  const fetchData = (value) => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((json) => {\n        const results = json.filter((user) => {\n          return (\n            value &&\n            user &&\n            user.name &&\n            user.name.toLowerCase().includes(value)\n          );\n        });\n        setResults(results);\n      });\n  };\n\n  const handleChange = (value) => {\n    setInput(value);\n    fetchData(value);\n  };\n\n  return (\n    <div className=\"input-wrapper\">\n      <FaSearch id=\"search-icon\" />\n      <input\n        placeholder=\"Type to search...\"\n        value={input}\n        onChange={(e) => handleChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\n*/\n_s(SearchBar, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","FaSearch","SearchBar","setResults","input","setInput","fetchData","value","fetch","then","response","json","results","filter","user","name","toLowerCase","includes","handleChange","e","target"],"sources":["/Users/david/Desktop/David/www/kite/src/components/playground/tutorials/autoComplete/components/SearchBar.js"],"sourcesContent":["import { useState } from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\n\nexport const SearchBar = ({ setResults }) => {\n  const [input, setInput] = useState(\"\");\n\n  //This filters on front end dont do this normally just fetch correct\n  const fetchData = (value) => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((json) => {\n        const results = json.filter((user) => {\n          return (\n            value &&\n            user &&\n            user.name &&\n            user.name.toLowerCase().includes(value)\n          );\n        });\n        setResults(results);\n        //console.log(results)\n      });\n  };\n\n  const handleChange = (value) => {\n    setInput(value);\n    fetchData(value);\n  };\n\n  return (\n    <div className=\"input-wrapper\">\n      <FaSearch id=\"search-icon\" />\n      <input\n        placeholder=\"Type to search...\"\n        value={input}\n        onChange={(e) => handleChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\n/*\nexport const SearchBar = ({ setResults }) => {\n  const [input, setInput] = useState(\"\");\n\n  const fetchData = (value) => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((json) => {\n        const results = json.filter((user) => {\n          return (\n            value &&\n            user &&\n            user.name &&\n            user.name.toLowerCase().includes(value)\n          );\n        });\n        setResults(results);\n      });\n  };\n\n  const handleChange = (value) => {\n    setInput(value);\n    fetchData(value);\n  };\n\n  return (\n    <div className=\"input-wrapper\">\n      <FaSearch id=\"search-icon\" />\n      <input\n        placeholder=\"Type to search...\"\n        value={input}\n        onChange={(e) => handleChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\n*/"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,gBAAgB;AAAC;AAE1C,OAAO,MAAMC,SAAS,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMM,SAAS,GAAIC,KAAK,IAAK;IAC3BC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAK;MACd,MAAMC,OAAO,GAAGD,IAAI,CAACE,MAAM,CAAEC,IAAI,IAAK;QACpC,OACEP,KAAK,IACLO,IAAI,IACJA,IAAI,CAACC,IAAI,IACTD,IAAI,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACV,KAAK,CAAC;MAE3C,CAAC,CAAC;MACFJ,UAAU,CAACS,OAAO,CAAC;MACnB;IACF,CAAC,CAAC;EACN,CAAC;;EAED,MAAMM,YAAY,GAAIX,KAAK,IAAK;IAC9BF,QAAQ,CAACE,KAAK,CAAC;IACfD,SAAS,CAACC,KAAK,CAAC;EAClB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7B;MACE,WAAW,EAAC,mBAAmB;MAC/B,KAAK,EAAEH,KAAM;MACb,QAAQ,EAAGe,CAAC,IAAKD,YAAY,CAACC,CAAC,CAACC,MAAM,CAACb,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9C;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA,GAtCaL,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}