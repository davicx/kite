{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleAddGroupUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport IndividualGroupUser from './IndividualGroupUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar baseArray = [];\nvar david = {\n  userID: 1,\n  userName: \"david\"\n};\nvar sam = {\n  userID: 2,\n  userName: \"sam\"\n};\nvar frodo = {\n  userID: 3,\n  userName: \"frodo\"\n};\nvar usersArray = [david, sam, frodo];\nconst SimpleAddGroupUsers = _ref => {\n  _s();\n  let {\n    currentUser,\n    api\n  } = _ref;\n  const [newGroupUser, setNewGroupUser] = useLocalStorage('newGroupUser', baseArray);\n  const [users, addUser] = useState(usersArray);\n  const addNewGroupUser = userName => {\n    console.log(\"You are going to add \" + userName);\n\n    //Step 2: Remove User from Current available Friends\n    const newUsers = users.filter(user => user.userName !== userName);\n    addUser(newUsers);\n  };\n\n  //Part 3B: Add a friend from the new group \n  const removeNewGroupUser = userID => {\n    console.log(\"You will remove \" + userID);\n\n    //Step 1: Remove New Group User from Local Storage Array \n    //Step 2: Add User back to available Friends\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simple-border\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Friends you can Add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(IndividualGroupUser, {\n        addNewGroupUser: addNewGroupUser,\n        removeNewGroupUser: removeNewGroupUser,\n        user: user\n      }, user.userName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n_s(SimpleAddGroupUsers, \"/dYjYuC8yzNNXSX5nc0OkGufXrQ=\", false, function () {\n  return [useLocalStorage];\n});\n_c = SimpleAddGroupUsers;\nexport default SimpleAddGroupUsers;\n\n//TEMP CODE\n/*\n\n\n  //localStorage.setItem(\"newGroupUser\", '');\n  //localStorage.getItem(\"temp\");\n  //console.log(theTemp)\n\n          <h4> New Group Users</h4>\n          <div className='simple-border'>\n          {newGroupUser.map((user) => (\n                <p key = {user}> {user } </p>\n            ))} \n            </div>\n\n*/\n\n//BACKUP\n/*\n\nconst SimpleAddGroupUsers= ({ currentUser, api }) => {\n  /*\n  let newGroupUsersLocalStorage = [\"sam\", \"frodo\"] \n  let string = JSON.stringify(students) \n  localStorage.setItem(\"students\", string) \n  */ /*\n        ////\n     // If I have this array:\n     var myArray = [\"david\", \"sam\", \"frodo\"];\n      // and this one:\n     var toRemove = [\"sam\"];\n     myArray = myArray.filter( ( el ) => !toRemove.includes( el ) );\n       console.log(myArray)\n     console.log(toRemove)\n     console.log(myArray)\n     ////\n     useEffect(() => {\n     console.log(\"users\")\n     console.log(users)\n     console.log(\"newGroupUser\")\n     console.log(newGroupUser)\n     let david = {\n       userID: 1,\n       userName: \"david\",\n     }\n     for(let i = 0; i < users.length; i++){\n       console.log(users[i].userName)\n     }\n     //let stillCanAddUsers = users.filter(user => user.userName !== userName);\n       let newUsers = [david]\n     addUser(newUsers)\n     }, [])\n     //PART 1: Local Storage Users \n     let baseArray = []\n     const [newGroupUser, setNewGroupUser] = useLocalStorage('newGroupUser', baseArray)\n     //PART 2: Current Friends (you can add to new group)\n     let david = {\n     userID: 1,\n     userName: \"david\",\n     }\n     let sam = {\n     userID: 2,\n     userName: \"sam\",\n     }\n     let frodo = {\n     userID: 3,\n     userName: \"frodo\",\n     }\n     let usersArray = [david, sam, frodo]\n     const [users, addUser] = useState(usersArray)\n      //PART 3: Actions \n     //Part 3A: Add  a Friend to a new Group\n     const addNewGroupUser = (userName) => {\n     console.log(\"You are going to add \" + userName)\n     \n     //Step 1: Add New Group User to Local Storage Array \n     let currentGroupUserArray = [...newGroupUser];\n     console.log(newGroupUser)\n     console.log(typeof(newGroupUser))\n     console.log(currentGroupUserArray)\n     console.log(typeof(currentGroupUserArray))\n      //let currentGroupUserArray = JSON.parse(newGroupUser);\n     if(!currentGroupUserArray.includes(userName)) {\n       currentGroupUserArray.push(userName)\n        setNewGroupUser(currentGroupUserArray)\n         \n     } else {\n       console.log(\"already in the group\")\n     }\n      \n     /*\n     let retString = localStorage.getItem(\"students\") \n     let retArray = JSON.parse(retString) \n     console.log(retArray); \n     console.log(oldGroupUserArray);\n     oldGroupUserArray.push(userName);\n      let newGroupUserArray = oldGroupUserArray;\n     console.log(newGroupUserArray);\n     setNewGroupUser(newGroupUserArray)\n     */ /*\n        //Step 2: Remove User from Current available Friends\n        const newUsers = users.filter(user => user.userName !== userName);\n        addUser(newUsers)  \n          }\n        //Part 3B: Add a friend from the new group \n        const removeNewGroupUser = (userID) => {\n        console.log(\"You will remove \" + userID)\n        //Step 1: Remove New Group User from Local Storage Array \n        localStorage.getItem(\"temp\");\n         //Step 2: Add User back to available Friends\n        }\n        //localStorage.setItem(\"newGroupUser\", '');\n        //localStorage.getItem(\"temp\");\n        //console.log(theTemp)\n        return (\n        <div> \n            <div className='simple-border'>\n            <h4> Friends you can Add </h4>\n              {users.map((user) => (\n                  <IndividualGroupUser key = { user.userName } addNewGroupUser = {addNewGroupUser} removeNewGroupUser = {removeNewGroupUser} user = {user} />\n              ))} \n            </div>\n            <h4> New Group Users</h4>\n            <div className='simple-border'>\n            {newGroupUser.map((user) => (\n                  <p key = {user}> {user } </p>\n              ))} \n              </div>\n         </div>\n        );\n        }\n        export default SimpleAddGroupUsers;\n        */\n\n//APPENDIX\n/*\nconst SimpleAddLocalStorage = () => {\n    const [isChecked, setIsChecked] = useState(false);\n  \n    //POST AREA\n    const handleChange = (event) => {\n      const { name, value } = event.target\n      console.log(value)\n      console.log(name)\n  \n      setIsChecked(!isChecked);\n    }\n  \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"hi\")\n    }\n  \n    return (\n      <div className=\"user\">\n          <form onSubmit={ handleSubmit }>\n          <div className=\"topping\">\n          <input type=\"checkbox\" id=\"user\" name=\"user\" value=\"Sam\" checked={isChecked} onChange={handleChange} /> Sam\n        </div>\n            <p> is checked: {isChecked ? \"checked\" : \"un-checked\"}</p>\n            <button type=\"submit\"> Submit </button>\n          </form>\n      </div>\n    );\n}\n\nexport default SimpleAddLocalStorage;\n*/\nvar _c;\n$RefreshReg$(_c, \"SimpleAddGroupUsers\");","map":{"version":3,"names":["React","useState","useEffect","useLocalStorage","IndividualGroupUser","baseArray","david","userID","userName","sam","frodo","usersArray","SimpleAddGroupUsers","currentUser","api","newGroupUser","setNewGroupUser","users","addUser","addNewGroupUser","console","log","newUsers","filter","user","removeNewGroupUser","map"],"sources":["/Users/david/Desktop/David/www/kite/src/components/playground/SimpleAddGroupUser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport IndividualGroupUser from './IndividualGroupUser';\n\nvar baseArray = []\nvar david = {\n  userID: 1,\n  userName: \"david\",\n}\nvar sam = {\n  userID: 2,\n  userName: \"sam\",\n}\nvar frodo = {\n  userID: 3,\n  userName: \"frodo\",\n}\n\nvar usersArray = [david, sam, frodo]\n\n\nconst SimpleAddGroupUsers= ({ currentUser, api }) => {\n  const [newGroupUser, setNewGroupUser] = useLocalStorage('newGroupUser', baseArray)\n  const [users, addUser] = useState(usersArray)\n  \n\n  const addNewGroupUser = (userName) => {\n    console.log(\"You are going to add \" + userName)\n    \n    //Step 2: Remove User from Current available Friends\n    const newUsers = users.filter(user => user.userName !== userName);\n    addUser(newUsers)  \n    \n\n  }\n\n  //Part 3B: Add a friend from the new group \n  const removeNewGroupUser = (userID) => {\n      console.log(\"You will remove \" + userID)\n\n      //Step 1: Remove New Group User from Local Storage Array \n      //Step 2: Add User back to available Friends\n  }\n\n  return (\n      <div> \n          <div className='simple-border'>\n          <h4> Friends you can Add </h4>\n            {users.map((user) => (\n                <IndividualGroupUser key = { user.userName } addNewGroupUser = {addNewGroupUser} removeNewGroupUser = {removeNewGroupUser} user = {user} />\n            ))} \n          </div>\n\n      </div>\n  );\n}\n\n\nexport default SimpleAddGroupUsers;\n\n\n//TEMP CODE\n/*\n\n\n  //localStorage.setItem(\"newGroupUser\", '');\n  //localStorage.getItem(\"temp\");\n  //console.log(theTemp)\n\n          <h4> New Group Users</h4>\n          <div className='simple-border'>\n          {newGroupUser.map((user) => (\n                <p key = {user}> {user } </p>\n            ))} \n            </div>\n\n*/\n\n\n//BACKUP\n/*\n\nconst SimpleAddGroupUsers= ({ currentUser, api }) => {\n  /*\n  let newGroupUsersLocalStorage = [\"sam\", \"frodo\"] \n  let string = JSON.stringify(students) \n  localStorage.setItem(\"students\", string) \n  *//*\n       ////\n    // If I have this array:\n    var myArray = [\"david\", \"sam\", \"frodo\"];\n\n    // and this one:\n    var toRemove = [\"sam\"];\n    myArray = myArray.filter( ( el ) => !toRemove.includes( el ) );\n\n\n    console.log(myArray)\n    console.log(toRemove)\n    console.log(myArray)\n    ////\n\n\n  useEffect(() => {\n    console.log(\"users\")\n    console.log(users)\n    console.log(\"newGroupUser\")\n    console.log(newGroupUser)\n    let david = {\n      userID: 1,\n      userName: \"david\",\n    }\n    for(let i = 0; i < users.length; i++){\n      console.log(users[i].userName)\n   }\n    //let stillCanAddUsers = users.filter(user => user.userName !== userName);\n\n\n    let newUsers = [david]\n    addUser(newUsers)\n\n\n  }, [])\n\n  //PART 1: Local Storage Users \n  let baseArray = []\n  const [newGroupUser, setNewGroupUser] = useLocalStorage('newGroupUser', baseArray)\n\n  //PART 2: Current Friends (you can add to new group)\n  let david = {\n    userID: 1,\n    userName: \"david\",\n  }\n  let sam = {\n    userID: 2,\n    userName: \"sam\",\n  }\n  let frodo = {\n    userID: 3,\n    userName: \"frodo\",\n  }\n\n  let usersArray = [david, sam, frodo]\n\n  const [users, addUser] = useState(usersArray)\n  \n  //PART 3: Actions \n  //Part 3A: Add  a Friend to a new Group\n  const addNewGroupUser = (userName) => {\n    console.log(\"You are going to add \" + userName)\n    \n    //Step 1: Add New Group User to Local Storage Array \n    let currentGroupUserArray = [...newGroupUser];\n    console.log(newGroupUser)\n    console.log(typeof(newGroupUser))\n    console.log(currentGroupUserArray)\n    console.log(typeof(currentGroupUserArray))\n\n    //let currentGroupUserArray = JSON.parse(newGroupUser);\n    if(!currentGroupUserArray.includes(userName)) {\n      currentGroupUserArray.push(userName)\n\n      setNewGroupUser(currentGroupUserArray)\n        \n    } else {\n      console.log(\"already in the group\")\n    }\n\n    \n    /*\n    let retString = localStorage.getItem(\"students\") \n    let retArray = JSON.parse(retString) \n    console.log(retArray); \n    console.log(oldGroupUserArray);\n    oldGroupUserArray.push(userName);\n\n    let newGroupUserArray = oldGroupUserArray;\n    console.log(newGroupUserArray);\n    setNewGroupUser(newGroupUserArray)\n    *//*\n\n    //Step 2: Remove User from Current available Friends\n    const newUsers = users.filter(user => user.userName !== userName);\n    addUser(newUsers)  \n    \n\n  }\n\n  //Part 3B: Add a friend from the new group \n  const removeNewGroupUser = (userID) => {\n      console.log(\"You will remove \" + userID)\n      //Step 1: Remove New Group User from Local Storage Array \n      localStorage.getItem(\"temp\");\n\n      //Step 2: Add User back to available Friends\n  \n  }\n\n\n  //localStorage.setItem(\"newGroupUser\", '');\n  //localStorage.getItem(\"temp\");\n  //console.log(theTemp)\n\n  return (\n      <div> \n          <div className='simple-border'>\n          <h4> Friends you can Add </h4>\n            {users.map((user) => (\n                <IndividualGroupUser key = { user.userName } addNewGroupUser = {addNewGroupUser} removeNewGroupUser = {removeNewGroupUser} user = {user} />\n            ))} \n          </div>\n          <h4> New Group Users</h4>\n          <div className='simple-border'>\n          {newGroupUser.map((user) => (\n                <p key = {user}> {user } </p>\n            ))} \n            </div>\n\n      </div>\n  );\n}\n\n\nexport default SimpleAddGroupUsers;\n\n*/\n\n\n//APPENDIX\n/*\nconst SimpleAddLocalStorage = () => {\n    const [isChecked, setIsChecked] = useState(false);\n  \n    //POST AREA\n    const handleChange = (event) => {\n      const { name, value } = event.target\n      console.log(value)\n      console.log(name)\n  \n      setIsChecked(!isChecked);\n    }\n  \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"hi\")\n    }\n  \n    return (\n      <div className=\"user\">\n          <form onSubmit={ handleSubmit }>\n          <div className=\"topping\">\n          <input type=\"checkbox\" id=\"user\" name=\"user\" value=\"Sam\" checked={isChecked} onChange={handleChange} /> Sam\n        </div>\n            <p> is checked: {isChecked ? \"checked\" : \"un-checked\"}</p>\n            <button type=\"submit\"> Submit </button>\n          </form>\n      </div>\n    );\n}\n\nexport default SimpleAddLocalStorage;\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC;AAExD,IAAIC,SAAS,GAAG,EAAE;AAClB,IAAIC,KAAK,GAAG;EACVC,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE;AACZ,CAAC;AACD,IAAIC,GAAG,GAAG;EACRF,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE;AACZ,CAAC;AACD,IAAIE,KAAK,GAAG;EACVH,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE;AACZ,CAAC;AAED,IAAIG,UAAU,GAAG,CAACL,KAAK,EAAEG,GAAG,EAAEC,KAAK,CAAC;AAGpC,MAAME,mBAAmB,GAAE,QAA0B;EAAA;EAAA,IAAzB;IAAEC,WAAW;IAAEC;EAAI,CAAC;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,eAAe,CAAC,cAAc,EAAEE,SAAS,CAAC;EAClF,MAAM,CAACY,KAAK,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAACU,UAAU,CAAC;EAG7C,MAAMQ,eAAe,GAAIX,QAAQ,IAAK;IACpCY,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGb,QAAQ,CAAC;;IAE/C;IACA,MAAMc,QAAQ,GAAGL,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAChB,QAAQ,KAAKA,QAAQ,CAAC;IACjEU,OAAO,CAACI,QAAQ,CAAC;EAGnB,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAIlB,MAAM,IAAK;IACnCa,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGd,MAAM,CAAC;;IAExC;IACA;EACJ,CAAC;;EAED,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC9B;QAAA,UAAI;MAAqB;QAAA;QAAA;QAAA;MAAA,QAAK,EAC3BU,KAAK,CAACS,GAAG,CAAEF,IAAI,iBACZ,QAAC,mBAAmB;QAAyB,eAAe,EAAIL,eAAgB;QAAC,kBAAkB,EAAIM,kBAAmB;QAAC,IAAI,EAAID;MAAK,GAA3GA,IAAI,CAAChB,QAAQ;QAAA;QAAA;QAAA;MAAA,QAC7C,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEZ,CAAC;AAAA,GAlCKI,mBAAmB;EAAA,QACiBT,eAAe;AAAA;AAAA,KADnDS,mBAAmB;AAqCzB,eAAeA,mBAAmB;;AAGlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAPA,CAOI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OA1EI,CA4FE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAAA"},"metadata":{},"sourceType":"module"}