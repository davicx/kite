{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleClickParent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport useUpdateLogger from '../../hooks/useUpdateLogger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleClickParent = _ref => {\n  _s();\n  let {\n    currentUser,\n    api\n  } = _ref;\n  let david = {\n    userID: 1,\n    userName: \"david\"\n  };\n  let sam = {\n    userID: 2,\n    userName: \"sam\"\n  };\n  let frodo = {\n    userID: 3,\n    userName: \"frodo\"\n  };\n  let usersArray = [david, sam, frodo];\n  const [users, addUser] = useState(usersArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", user.userName]\n    }, user.userID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n_s(SimpleClickParent, \"vI2iBAhDG9zFkVwSJkAaCufeX+k=\");\n_c = SimpleClickParent;\nexport default SimpleClickParent;\nvar _c;\n$RefreshReg$(_c, \"SimpleClickParent\");","map":{"version":3,"names":["React","useState","useLocalStorage","useUpdateLogger","SimpleClickParent","currentUser","api","david","userID","userName","sam","frodo","usersArray","users","addUser","map","user"],"sources":["/Users/david/Desktop/David/www/kite/src/components/playground/SimpleClickParent.js"],"sourcesContent":["import React, { useState } from 'react'\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport useUpdateLogger from '../../hooks/useUpdateLogger';\n\nconst SimpleClickParent = ({ currentUser, api }) => {\n  let david = {\n    userID: 1,\n    userName: \"david\",\n  }\n  let sam = {\n    userID: 2,\n    userName: \"sam\",\n  }\n  let frodo = {\n    userID: 3,\n    userName: \"frodo\",\n  }\n\n  let usersArray = [david, sam, frodo]\n\n  const [users, addUser] = useState(usersArray)\n\n  return (\n      <div> \n          {users.map((user) => (\n              <p key = { user.userID }> {user.userName}</p>\n          ))} \n      </div>\n  );\n}\n\n\nexport default SimpleClickParent;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,eAAe,MAAM,6BAA6B;AAAC;AAE1D,MAAMC,iBAAiB,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAAEC,WAAW;IAAEC;EAAI,CAAC;EAC7C,IAAIC,KAAK,GAAG;IACVC,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE;EACZ,CAAC;EACD,IAAIC,GAAG,GAAG;IACRF,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE;EACZ,CAAC;EACD,IAAIE,KAAK,GAAG;IACVH,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE;EACZ,CAAC;EAED,IAAIG,UAAU,GAAG,CAACL,KAAK,EAAEG,GAAG,EAAEC,KAAK,CAAC;EAEpC,MAAM,CAACE,KAAK,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACW,UAAU,CAAC;EAE7C,oBACI;IAAA,UACKC,KAAK,CAACE,GAAG,CAAEC,IAAI,iBACZ;MAAA,WAAyB,GAAC,EAACA,IAAI,CAACP,QAAQ;IAAA,GAA7BO,IAAI,CAACR,MAAM;MAAA;MAAA;MAAA;IAAA,QACzB;EAAC;IAAA;IAAA;IAAA;EAAA,QACA;AAEZ,CAAC;AAAA,GAzBKJ,iBAAiB;AAAA,KAAjBA,iBAAiB;AA4BvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}