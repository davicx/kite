{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/posts/actions/DeletePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({});\nasync function deletePostAPI(deletePost) {\n  const postURL = \"http://localhost:3003/post/delete/\";\n  const response = await axios.post(postURL, deletePost);\n  console.log(response.data);\n  return response.data;\n}\nconst DeletePost = _ref => {\n  _s();\n  let {\n    currentUser,\n    postID\n  } = _ref;\n  const queryClient = useQueryClient();\n  const handleDeletePost = (postID, currentUser) => {\n    var deletePost = {\n      postID: postID,\n      currentUser: currentUser\n    };\n    //mutate(likedPost) \n  };\n\n  const {\n    isLoading,\n    mutate\n  } = useMutation(deletePostAPI, {\n    onSuccess: returnedData => {\n      queryClient.setQueryData(['group-posts', groupID], originalQueryData => {\n        console.log(returnedData);\n        //STEP 1: Get post ID of updated post and new like array \n        var updatedQueryData = structuredClone(originalQueryData);\n        const postID = returnedData.postID;\n        const currentUser = returnedData.currentUser;\n        for (let i = 0; i < updatedQueryData.length; i++) {\n          if (updatedQueryData[i].postID == postID) {\n            var postLike = returnedData.newLike[0];\n\n            //Create the new array of users who have liked this\n            updatedQueryData[i].postLikesArray.push(postLike);\n            updatedQueryData[i].simpleLikesArray.push(currentUser);\n            updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length;\n          }\n        }\n        return updatedQueryData;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"\",\n      onClick: () => {\n        handleDeletePost(currentUser, postID);\n      },\n      children: \"Delete Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(DeletePost, \"sG6dR2SYHBppzfZZ0/U+hBJTR78=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = DeletePost;\nexport default DeletePost;\n\n/*\nfunction LikePost({groupID, post, currentUser}) {\n\n\n\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n*/\nvar _c;\n$RefreshReg$(_c, \"DeletePost\");","map":{"version":3,"names":["React","useState","useMutation","useQueryClient","axios","api","create","deletePostAPI","deletePost","postURL","response","post","console","log","data","DeletePost","currentUser","postID","queryClient","handleDeletePost","isLoading","mutate","onSuccess","returnedData","setQueryData","groupID","originalQueryData","updatedQueryData","structuredClone","i","length","postLike","newLike","postLikesArray","push","simpleLikesArray","totalLikes"],"sources":["/Users/david/Desktop/David/www/kite/src/components/posts/actions/DeletePost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n\n})\n\nasync function deletePostAPI(deletePost) {\n    const postURL = \"http://localhost:3003/post/delete/\"\n    const response = await axios.post(postURL, deletePost);\n    console.log(response.data)\n  \n    return response.data;\n  } \n  \n\nconst DeletePost = ({ currentUser, postID}) => {\n    const queryClient = useQueryClient();\n  \n    const handleDeletePost = (postID, currentUser) => {\n      var deletePost = {\n          postID: postID,\n          currentUser: currentUser   \n      }\n      //mutate(likedPost) \n    }\n\n    const { isLoading, mutate } = useMutation(deletePostAPI, {\n        onSuccess: (returnedData) => {\n\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n            console.log(returnedData)\n            //STEP 1: Get post ID of updated post and new like array \n            var updatedQueryData = structuredClone(originalQueryData);\n            const postID = returnedData.postID;\n            const currentUser = returnedData.currentUser;\n    \n            for (let i = 0; i < updatedQueryData.length; i++) {\n    \n                if(updatedQueryData[i].postID == postID) {\n    \n                    var postLike = returnedData.newLike[0];\n    \n                    //Create the new array of users who have liked this\n                    updatedQueryData[i].postLikesArray.push(postLike)\n                    updatedQueryData[i].simpleLikesArray.push(currentUser)\n                    updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n    \n                }\n            }\n    \n                return updatedQueryData;\n    \n            })\n                \n        }\n      })\n\n    return (     \n        <div className=\"\" >\n            <button type=\"submit\" className = \"\" onClick={() => { handleDeletePost(currentUser, postID) }}>Delete Me</button>                 \n        </div>       \n        );\n    }  \n\nexport default DeletePost;\n\n/*\nfunction LikePost({groupID, post, currentUser}) {\n\n\n\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n*/\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC,CAEzB,CAAC,CAAC;AAEF,eAAeC,aAAa,CAACC,UAAU,EAAE;EACrC,MAAMC,OAAO,GAAG,oCAAoC;EACpD,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACF,OAAO,EAAED,UAAU,CAAC;EACtDI,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAE1B,OAAOJ,QAAQ,CAACI,IAAI;AACtB;AAGF,MAAMC,UAAU,GAAG,QAA4B;EAAA;EAAA,IAA3B;IAAEC,WAAW;IAAEC;EAAM,CAAC;EACtC,MAAMC,WAAW,GAAGf,cAAc,EAAE;EAEpC,MAAMgB,gBAAgB,GAAG,CAACF,MAAM,EAAED,WAAW,KAAK;IAChD,IAAIR,UAAU,GAAG;MACbS,MAAM,EAAEA,MAAM;MACdD,WAAW,EAAEA;IACjB,CAAC;IACD;EACF,CAAC;;EAED,MAAM;IAAEI,SAAS;IAAEC;EAAO,CAAC,GAAGnB,WAAW,CAACK,aAAa,EAAE;IACrDe,SAAS,EAAGC,YAAY,IAAK;MAE3BL,WAAW,CAACM,YAAY,CAAC,CAAC,aAAa,EAAEC,OAAO,CAAC,EAAGC,iBAAiB,IAAK;QACxEd,OAAO,CAACC,GAAG,CAACU,YAAY,CAAC;QACzB;QACA,IAAII,gBAAgB,GAAGC,eAAe,CAACF,iBAAiB,CAAC;QACzD,MAAMT,MAAM,GAAGM,YAAY,CAACN,MAAM;QAClC,MAAMD,WAAW,GAAGO,YAAY,CAACP,WAAW;QAE5C,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,gBAAgB,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;UAE9C,IAAGF,gBAAgB,CAACE,CAAC,CAAC,CAACZ,MAAM,IAAIA,MAAM,EAAE;YAErC,IAAIc,QAAQ,GAAGR,YAAY,CAACS,OAAO,CAAC,CAAC,CAAC;;YAEtC;YACAL,gBAAgB,CAACE,CAAC,CAAC,CAACI,cAAc,CAACC,IAAI,CAACH,QAAQ,CAAC;YACjDJ,gBAAgB,CAACE,CAAC,CAAC,CAACM,gBAAgB,CAACD,IAAI,CAAClB,WAAW,CAAC;YACtDW,gBAAgB,CAACE,CAAC,CAAC,CAACO,UAAU,GAAGT,gBAAgB,CAACE,CAAC,CAAC,CAACM,gBAAgB,CAACL,MAAM;UAEhF;QACJ;QAEI,OAAOH,gBAAgB;MAE3B,CAAC,CAAC;IAEN;EACF,CAAC,CAAC;EAEJ,oBACI;IAAK,SAAS,EAAC,EAAE;IAAA,uBACb;MAAQ,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAG,EAAE;MAAC,OAAO,EAAE,MAAM;QAAER,gBAAgB,CAACH,WAAW,EAAEC,MAAM,CAAC;MAAC,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QAC/G;AAEV,CAAC;AAAA,GA/CCF,UAAU;EAAA,QACQZ,cAAc,EAUJD,WAAW;AAAA;AAAA,KAXvCa,UAAU;AAiDhB,eAAeA,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA"},"metadata":{},"sourceType":"module"}