{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/users/display/AllUsers.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport SimpleProfile from './SimpleProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getAllUsers(api, currentUser) {\n  const allUsersURL = \"http://localhost:3003/users/all/\" + currentUser;\n  const {\n    data\n  } = await api.get(allUsersURL);\n  return data;\n}\nconst AllUsers = props => {\n  _s();\n  const currentUser = props.currentUser;\n  const api = props.api;\n  const {\n    isLoading,\n    data,\n    isError,\n    error\n  } = useQuery(['all-users'], () => getAllUsers(api, currentUser), {\n    refetchInterval: 10000000\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" All Users \", currentUser, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 28\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" There was an error fetching the posts \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }, this), data && console.log(data), data && data.data.map(friend => /*#__PURE__*/_jsxDEV(SimpleProfile, {\n      api: api,\n      friend: friend,\n      currentUser: currentUser\n    }, friend.userName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(AllUsers, \"20VnH7aHnyusuHUg2Uycf4IaPvo=\", false, function () {\n  return [useQuery];\n});\n_c = AllUsers;\nexport default AllUsers;\n\n/*\n              {data && data.data.map((friend) => (\n                console.log(friend)\n             ))}\n            <SimpleProfile />\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\n\nimport SimpleProfile from '../users/display/SimpleProfile';\n\nconst MyFriends = (props) => {\n    const currentUser = props.currentUser;\n    const api = props.api;\n\n    const { isLoading, data, isError, error  } = useQuery(['your-friends', currentUser], () => getYourFriends(currentUser, api), \n        { refetchInterval: 10000000 }\n    )\n\n    return (\n        <div>\n            { isLoading && <div> loading... </div>}\n            { isError && <div> There was an error fetching the posts { error.message } </div>}\n            { data && console.log(data.friendsArray)}\n            <p> My Friends {currentUser}  </p>\n            {data && data.friendsArray.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.friendID }/>\n             ))}\n        </div>\n    )\n}\n\nexport default MyFriends;\n*/\n\n/*\n//import apiFunctions from '../functions/apiFunctions';\n//import useLoginStatus from '../functions/hooks/useLoginStatus';\n\n//const axiosRequest = apiFunctions.getAPI();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\n//import  functions from \"../../functions/functions\";\n//import useHello from '../../functions/hooks/useHello';\n\nasync function getGroups(currentUser, api) {\n  if(currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n   \n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser; \n  const { data } = await api.get(groupURL)\n\n  return data\n} \n\n\nconst GroupList = (props) => {\n  //console.log(\"COMPONENT: GroupsList\")  \n  const currentUser = props.currentUser;\n  const api = props.api;\n  \n  //const { hello} = useHello();\n\n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser, api), \n    { refetchInterval: 10000000 }\n  )\n\n  var groups = data;\n\n  return (\n  <div className=\"groups\">\n      { isLoading && <div> loading... </div>}\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\n      { data && console.log()}\n      {data && groups.groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n          </div>\n      ))}\n  </div>\n  );\n  }\n  \nexport default GroupList;\n*/\nvar _c;\n$RefreshReg$(_c, \"AllUsers\");","map":{"version":3,"names":["React","useQuery","SimpleProfile","getAllUsers","api","currentUser","allUsersURL","data","get","AllUsers","props","isLoading","isError","error","refetchInterval","message","console","log","map","friend","userName"],"sources":["/Users/david/Desktop/David/www/kite/src/components/users/display/AllUsers.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from \"react-query\";\nimport SimpleProfile from './SimpleProfile';\n\nasync function getAllUsers(api, currentUser) {\n  const allUsersURL = \"http://localhost:3003/users/all/\" + currentUser; \n  const { data } = await api.get(allUsersURL)\n\n  return data\n} \n\nconst AllUsers = (props) => {\n    const currentUser = props.currentUser;\n    const api = props.api;\n\n    const { isLoading, data, isError, error  } = useQuery(['all-users'], () => getAllUsers(api, currentUser), \n    { refetchInterval: 10000000 }\n  )\n\n    return (\n        <div>\n            <p> All Users {currentUser} </p>\n            { isLoading && <div> loading... </div>}\n            { isError && <div> There was an error fetching the posts { error.message } </div>}\n            { data && console.log(data)}\n            {data && data.data.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.userName }/>\n             ))}\n\n\n        </div>\n    )\n}\n\nexport default AllUsers;\n\n\n/*\n              {data && data.data.map((friend) => (\n                console.log(friend)\n             ))}\n            <SimpleProfile />\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\n\nimport SimpleProfile from '../users/display/SimpleProfile';\n\nconst MyFriends = (props) => {\n    const currentUser = props.currentUser;\n    const api = props.api;\n\n    const { isLoading, data, isError, error  } = useQuery(['your-friends', currentUser], () => getYourFriends(currentUser, api), \n        { refetchInterval: 10000000 }\n    )\n\n    return (\n        <div>\n            { isLoading && <div> loading... </div>}\n            { isError && <div> There was an error fetching the posts { error.message } </div>}\n            { data && console.log(data.friendsArray)}\n            <p> My Friends {currentUser}  </p>\n            {data && data.friendsArray.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.friendID }/>\n             ))}\n        </div>\n    )\n}\n\nexport default MyFriends;\n*/\n\n\n/*\n//import apiFunctions from '../functions/apiFunctions';\n//import useLoginStatus from '../functions/hooks/useLoginStatus';\n\n//const axiosRequest = apiFunctions.getAPI();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link } from 'react-router-dom';\n//import  functions from \"../../functions/functions\";\n//import useHello from '../../functions/hooks/useHello';\n\nasync function getGroups(currentUser, api) {\n  if(currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n   \n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser; \n  const { data } = await api.get(groupURL)\n\n  return data\n} \n\n\nconst GroupList = (props) => {\n  //console.log(\"COMPONENT: GroupsList\")  \n  const currentUser = props.currentUser;\n  const api = props.api;\n  \n  //const { hello} = useHello();\n\n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser, api), \n    { refetchInterval: 10000000 }\n  )\n\n  var groups = data;\n\n  return (\n  <div className=\"groups\">\n      { isLoading && <div> loading... </div>}\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\n      { data && console.log()}\n      {data && groups.groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n          </div>\n      ))}\n  </div>\n  );\n  }\n  \nexport default GroupList;\n*/"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,eAAeC,WAAW,CAACC,GAAG,EAAEC,WAAW,EAAE;EAC3C,MAAMC,WAAW,GAAG,kCAAkC,GAAGD,WAAW;EACpE,MAAM;IAAEE;EAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAACF,WAAW,CAAC;EAE3C,OAAOC,IAAI;AACb;AAEA,MAAME,QAAQ,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAML,WAAW,GAAGK,KAAK,CAACL,WAAW;EACrC,MAAMD,GAAG,GAAGM,KAAK,CAACN,GAAG;EAErB,MAAM;IAAEO,SAAS;IAAEJ,IAAI;IAAEK,OAAO;IAAEC;EAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,MAAME,WAAW,CAACC,GAAG,EAAEC,WAAW,CAAC,EACxG;IAAES,eAAe,EAAE;EAAS,CAAC,CAC9B;EAEC,oBACI;IAAA,wBACI;MAAA,WAAG,aAAW,EAACT,WAAW,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,EAC9BM,SAAS,iBAAI;MAAA,UAAK;IAAY;MAAA;MAAA;MAAA;IAAA,QAAM,EACpCC,OAAO,iBAAI;MAAA,WAAK,yCAAuC,EAAEC,KAAK,CAACE,OAAO,EAAE,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EAC/ER,IAAI,IAAIS,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC,EAC1BA,IAAI,IAAIA,IAAI,CAACA,IAAI,CAACW,GAAG,CAAEC,MAAM,iBAC1B,QAAC,aAAa;MAAC,GAAG,EAAKf,GAAK;MAAC,MAAM,EAAKe,MAAQ;MAAC,WAAW,EAAId;IAAY,GAASc,MAAM,CAACC,QAAQ;MAAA;MAAA;MAAA;IAAA,QACtG,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAGD;AAEd,CAAC;AAAA,GArBKX,QAAQ;EAAA,QAImCR,QAAQ;AAAA;AAAA,KAJnDQ,QAAQ;AAuBd,eAAeA,QAAQ;;AAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AAAA"},"metadata":{},"sourceType":"module"}