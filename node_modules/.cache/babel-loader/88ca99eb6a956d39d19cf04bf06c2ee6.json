{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBlockScoped;\nvar _generated = require(\"./generated\");\nvar _isLet = require(\"./isLet\");\nfunction isBlockScoped(node) {\n  return (0, _generated.isFunctionDeclaration)(node) || (0, _generated.isClassDeclaration)(node) || (0, _isLet.default)(node);\n}","map":{"version":3,"sources":["../../src/validators/isBlockScoped.ts"],"names":["isBlockScoped","node"],"mappings":";;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAMe,SAASA,aAAa,CAACC,IAAY,EAAW;EAC3D,OAAO,CAAA,CAAA,EAAA,UAAA,CAAA,qBAAqB,EAACA,IAAI,CAAC,IAAI,CAAA,CAAA,EAAA,UAAA,CAAA,kBAAkB,EAACA,IAAI,CAAC,IAAI,CAAA,CAAA,EAAA,MAAA,CAAA,OAAK,EAACA,IAAI,CAAC;AAC/E","sourcesContent":["import { isClassDeclaration, isFunctionDeclaration } from \"./generated\";\nimport isLet from \"./isLet\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is block scoped.\n */\nexport default function isBlockScoped(node: t.Node): boolean {\n  return isFunctionDeclaration(node) || isClassDeclaration(node) || isLet(node);\n}\n"]},"metadata":{},"sourceType":"script"}