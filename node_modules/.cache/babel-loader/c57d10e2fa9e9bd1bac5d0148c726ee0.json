{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/login/LogoutUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\nimport { useNavigate } from \"react-router-dom\"; //import { LoggedInContext } from \"../../functions/context/LoggedInContext\";\n\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosRequest = axios.create({\n  withCredentials: true\n});\n\nfunction LogoutUser() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    currentUser,\n    setLoginState\n  } = useContext(LoginContext);\n  const logoutURL = \"http://localhost:3003/logout\"; //const { userLoggedIn, setUserLoggedIn} = useContext(LoggedInContext);\n\n  function logout() {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const userName = JSON.parse(data);\n    console.log(\"you are loggin out\" + userName); //STEP 1: Call Logout API\n    //STEP 2: Success\n\n    axiosRequest.post(logoutURL, {\n      userName: userName,\n      refreshToken: \"token\"\n    }).then(function (response) {\n      console.log(response.data); //setLoginStatus(\"nobody logged in!\");\n\n      if (response.data.userLoggedIn != \"notLoggedIn\") {\n        let loginStatusMessage = response.data.userName + \" is currently logged in!\";\n        console.log(loginStatusMessage); //setLoginStatus(loginStatusMessage);\n      } else {\n        let loginStatusMessage = \"nobody logged in!\";\n        console.log(loginStatusMessage); //setLoginStatus(loginStatusMessage);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    }); //Step 2A: Set local storage  \n\n    localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\")); //Step 2B: Set context\n\n    setLoginState('null'); //setUserLoggedIn(false)\n    //Step 2C: Redirect to Login\n\n    navigate(\"/login\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"holder\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"LOGOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"loginButton\",\n      onClick: () => logout(),\n      children: \" Logout \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LogoutUser, \"/m04jVNjoMR7Ll/yb3kTURRWs4Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LogoutUser;\nexport default LogoutUser;\n/*\nimport React, { Component, useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\n\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      console.log(\"you are checking on \" + userInputName )\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        \n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"LogoutUser\");","map":{"version":3,"sources":["/Users/david/Desktop/David/www/kite/src/components/login/LogoutUser.js"],"names":["React","useContext","LoginContext","useNavigate","axios","axiosRequest","create","withCredentials","LogoutUser","navigate","currentUser","setLoginState","logoutURL","logout","data","localStorage","getItem","userName","JSON","parse","console","log","post","refreshToken","then","response","userLoggedIn","loginStatusMessage","catch","error","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAa;AAChCC,EAAAA,eAAe,EAAE;AADe,CAAb,CAArB;;AAIA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAgCV,UAAU,CAACC,YAAD,CAAhD;AACA,QAAMU,SAAS,GAAG,8BAAlB,CAHoB,CAIpB;;AAEE,WAASC,MAAT,GAAkB;AACd,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,yBAArB,CAAb;AACA,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAjB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBJ,QAAnC,EAHc,CAId;AAEA;;AACAZ,IAAAA,YAAY,CAACiB,IAAb,CAAkBV,SAAlB,EAA6B;AAC3BK,MAAAA,QAAQ,EAAEA,QADiB;AAE3BM,MAAAA,YAAY,EAAE;AAFa,KAA7B,EAICC,IAJD,CAIM,UAAUC,QAAV,EAAoB;AACxBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACX,IAArB,EADwB,CAExB;;AAEA,UAAGW,QAAQ,CAACX,IAAT,CAAcY,YAAd,IAA8B,aAAjC,EAA+C;AAC7C,YAAIC,kBAAkB,GAAGF,QAAQ,CAACX,IAAT,CAAcG,QAAd,GAAyB,0BAAlD;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYM,kBAAZ,EAF6C,CAG7C;AAED,OALD,MAKO;AACL,YAAIA,kBAAkB,GAAG,mBAAzB;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYM,kBAAZ,EAFK,CAGL;AACD;AAEF,KAnBD,EAoBCC,KApBD,CAoBO,UAAUC,KAAV,EAAiB;AACtBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,KAtBD,EAPc,CA+Bd;;AACAd,IAAAA,YAAY,CAACe,OAAb,CAAqB,yBAArB,EAAgDZ,IAAI,CAACa,SAAL,CAAe,MAAf,CAAhD,EAhCc,CAkCd;;AACApB,IAAAA,aAAa,CAAC,MAAD,CAAb,CAnCc,CAoCd;AAGA;;AACAF,IAAAA,QAAQ,CAAC,QAAD,CAAR;AAEH;;AAED,sBACA;AAAK,IAAA,SAAS,EAAG,QAAjB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAE,MAAMI,MAAM,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMH;;GAxDQL,U;UACUL,W;;;KADVK,U;AA2DT,eAAeA,UAAfsourcesContent":["import React, { useContext } from 'react';\nimport { LoginContext } from \"../../functions/context/LoginContext\";\nimport { useNavigate } from \"react-router-dom\";\n//import { LoggedInContext } from \"../../functions/context/LoggedInContext\";\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\nfunction LogoutUser() {\n  const navigate = useNavigate();\n  const { currentUser, setLoginState} = useContext(LoginContext);\n  const logoutURL = \"http://localhost:3003/logout\"\n  //const { userLoggedIn, setUserLoggedIn} = useContext(LoggedInContext);\n        \n    function logout() {\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const userName = JSON.parse(data);\n        console.log(\"you are loggin out\" + userName )\n        //STEP 1: Call Logout API\n\n        //STEP 2: Success\n        axiosRequest.post(logoutURL, {\n          userName: userName,\n          refreshToken: \"token\"\n        })\n        .then(function (response) {\n          console.log(response.data)\n          //setLoginStatus(\"nobody logged in!\");\n          \n          if(response.data.userLoggedIn != \"notLoggedIn\"){\n            let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n            console.log(loginStatusMessage)\n            //setLoginStatus(loginStatusMessage);\n  \n          } else {\n            let loginStatusMessage = \"nobody logged in!\"\n            console.log(loginStatusMessage)\n            //setLoginStatus(loginStatusMessage);\n          }\n          \n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n        //Step 2A: Set local storage  \n        localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\"));   \n      \n        //Step 2B: Set context\n        setLoginState('null')\n        //setUserLoggedIn(false)\n\n    \n        //Step 2C: Redirect to Login\n        navigate(\"/login\");\n        \n    }\n    \n    return (\n    <div className = \"holder\">\n        <p>LOGOUT</p>\n        <button className=\"loginButton\" onClick={() => logout() }> Logout </button>\n      </div>\n    );\n}\n\n\nexport default LogoutUser;\n\n\n\n\n\n\n\n/*\nimport React, { Component, useState} from 'react'\nimport axios from \"axios\";\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})\n\n\n\nfunction Login() {\n    const [userName, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [loggedInStatus, setLoginStatus] = React.useState('');\n    const loginURL = \"http://localhost:3003/login\"\n    const loginStatusURL = \"http://localhost:3003/login/status\"\n    const logoutURL = \"http://localhost:3003/logout\"\n    const logoutVerifyURL = \"http://localhost:3003/verify\"\n  \n    const loginUser = () => {\n      var userInputName = userName\n      var userInputPassword = password\n      console.log(\"you are logging in \" + userInputName + \" with the password \" + userInputPassword)\n  \n      axiosRequest.post(loginURL, {\n        userName: userInputName,\n        password: userInputPassword\n      })\n      .then(function (response) {\n        console.log(response);\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const loginStatus = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      console.log(\"you are checking on \" + userInputName )\n\n      axiosRequest.post(loginStatusURL, {\n        userName: userInputName\n      })\n      .then(function (response) {\n        //console.log(response.data);\n        // userName: \"\", userLoggedIn: \"notLoggedIn\", accessToken: \"accessToken\", refreshToken: \"refreshToken\"\n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const logoutUser = () => {\n      //FIX: This is whatever is currently typed \n      var userInputName = userName\n      var refreshToken = \"refreshToken\"\n\n      axiosRequest.post(logoutURL, {\n        userName: userInputName,\n        refreshToken: refreshToken\n      })\n      .then(function (response) {\n        console.log(response.data)\n        setLoginStatus(\"nobody logged in!\");\n        \n        if(response.data.userLoggedIn != \"notLoggedIn\"){\n          let loginStatusMessage = response.data.userName + \" is currently logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n\n        } else {\n          let loginStatusMessage = \"nobody logged in!\"\n          console.log(loginStatusMessage)\n          setLoginStatus(loginStatusMessage);\n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    \n\n    const loginVerify = () => {\n      axiosRequest.post(logoutVerifyURL, {\n        userName: \"davey\",\n      })\n      .then(function (response) {\n        console.log(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      \n    }\n\n    return (\n      <div className=\"login\">\n        <input type=\"text\" className=\"loginInput\" placeholder=\"userName\" onChange={e => setUsername(e.target.value)} />\n        <p></p>\n        <input type=\"text\" className=\"loginInput\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} />\n        <p></p>\n        <button className = \"loginButton\" onClick={ loginUser }> Login</button>\n        <div className = \"simplerHolder\">\n          <p>{ userName }</p> \n          <p>{ password }</p>\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ loginStatus }> Login Status </button>\n          <div className = \"simplerHolder\"> \n          <p>{ loggedInStatus }</p>\n        </div>\n\n        <div>\n          <button className = \"loginButton\" onClick={ loginVerify }> Get a Post </button>\n        </div>\n\n        </div>\n        <div>\n          <button className = \"loginButton\" onClick={ logoutUser }> Logout </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Login;\n\n\n\n\n*/"]},"metadata":{},"sourceType":"module"}