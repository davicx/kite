{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/comments/CommentList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from \"react-query\";\n\n//<Comments api = { api } groupID = { groupID } postID = { post.postID } currentUser = {currentUser}  /> \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getComments(postID, api) {\n  const commentPostURL = \"http://localhost:3003/comments/\" + postID;\n  const response = await api.get(commentPostURL);\n  console.log(\"response\");\n  console.log(response);\n  console.log(\"response\");\n  return response.data;\n}\nconst CommentList = _ref => {\n  _s();\n  let {\n    api,\n    groupID,\n    postID\n  } = _ref;\n  const localData = localStorage.getItem(\"localStorageCurrentUser\");\n  const currentUser = JSON.parse(localData);\n  console.log(\"Posts: Getting Comments for the post \" + postID);\n  const onError = error => {\n    console.log(\"Do something here if there is Error!\");\n    console.log(error);\n  };\n  const {\n    isLoading,\n    data,\n    isError,\n    error\n  } = useQuery(['post-comments', postID], () => getComments(postID, api), {\n    refetchInterval: 10000000,\n    onError: onError\n  });\n  const currentPosts = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" There was an error fetching the posts \", error.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this), data && console.log(data)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n_s(CommentList, \"20VnH7aHnyusuHUg2Uycf4IaPvo=\", false, function () {\n  return [useQuery];\n});\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useQuery","getComments","postID","api","commentPostURL","response","get","console","log","data","CommentList","groupID","localData","localStorage","getItem","currentUser","JSON","parse","onError","error","isLoading","isError","refetchInterval","currentPosts","message"],"sources":["/Users/david/Desktop/David/www/kite/src/components/comments/CommentList.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from \"react-query\";\n\n//<Comments api = { api } groupID = { groupID } postID = { post.postID } currentUser = {currentUser}  /> \n\nasync function getComments(postID, api) {\n    const commentPostURL = \"http://localhost:3003/comments/\" + postID; \n    const response = await api.get(commentPostURL)\n    console.log(\"response\")\n    console.log(response)\n    console.log(\"response\")\n  \n    return response.data\n  \n} \n\nconst CommentList = ({api, groupID, postID}) => {\n    const localData = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUser = JSON.parse(localData);\n    console.log(\"Posts: Getting Comments for the post \" + postID)\n\n    const onError = (error) => {\n      console.log(\"Do something here if there is Error!\")\n      console.log(error)\n    }\n  \n    const { isLoading, data, isError, error  } = useQuery(['post-comments', postID], () => getComments(postID, api), \n      { refetchInterval: 10000000,\n        onError: onError\n      }\n    )\n\n    const currentPosts = data;\n\n  return (\n  <div className=\"posts\">\n       <p><b> Comments</b> </p>\n       <div className = \"post-list\" >\n          { isLoading && <div> loading... </div>}\n          { isError && <div> There was an error fetching the posts { error.message } </div>}\n          {data && console.log(data)}\n       </div>\n  </div>\n  );\n  }\n  \nexport default CommentList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;;AAEtC;AAAA;AAEA,eAAeC,WAAW,CAACC,MAAM,EAAEC,GAAG,EAAE;EACpC,MAAMC,cAAc,GAAG,iCAAiC,GAAGF,MAAM;EACjE,MAAMG,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAACF,cAAc,CAAC;EAC9CG,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvBD,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrBE,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EAEvB,OAAOH,QAAQ,CAACI,IAAI;AAExB;AAEA,MAAMC,WAAW,GAAG,QAA4B;EAAA;EAAA,IAA3B;IAACP,GAAG;IAAEQ,OAAO;IAAET;EAAM,CAAC;EACvC,MAAMU,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,yBAAyB,CAAC;EACjE,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;EACzCL,OAAO,CAACC,GAAG,CAAC,uCAAuC,GAAGN,MAAM,CAAC;EAE7D,MAAMgB,OAAO,GAAIC,KAAK,IAAK;IACzBZ,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IACnDD,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;EACpB,CAAC;EAED,MAAM;IAAEC,SAAS;IAAEX,IAAI;IAAEY,OAAO;IAAEF;EAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC,eAAe,EAAEE,MAAM,CAAC,EAAE,MAAMD,WAAW,CAACC,MAAM,EAAEC,GAAG,CAAC,EAC7G;IAAEmB,eAAe,EAAE,QAAQ;IACzBJ,OAAO,EAAEA;EACX,CAAC,CACF;EAED,MAAMK,YAAY,GAAGd,IAAI;EAE3B,oBACA;IAAK,SAAS,EAAC,OAAO;IAAA,wBACjB;MAAA,wBAAG;QAAA,UAAG;MAAS;QAAA;QAAA;QAAA;MAAA,QAAI,KAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eACxB;MAAK,SAAS,EAAG,WAAW;MAAA,WACvBW,SAAS,iBAAI;QAAA,UAAK;MAAY;QAAA;QAAA;QAAA;MAAA,QAAM,EACpCC,OAAO,iBAAI;QAAA,WAAK,yCAAuC,EAAEF,KAAK,CAACK,OAAO,EAAE,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,EAChFf,IAAI,IAAIF,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEN,CAAC;AAAA,GA5BGC,WAAW;EAAA,QAUgCV,QAAQ;AAAA;AAAA,KAVnDU,WAAW;AA8BjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}