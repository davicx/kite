{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\kite\\\\src\\\\pages\\\\IndividualGroup.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { BrowserRouter, useNavigate, Link } from \"react-router-dom\";\nimport { LoginContext } from \"../functions/context/LoginContext\";\nimport Posts from '../components/posts/Posts'; //import Posts from './../components/posts/Posts';\n//import MakePost from './../components/posts/MakePost';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IndividualGroup = () => {\n  _s();\n\n  const {\n    groupID\n  } = useParams(); //Login Status \n\n  const navigate = useNavigate();\n  const {\n    currentUser,\n    setLoginState\n  } = useContext(LoginContext);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  useEffect(() => {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn);\n\n    if (currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\n      setUserLoggedIn(false);\n      console.log(\"Group Page: DONT BE HERE\");\n    } else {\n      setUserLoggedIn(true);\n      console.log(\"Group Page: OK STAY HERE\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"\",\n      to: \"/groups\",\n      children: \" Groups \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      groupID: groupID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Your on a group! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Group ID \", groupID, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Current User: \", currentUser, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" User Logged In: \", userLoggedIn ? 'yep!' : 'nooo', \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IndividualGroup, \"ac+Xlv4I6GIyfLEKwNF7x7nNZDg=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = IndividualGroup;\nexport default IndividualGroup;\n/*\r\n\r\nconst IndividualPost = (props) => {\r\n    const posts = props.posts;\r\n    console.log(\"IndividualPost \" + posts)\r\n    const postID = posts.postID\r\n    const title = props.title;\r\n\r\n    const likePost = (e) => {\r\n      console.log(e.target);\r\n      console.log(\"you liked! \" + postID);\r\n    }\r\n\r\n    return (\r\n        <div className = \"post-list\">\r\n            { posts.map((post) => (\r\n                <div className=\"post\" key={ post.postID }>\r\n                    <p className = \"post-text\"> { post.postCaption } </p>\r\n                    <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>      \r\n                    <button onClick={ likePost }> Like </button>                         \r\n                </div>\r\n            ))}\r\n        </div>\r\n        );\r\n    }  \r\n\r\nexport default IndividualPost;\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"IndividualGroup\");","map":{"version":3,"sources":["C:/wamp/www/kite/src/pages/IndividualGroup.js"],"names":["useParams","React","useContext","useState","useEffect","BrowserRouter","useNavigate","Link","LoginContext","Posts","IndividualGroup","groupID","navigate","currentUser","setLoginState","userLoggedIn","setUserLoggedIn","data","localStorage","getItem","currentUserLoggedIn","JSON","parse","console","log"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,IAArC,QAAkD,kBAAlD;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,OAAOC,KAAP,MAAkB,2BAAlB,C,CAEA;AACA;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAcX,SAAS,EAA7B,CAD0B,CAG1B;;AACA,QAAMY,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAgCZ,UAAU,CAACM,YAAD,CAAhD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,yBAArB,CAAb;AACA,UAAMC,mBAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAA5B;AACAH,IAAAA,aAAa,CAACM,mBAAD,CAAb;;AACA,QAAGA,mBAAmB,IAAI,MAAvB,IAAiCA,mBAAmB,IAAI,IAA3D,EAAiE;AAC/DJ,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KAHD,MAGO;AACLR,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;AACH,GAXS,EAWP,EAXO,CAAT;AAaA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,EAAhB;AAAmB,MAAA,EAAE,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAKb;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,+BAAeA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,oCAAoBE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,sCAAsBE,YAAY,GAAG,MAAH,GAAY,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA/BD;;GAAML,e;UACkBV,S,EAGHM,W;;;KAJfI,e;AAiCN,eAAeA,eAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useParams } from \"react-router\";\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport { BrowserRouter, useNavigate, Link  } from \"react-router-dom\"\r\nimport { LoginContext } from \"../functions/context/LoginContext\";\r\nimport Posts from '../components/posts/Posts';\r\n\r\n//import Posts from './../components/posts/Posts';\r\n//import MakePost from './../components/posts/MakePost';\r\n\r\nconst IndividualGroup = () => {\r\n    const { groupID } = useParams()\r\n\r\n    //Login Status \r\n    const navigate = useNavigate();\r\n    const { currentUser, setLoginState} = useContext(LoginContext);\r\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\r\n      const currentUserLoggedIn = JSON.parse(data);\r\n      setLoginState(currentUserLoggedIn);\r\n      if(currentUserLoggedIn == 'null' || currentUserLoggedIn == null) {\r\n        setUserLoggedIn(false);\r\n        console.log(\"Group Page: DONT BE HERE\");\r\n      } else {\r\n        setUserLoggedIn(true);\r\n        console.log(\"Group Page: OK STAY HERE\")\r\n      }\r\n   }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Link className=\"\" to=\"/groups\"> Groups </Link>\r\n            <Posts groupID = { groupID }/>\r\n            <p><b> Your on a group! </b></p>\r\n            <p> Group ID { groupID } </p>\r\n            <p> Current User: { currentUser } </p>\r\n            <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndividualGroup;\r\n/*\r\n\r\nconst IndividualPost = (props) => {\r\n    const posts = props.posts;\r\n    console.log(\"IndividualPost \" + posts)\r\n    const postID = posts.postID\r\n    const title = props.title;\r\n\r\n    const likePost = (e) => {\r\n      console.log(e.target);\r\n      console.log(\"you liked! \" + postID);\r\n    }\r\n\r\n    return (\r\n        <div className = \"post-list\">\r\n            { posts.map((post) => (\r\n                <div className=\"post\" key={ post.postID }>\r\n                    <p className = \"post-text\"> { post.postCaption } </p>\r\n                    <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>      \r\n                    <button onClick={ likePost }> Like </button>                         \r\n                </div>\r\n            ))}\r\n        </div>\r\n        );\r\n    }  \r\n\r\nexport default IndividualPost;\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}