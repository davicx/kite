{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/pages/Playground.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { useNavigate } from \"react-router-dom\";\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport functions from \"../functions/functions\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playground() {\n  _s();\n  const [postCaption, editPostCaption] = useState('Hi Edit Me! Wanna go on a hike today the weather is perfect!');\n  const [editPost, showEditTextArea] = useState('hide');\n\n  //const [showPostPostCaption, showEditTextArea] = useState('hide')\n  //const [showEditPostCaption, showEditTextArea] = useState('hide')\n  //<postCaption>\n  //<editPostCaption>\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    editPostCaption(value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      name,\n      value\n    } = event.target;\n    showEditTextArea('show');\n    console.log(\"Submit\");\n    console.log(postCaption);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"hide\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: editTextArea,\n          children: [postCaption, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: postCaption,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Playground, \"IT9R4fU6XM6mBh1Uuln7ghdyxWY=\");\n_c = Playground;\nexport default Playground;\nfunction PostCaption() {\n  _s2();\n  // Declare a new state variable, which we'll call \"count\"\n  const [name, setLocation] = useState(\"Frodo\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Location: Shire \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s2(PostCaption, \"trZJr+UnrMqmJw2HmKIfXdpSi4Q=\");\n_c2 = PostCaption;\nfunction EditPost() {\n  _s3();\n  // Declare a new state variable, which we'll call \"count\"\n  const [name, setLocation] = useState(\"Frodo\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Location: Shire \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n//COMPONENT\n/*\n//https://www.freecodecamp.org/news/pass-data-between-components-in-react/\nimport React, { useState } from 'react';\n\n\n\n\nexport default Frodo;\n*/\n//SIMPLE 1\n/*\nfunction Playground() {\n  const [postCaption, editPostCaption] = useState('Post caption! Edit Me! wanna go on a hike today the weather is perfect!')\n  \n  const handleEditPost = (postCaption) => {\n      console.log(\"you clicked\")\n      console.log(postCaption)\n    }\n\n  return (\n    <div className=\"user\">\n        <h4> Playground </h4>\n        <p> {postCaption} </p>\n        \n        <button type=\"submit\" className = \"\" onClick={() => { handleEditPost(postCaption) }}>Edit Post</button>\n\n    </div>\n  );\n}\n\nexport default Playground;\n*/\n\n//NEW POST\n\n/*\n<input name= \"postCaption\" type=\"text\" value={ postCaption } onChange={handleChange} />\nfunction NewPost({ groupID, currentUser, api }) {\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        //console.log(newPost)\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> {postCaption}</p>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPost;\n\n\n\n*/\n\n/*\nconst Search = () => {\n  const [showResults, setShowResults] = React.useState(false)\n  const onClick = () => setShowResults(true)\n  return (\n    <div>\n      <input type=\"submit\" value=\"Search\" onClick={onClick} />\n      { showResults ? <Results /> : null }\n    </div>\n  )\n}\n\nconst Results = () => (\n  <div id=\"results\" className=\"search-results\">\n    Some Results\n  </div>\n)\n*/\n\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n\n//Create the API to call \nconst api = axios.create({\n\n})\n\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\"\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n//COMPONENT: Like Post  \nfunction LikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  //const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser,\n        groupID: groupID\n    }\n\n    mutate(likedPost)\n\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n        console.log(returnedData)\n        \n          //STEP 1: Get post ID of updated post and new like array \n          var updatedQueryData = structuredClone(originalQueryData);\n          console.log(\"updatedQueryData\")\n          console.log(updatedQueryData)\n          console.log(\"updatedQueryData\")\n\n          const postID = returnedData.postID;\n          const currentUser = returnedData.currentUser;\n\n          for (let i = 0; i < updatedQueryData.length; i++) {\n\n              if(updatedQueryData[i].postID == postID) {\n\n                  var postLike = returnedData.newLike[0];\n\n                  //Create the new array of users who have liked this\n                  updatedQueryData[i].postLikesArray.push(postLike)\n                  updatedQueryData[i].simpleLikesArray.push(currentUser)\n                  updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n              }\n          }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n*/\n_s3(EditPost, \"trZJr+UnrMqmJw2HmKIfXdpSi4Q=\");\n_c3 = EditPost;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Playground\");\n$RefreshReg$(_c2, \"PostCaption\");\n$RefreshReg$(_c3, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useQuery","useNavigate","useLoginStatus","functions","axios","Playground","postCaption","editPostCaption","editPost","showEditTextArea","handleChange","event","name","value","target","handleSubmit","preventDefault","console","log","editTextArea","PostCaption","setLocation","EditPost"],"sources":["/Users/david/Desktop/David/www/kite/src/pages/Playground.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { useNavigate  } from \"react-router-dom\" \nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport functions from \"../functions/functions\";\n\nimport axios from 'axios'\n\nfunction Playground() {\n  const [postCaption, editPostCaption] = useState('Hi Edit Me! Wanna go on a hike today the weather is perfect!')\n  const [editPost, showEditTextArea] = useState('hide')\n  \n  //const [showPostPostCaption, showEditTextArea] = useState('hide')\n  //const [showEditPostCaption, showEditTextArea] = useState('hide')\n  //<postCaption>\n  //<editPostCaption>\n  \n  const handleChange = (event) => {\n    const { name, value } = event.target\n    editPostCaption(value)\n  }\n\n  const handleSubmit = (event) => {\n      event.preventDefault();\n      const { name, value } = event.target\n      showEditTextArea('show')\n      console.log(\"Submit\")\n      console.log(postCaption)\n  }\n\n  return (\n    <div className=\"user\">\n      \n      <div class = \"show\"> \n\n        \n      </div>\n\n      <div class = \"hide\"> \n        <form onSubmit={ handleSubmit }>\n          <label> </label> \n          <p className = {editTextArea} >{ postCaption } </p>\n          <textarea value={ postCaption } onChange={ handleChange } />\n          <button type=\"submit\"> Submit </button>\n        </form>\n\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default Playground;\n\n\n\nfunction PostCaption() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [name, setLocation] = useState(\"Frodo\");\n\n  return (\n    <div className=\"user\">\n      <p>Name {name} </p>\n      <p> Location: Shire </p>\n    </div>\n  );\n}\nfunction EditPost() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [name, setLocation] = useState(\"Frodo\");\n\n  return (\n    <div className=\"user\">\n      <p>Name {name} </p>\n      <p> Location: Shire </p>\n    </div>\n  );\n}\n\n\n//COMPONENT\n/*\n//https://www.freecodecamp.org/news/pass-data-between-components-in-react/\nimport React, { useState } from 'react';\n\n\n\n\nexport default Frodo;\n*/\n//SIMPLE 1\n/*\nfunction Playground() {\n  const [postCaption, editPostCaption] = useState('Post caption! Edit Me! wanna go on a hike today the weather is perfect!')\n  \n  const handleEditPost = (postCaption) => {\n      console.log(\"you clicked\")\n      console.log(postCaption)\n    }\n\n  return (\n    <div className=\"user\">\n        <h4> Playground </h4>\n        <p> {postCaption} </p>\n        \n        <button type=\"submit\" className = \"\" onClick={() => { handleEditPost(postCaption) }}>Edit Post</button>\n\n    </div>\n  );\n}\n\nexport default Playground;\n*/\n\n//NEW POST\n\n/*\n<input name= \"postCaption\" type=\"text\" value={ postCaption } onChange={handleChange} />\nfunction NewPost({ groupID, currentUser, api }) {\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        //console.log(newPost)\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> {postCaption}</p>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPost;\n\n\n\n*/\n\n/*\nconst Search = () => {\n  const [showResults, setShowResults] = React.useState(false)\n  const onClick = () => setShowResults(true)\n  return (\n    <div>\n      <input type=\"submit\" value=\"Search\" onClick={onClick} />\n      { showResults ? <Results /> : null }\n    </div>\n  )\n}\n\nconst Results = () => (\n  <div id=\"results\" className=\"search-results\">\n    Some Results\n  </div>\n)\n*/\n\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n\n//Create the API to call \nconst api = axios.create({\n\n})\n\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\"\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n//COMPONENT: Like Post  \nfunction LikePost({groupID, post, currentUser}) {\n  const queryClient = useQueryClient();\n  //const postUserLikesArray = post.likedByUsernameArray;\n  const postID = post.postID;\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser,\n        groupID: groupID\n    }\n\n    mutate(likedPost)\n\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n        console.log(returnedData)\n        \n          //STEP 1: Get post ID of updated post and new like array \n          var updatedQueryData = structuredClone(originalQueryData);\n          console.log(\"updatedQueryData\")\n          console.log(updatedQueryData)\n          console.log(\"updatedQueryData\")\n\n          const postID = returnedData.postID;\n          const currentUser = returnedData.currentUser;\n\n          for (let i = 0; i < updatedQueryData.length; i++) {\n\n              if(updatedQueryData[i].postID == postID) {\n\n                  var postLike = returnedData.newLike[0];\n\n                  //Create the new array of users who have liked this\n                  updatedQueryData[i].postLikesArray.push(postLike)\n                  updatedQueryData[i].simpleLikesArray.push(currentUser)\n                  updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n              }\n          }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n    </div>\n  );\n}\n\n\nexport default LikePost;\n*/"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,QAAS,kBAAkB;AAC/C,OAAOC,cAAc,MAAM,mCAAmC;AAC9D,OAAOC,SAAS,MAAM,wBAAwB;AAE9C,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,SAASC,UAAU,GAAG;EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,8DAA8D,CAAC;EAC/G,MAAM,CAACW,QAAQ,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;;EAErD;EACA;EACA;EACA;;EAEA,MAAMa,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCP,eAAe,CAACM,KAAK,CAAC;EACxB,CAAC;EAED,MAAME,YAAY,GAAIJ,KAAK,IAAK;IAC5BA,KAAK,CAACK,cAAc,EAAE;IACtB,MAAM;MAAEJ,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCL,gBAAgB,CAAC,MAAM,CAAC;IACxBQ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBD,OAAO,CAACC,GAAG,CAACZ,WAAW,CAAC;EAC5B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBAEnB;MAAK,KAAK,EAAG;IAAM;MAAA;MAAA;MAAA;IAAA,QAGb,eAEN;MAAK,KAAK,EAAG,MAAM;MAAA,uBACjB;QAAM,QAAQ,EAAGS,YAAc;QAAA,wBAC7B;UAAA,UAAO;QAAC;UAAA;UAAA;UAAA;QAAA,QAAQ,eAChB;UAAG,SAAS,EAAII,YAAa;UAAA,WAAIb,WAAW,EAAE,GAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAI,eACnD;UAAU,KAAK,EAAGA,WAAa;UAAC,QAAQ,EAAGI;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG,eAC5D;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAClC;MAAA;MAAA;MAAA;IAAA,QAEH;EAAA;IAAA;IAAA;IAAA;EAAA,QAGF;AAEV;AAAC,GA3CQL,UAAU;AAAA,KAAVA,UAAU;AA6CnB,eAAeA,UAAU;AAIzB,SAASe,WAAW,GAAG;EAAA;EACrB;EACA,MAAM,CAACR,IAAI,EAAES,WAAW,CAAC,GAAGxB,QAAQ,CAAC,OAAO,CAAC;EAE7C,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MAAA,WAAG,OAAK,EAACe,IAAI,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eACnB;MAAA,UAAG;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAEV;AAAC,IAVQQ,WAAW;AAAA,MAAXA,WAAW;AAWpB,SAASE,QAAQ,GAAG;EAAA;EAClB;EACA,MAAM,CAACV,IAAI,EAAES,WAAW,CAAC,GAAGxB,QAAQ,CAAC,OAAO,CAAC;EAE7C,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MAAA,WAAG,OAAK,EAACe,IAAI,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eACnB;MAAA,UAAG;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACphFA,IAzISU,QAAQ;AAAA,MAARA,QAAQ;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}