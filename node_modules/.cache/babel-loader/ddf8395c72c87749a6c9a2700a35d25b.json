{"ast":null,"code":"var _jsxFileName = \"/Users/chavasqu/Desktop/David/www/kite/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Navigate, Route, Routes, Link, NavLink, useLocation } from 'react-router-dom'; //import { BrowserRouter, Link, Navigate, Route, Routes } from 'react-router-dom'\n\nimport { QueryClientProvider, QueryClient } from 'react-query'; //https://html5boilerplate.com/\n\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Groups from './pages/Groups';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\nimport PrivateRoutes from './functions/hooks/PrivateRoutes.js';\nimport { LoginContext } from \"./functions/context/LoginContext\";\nimport RequireAuth from './components/login/RequireAuth'; //import { sayHello } from './functions/functions';\n//STOP: 20\n\nimport './index.css';\nimport './style/style.css';\nimport './style/external/normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\n\nfunction App() {\n  _s();\n\n  const [currentUser, setLoginState] = useState('null');\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    console.log(\"APP useEffect \" + currentUserLoggedIn);\n    setLoginState(currentUserLoggedIn);\n  }, []);\n  var userLoggedIn = false;\n\n  if (currentUser == 'null') {\n    userLoggedIn = false;\n  } else {\n    userLoggedIn = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n        value: {\n          currentUser,\n          setLoginState\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"loginInput\",\n            to: \"/login\",\n            children: \"Login \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"loginInput\",\n            to: \"/groups\",\n            children: \" Groups \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"loginInput\",\n            to: \"/register\",\n            children: \" Register \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: userLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/groups\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 64\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 92\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            element: /*#__PURE__*/_jsxDEV(RequireAuth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 30\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/groups\",\n              element: /*#__PURE__*/_jsxDEV(Groups, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/group/:groupID\",\n              element: /*#__PURE__*/_jsxDEV(IndividualGroup, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Current User: \", currentUser, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" User Logged In: \", userLoggedIn ? 'yep!' : 'nooo', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"3AgNPQ0t8MubFhGBwm7Fv14sljw=\");\n\n_c = App;\nexport default App;\n/*\n  <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n*/\n\n/*\n//WORKING\n   <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <BrowserRouter>\n\n            <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n\n          </BrowserRouter>\n        </QueryClientProvider>\n      </div>\n    </LoginContext.Provider>\n\n\nimport React, { useState, useEffect, createContext } from \"react\";\n//import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n//import { Index } from \"./pages\";\n//import { About } from \"./pages/about\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport Home from './components/Home'\n\n\nfunction App() {\n  var userLoggedIn = 'false'\n  const [currentUser, setLoginState] = useState('null');\n\n  if(currentUser == 'null') {\n    userLoggedIn = 'false'  \n  } else {\n    userLoggedIn = 'true' \n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  return (\n    <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div>\n        <p> Username {currentUser} </p>\n        <p> Login State {userLoggedIn} </p>\n        <Login />\n        <Logout />\n        <Home />\n      </div>\n    </LoginContext.Provider>\n\n  );\n}\n\nexport default App;\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chavasqu/Desktop/David/www/kite/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Navigate","Route","Routes","Link","NavLink","useLocation","QueryClientProvider","QueryClient","Login","Register","Groups","NotFound","IndividualGroup","PrivateRoutes","LoginContext","RequireAuth","queryClient","App","currentUser","setLoginState","data","localStorage","getItem","currentUserLoggedIn","JSON","parse","console","log","userLoggedIn"],"mappings":"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AAA;AAAA,kBAVF,eAgBE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,OAAO,eAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVA,eA6BA;AAAA,wCAAoBV,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BA,eA8BA;AAAA,0CAAsBU,YAAY,GAAG,MAAH,GAAY,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCD;;GA3DQX,G;;KAAAA,G;AA6DT,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter,Navigate,  Route, Routes, Link, NavLink, useLocation} from 'react-router-dom'\n//import { BrowserRouter, Link, Navigate, Route, Routes } from 'react-router-dom'\nimport { QueryClientProvider, QueryClient } from 'react-query';\n//https://html5boilerplate.com/\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Groups from './pages/Groups';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\nimport PrivateRoutes from './functions/hooks/PrivateRoutes.js';\nimport { LoginContext } from \"./functions/context/LoginContext\";\nimport RequireAuth from './components/login/RequireAuth';\n\n//import { sayHello } from './functions/functions';\n//STOP: 20\n\nimport './index.css';\nimport './style/style.css';\nimport './style/external/normalize.css';\n\nconst queryClient = new QueryClient()\n\nfunction App() {\n  const [currentUser, setLoginState] = useState('null');\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    console.log(\"APP useEffect \" + currentUserLoggedIn)\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  var userLoggedIn = false\n\n  if(currentUser == 'null') {\n      userLoggedIn = false\n    } else {\n      userLoggedIn = true \n    }\n\n  return (\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <LoginContext.Provider value={{currentUser, setLoginState}}>\n\n\n          <nav>\n            <Link className=\"loginInput\" to=\"/login\">Login </Link>\n            <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n            <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n          </nav>\n          {/* <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>  */}\n\n          <Routes> \n            \n            { /* Public Routes */}            \n\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path =\"/login\" element = { userLoggedIn ? <Navigate to=\"/groups\" /> : <Navigate to=\"/login\" /> } />\n              <Route path=\"/register\" element={<Register/>} />\n\n\n            { /* Private Routes */}\n            <Route element={ <RequireAuth /> }>\n              <Route path=\"/groups\" element={<Groups/>} />\n              <Route path = \"/group/:groupID\" element = {<IndividualGroup />} />     \n            </Route> \n            \n            { /* Anything Else Routes */}\n            <Route path=\"*\" element={ <NotFound /> } />\n\n          </Routes>\n          <p> Current User: { currentUser } </p>\n          <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n\n\n          </LoginContext.Provider>  \n        </QueryClientProvider>\n      </div>\n\n  );\n}\n\nexport default App;\n\n/*\n  <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n*/\n\n\n\n/*\n//WORKING\n   <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <BrowserRouter>\n\n            <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n\n          </BrowserRouter>\n        </QueryClientProvider>\n      </div>\n    </LoginContext.Provider>\n\n\nimport React, { useState, useEffect, createContext } from \"react\";\n//import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n//import { Index } from \"./pages\";\n//import { About } from \"./pages/about\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport Home from './components/Home'\n\n\nfunction App() {\n  var userLoggedIn = 'false'\n  const [currentUser, setLoginState] = useState('null');\n\n  if(currentUser == 'null') {\n    userLoggedIn = 'false'  \n  } else {\n    userLoggedIn = 'true' \n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  return (\n    <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div>\n        <p> Username {currentUser} </p>\n        <p> Login State {userLoggedIn} </p>\n        <Login />\n        <Logout />\n        <Home />\n      </div>\n    </LoginContext.Provider>\n\n  );\n}\n\nexport default App;\n\n*/"]},"metadata":{},"sourceType":"module"}