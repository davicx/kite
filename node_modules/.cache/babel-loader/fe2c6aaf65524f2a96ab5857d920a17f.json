{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Navigate, Route, Routes, Link, NavLink, useLocation, useNavigate } from 'react-router-dom'; //import { BrowserRouter, Link, Navigate, Route, Routes } from 'react-router-dom'\n\nimport { QueryClientProvider, QueryClient } from 'react-query'; //https://html5boilerplate.com/\n\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Groups from './pages/Groups';\nimport Profile from './pages/Profile';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\nimport PrivateRoutes from './functions/hooks/PrivateRoutes.js';\nimport { LoginContext } from \"./functions/context/LoginContext\";\nimport RequireAuth from './components/login/RequireAuth';\nimport Layout from './components/Layout'; //import { sayHello } from './functions/functions';\n//STOP: 20\n\nimport './index.css';\nimport './style/style.css';\nimport './style/external/normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient(); //Put user in user Context \n\nfunction App() {\n  _s();\n\n  const [currentUser, setLoginState] = useState('null'); //const [userLoggedIn, setUserLoggedIn] = useState(false);\n\n  useEffect(() => {\n    console.log(\"\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n        value: {\n          currentUser,\n          setLoginState\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"loginInput\",\n            to: \"/login\",\n            children: \"Login \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"loginInput\",\n            to: \"/groups\",\n            children: \" Groups \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"loginInput\",\n            to: \"/profile\",\n            children: \" Profile \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/groups\",\n            element: /*#__PURE__*/_jsxDEV(Groups, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/group/:groupID\",\n            element: /*#__PURE__*/_jsxDEV(IndividualGroup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            element: /*#__PURE__*/_jsxDEV(RequireAuth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Current User: \", currentUser, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"3AgNPQ0t8MubFhGBwm7Fv14sljw=\");\n\n_c = App;\nexport default App;\n/*\n\n\n          \n          <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n\n\n  //New\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUserLoggedIn = JSON.parse(data);\n    console.log(\"APP useEffect \" + currentUserLoggedIn)\n    console.log(currentUser)\n    if(currentUser == 'null') {\n      setUserLoggedIn(false);\n      console.log(\"userLoggedIn = false\")\n    } else {\n      setUserLoggedIn(true);\n      console.log(\"userLoggedIn = true\")\n    }\n    setLoginState(currentUserLoggedIn)\n  }, []);\n  \n  //const   = localStorage.getItem(\"location\");\n  //const location = localStorage.getItem(\"location\");\n  //const navigate = useNavigate();\n  const history = {\n    currentLocation: \"groups\",\n    previousLocation: \"groups2\",\n  }\n  const location = useLocation();\n  //const currentLocation = localStorage.getItem(\"currentLocation\");\n  //console.log(\"currentLocation \" + currentLocation)\n  //localStorage.setItem('previousLocation', JSON.stringify(currentLocation));\n  localStorage.setItem('currentLocation', JSON.stringify(history));\n\n\n\n  //<button onClick={() => navigate(-1)}>go back</button>\n\n\n  //New\n           <Route path =\"/login\" element = { userLoggedIn ? <Navigate to=\"/login\" /> : <Navigate to=\"/groups\" /> } />\n           \n  <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n*/\n\n/*\n//WORKING\n   <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <BrowserRouter>\n\n            <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n\n          </BrowserRouter>\n        </QueryClientProvider>\n      </div>\n    </LoginContext.Provider>\n\n\nimport React, { useState, useEffect, createContext } from \"react\";\n//import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n//import { Index } from \"./pages\";\n//import { About } from \"./pages/about\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport Home from './components/Home'\n\n\nfunction App() {\n  var userLoggedIn = 'false'\n  const [currentUser, setLoginState] = useState('null');\n\n  if(currentUser == 'null') {\n    userLoggedIn = 'false'  \n  } else {\n    userLoggedIn = 'true' \n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  return (\n    <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div>\n        <p> Username {currentUser} </p>\n        <p> Login State {userLoggedIn} </p>\n        <Login />\n        <Logout />\n        <Home />\n      </div>\n    </LoginContext.Provider>\n\n  );\n}\n\nexport default App;\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/david/Desktop/David/www/kite/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Navigate","Route","Routes","Link","NavLink","useLocation","useNavigate","QueryClientProvider","QueryClient","Login","Register","Groups","Profile","NotFound","IndividualGroup","PrivateRoutes","LoginContext","RequireAuth","Layout","queryClient","App","currentUser","setLoginState","console","log"],"mappings":"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":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter,Navigate,  Route, Routes, Link, NavLink, useLocation, useNavigate} from 'react-router-dom'\n//import { BrowserRouter, Link, Navigate, Route, Routes } from 'react-router-dom'\nimport { QueryClientProvider, QueryClient } from 'react-query';\n//https://html5boilerplate.com/\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Groups from './pages/Groups';\nimport Profile from './pages/Profile';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\nimport PrivateRoutes from './functions/hooks/PrivateRoutes.js';\nimport { LoginContext } from \"./functions/context/LoginContext\";\nimport RequireAuth from './components/login/RequireAuth';\nimport Layout from './components/Layout';\n\n//import { sayHello } from './functions/functions';\n//STOP: 20\n\nimport './index.css';\nimport './style/style.css';\nimport './style/external/normalize.css';\n\nconst queryClient = new QueryClient()\n//Put user in user Context \n\nfunction App() {\n  const [currentUser, setLoginState] = useState('null');\n  //const [userLoggedIn, setUserLoggedIn] = useState(false);\n  useEffect(() => {\n   console.log(\"\");\n  }, []);\n  \n\n\n\n  return (\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <LoginContext.Provider value={{currentUser, setLoginState}}>\n\n          <nav>\n            <Link className=\"loginInput\" to=\"/login\">Login </Link>\n            <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n            <Link className=\"loginInput\" to=\"/profile\"> Profile </Link>\n          </nav>\n          {/* <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>  */}\n\n          <Routes> \n                    \n              <Route path=\"/\" element={<Layout/>} />\n              \n                <Route path=\"/login\" element={<Login/>} />\n                <Route path=\"/groups\" element={<Groups/>} />\n                <Route path=\"/profile\" element={<Profile/>} />\n                <Route path = \"/group/:groupID\" element = {<IndividualGroup />} />   \n                \n                <Route element={ <RequireAuth /> }>\n  \n                </Route> \n\n                { /* Anything Else Routes */}\n                <Route path=\"*\" element={ <NotFound /> } />       \n               <Route />\n          </Routes>\n\n          <p> Current User: { currentUser } </p>\n          </LoginContext.Provider>  \n        </QueryClientProvider>\n      </div>\n\n  );\n}\n\nexport default App;\n\n/*\n\n\n          \n          <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n\n\n  //New\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUserLoggedIn = JSON.parse(data);\n    console.log(\"APP useEffect \" + currentUserLoggedIn)\n    console.log(currentUser)\n    if(currentUser == 'null') {\n      setUserLoggedIn(false);\n      console.log(\"userLoggedIn = false\")\n    } else {\n      setUserLoggedIn(true);\n      console.log(\"userLoggedIn = true\")\n    }\n    setLoginState(currentUserLoggedIn)\n  }, []);\n  \n  //const   = localStorage.getItem(\"location\");\n  //const location = localStorage.getItem(\"location\");\n  //const navigate = useNavigate();\n  const history = {\n    currentLocation: \"groups\",\n    previousLocation: \"groups2\",\n  }\n  const location = useLocation();\n  //const currentLocation = localStorage.getItem(\"currentLocation\");\n  //console.log(\"currentLocation \" + currentLocation)\n  //localStorage.setItem('previousLocation', JSON.stringify(currentLocation));\n  localStorage.setItem('currentLocation', JSON.stringify(history));\n\n\n\n  //<button onClick={() => navigate(-1)}>go back</button>\n\n\n  //New\n           <Route path =\"/login\" element = { userLoggedIn ? <Navigate to=\"/login\" /> : <Navigate to=\"/groups\" /> } />\n           \n  <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n*/\n\n\n\n/*\n//WORKING\n   <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <BrowserRouter>\n\n            <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n\n          </BrowserRouter>\n        </QueryClientProvider>\n      </div>\n    </LoginContext.Provider>\n\n\nimport React, { useState, useEffect, createContext } from \"react\";\n//import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n//import { Index } from \"./pages\";\n//import { About } from \"./pages/about\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport Home from './components/Home'\n\n\nfunction App() {\n  var userLoggedIn = 'false'\n  const [currentUser, setLoginState] = useState('null');\n\n  if(currentUser == 'null') {\n    userLoggedIn = 'false'  \n  } else {\n    userLoggedIn = 'true' \n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  return (\n    <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div>\n        <p> Username {currentUser} </p>\n        <p> Login State {userLoggedIn} </p>\n        <Login />\n        <Logout />\n        <Home />\n      </div>\n    </LoginContext.Provider>\n\n  );\n}\n\nexport default App;\n\n*/"]},"metadata":{},"sourceType":"module"}