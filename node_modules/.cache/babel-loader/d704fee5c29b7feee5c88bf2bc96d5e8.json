{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/posts/actions/NewPhotoPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios';\n\n//FUNCTION 1: New Post API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function makePostAPI(post) {\n  const formData = new FormData();\n  /*\n  postImage\n  postType\n  masterSite\n  postFrom\n  postTo\n  groupID\n  listID\n  postCaption\n  notificationMessage: Posted a Photo\n  notificationType: new_post_photo\n  notificationLink: http://localhost:3003/posts/group/77\n   */\n  formData.append(\"image\", image);\n  formData.append(\"description\", post.postCaptions);\n  const result = await axios.post('http://localhost:3003/post/photo/local/aws', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  console.log(result.data);\n  return result.data;\n}\nfunction NewPhotoPost(_ref) {\n  _s();\n  let {\n    groupID,\n    currentUser,\n    api\n  } = _ref;\n  const [file, setFile] = useState();\n  const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!');\n  //const [images, setImages] = useState([])\n\n  //FUNCTION 2: Handle New Post Submit Button\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setPostCaption(value);\n  };\n\n  //FUNCTION 3: File Upload Handling\n  const fileSelected = event => {\n    const file = event.target.files[0];\n    setFile(file);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    var newPost = {\n      masterSite: \"kite\",\n      postType: \"text\",\n      postFrom: currentUser,\n      postTo: groupID,\n      groupID: groupID,\n      listID: 0,\n      postCaption: postCaption,\n      notificationMessage: \"Posted a Message\",\n      notificationType: \"new_post_text\",\n      notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n    };\n    mutate(newPost);\n  };\n\n  //FUNCTION 3: React Query Mutation\n  const queryClient = useQueryClient();\n  const {\n    isLoading,\n    mutate\n  } = useMutation(makePostAPI, {\n    onSuccess: returnedData => {\n      queryClient.setQueryData(['group-posts', groupID], originalQueryData => {\n        var updatedPostData = structuredClone(originalQueryData);\n        let newPost = returnedData.data;\n        updatedPostData.unshift(newPost);\n        return updatedPostData;\n      });\n    }\n  });\n\n  //FUNCTION 4: React and Site Page\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Make a Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }, this), \"to Group \", groupID, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Current User: \", currentUser, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"postCaption\",\n        className: \"new-post-caption\",\n        type: \"text\",\n        value: postCaption,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" &nbsp \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: fileSelected,\n        className: \"simple-border\",\n        type: \"file\",\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(NewPhotoPost, \"+7zHAhKUy3G6ojxdAOMOPJCgBSY=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = NewPhotoPost;\nexport default NewPhotoPost;\n\n/*\n<input onChange={fileSelected} className=\"simple-border\" type=\"file\" accept=\"image/*\"></input>\n<input value={description} className=\"simple-border\" onChange={e => setDescription(e.target.value)} type=\"text\"></input>\n<button type=\"submit\">Submit</button>\n\n//WORKS FOR TEXT: Trying to build one with photo to AWS\n//FUNCTION 1: New Post API\nasync function makePostAPI(post) {\n    const postURL = \"http://localhost:3003/post/text\";\n    const response = await axios.post(postURL, post);\n\n    return response.data;\n} \n\nfunction NewPost({ groupID, currentUser, api }) {\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        //console.log(newPost)\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" className = \"new-post-caption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> &nbsp </p>\n                <input type=\"file\" id=\"myFile\" name=\"filename\"></input>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPost;\n*/\nvar _c;\n$RefreshReg$(_c, \"NewPhotoPost\");","map":{"version":3,"names":["React","useState","useMutation","useQueryClient","axios","makePostAPI","post","formData","FormData","append","image","postCaptions","result","headers","console","log","data","NewPhotoPost","groupID","currentUser","api","file","setFile","postCaption","setPostCaption","handleChange","event","name","value","target","fileSelected","files","handleSubmit","preventDefault","newPost","masterSite","postType","postFrom","postTo","listID","notificationMessage","notificationType","notificationLink","mutate","queryClient","isLoading","onSuccess","returnedData","setQueryData","originalQueryData","updatedPostData","structuredClone","unshift"],"sources":["/Users/david/Desktop/David/www/kite/src/components/posts/actions/NewPhotoPost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n\n//FUNCTION 1: New Post API\nasync function makePostAPI(post) {\n    const formData = new FormData();\n    /*\n    postImage\n    postType\n    masterSite\n    postFrom\n    postTo\n    groupID\n    listID\n    postCaption\n    notificationMessage: Posted a Photo\n    notificationType: new_post_photo\n    notificationLink: http://localhost:3003/posts/group/77\n\n    */\n    formData.append(\"image\", image)\n    formData.append(\"description\", post.postCaptions)\n    const result = await axios.post('http://localhost:3003/post/photo/local/aws', formData, { headers: {'Content-Type': 'multipart/form-data'}})\n  \n    console.log(result.data)\n    return result.data\n} \n\nfunction NewPhotoPost({ groupID, currentUser, api }) {\n    const [file, setFile] = useState()\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n    //const [images, setImages] = useState([])\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    //FUNCTION 3: File Upload Handling\n    const fileSelected = event => {\n        const file = event.target.files[0]\n            setFile(file)\n    }\n    \n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" className = \"new-post-caption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> &nbsp </p>\n                <input onChange={fileSelected} className=\"simple-border\" type=\"file\" accept=\"image/*\"></input>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPhotoPost;\n\n\n\n\n/*\n<input onChange={fileSelected} className=\"simple-border\" type=\"file\" accept=\"image/*\"></input>\n<input value={description} className=\"simple-border\" onChange={e => setDescription(e.target.value)} type=\"text\"></input>\n<button type=\"submit\">Submit</button>\n\n//WORKS FOR TEXT: Trying to build one with photo to AWS\n//FUNCTION 1: New Post API\nasync function makePostAPI(post) {\n    const postURL = \"http://localhost:3003/post/text\";\n    const response = await axios.post(postURL, post);\n\n    return response.data;\n} \n\nfunction NewPost({ groupID, currentUser, api }) {\n\n    //FUNCTION 2: Handle New Post Submit Button\n    const [postCaption, setPostCaption] = useState('Hiya sam! wanna go on a hike today the weather is perfect!')\n   \n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setPostCaption(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        var newPost = {\n            masterSite: \"kite\",\n            postType: \"text\",\n            postFrom: currentUser,\n            postTo: groupID,\n            groupID: groupID,\n            listID: 0,\n            postCaption: postCaption,\n            notificationMessage: \"Posted a Message\",   \n            notificationType: \"new_post_text\",\n            notificationLink: \"http://localhost:3003/posts/group/\" + groupID\n        }\n        //makePost(newPost)\n        //console.log(newPost)\n        mutate(newPost)\n        \n    }\n\n    //FUNCTION 3: React Query Mutation\n    const queryClient = useQueryClient();\n    const { isLoading, mutate } = useMutation(makePostAPI, {\n        onSuccess: (returnedData) => {\n          queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n                var updatedPostData = structuredClone(originalQueryData);\n                let newPost = returnedData.data;\n\n                updatedPostData.unshift(newPost);\n\n                return updatedPostData;     \n            })\n        }\n      })\n\n    //FUNCTION 4: React and Site Page\n    return (\n        <div className=\"new-post\">\n            <p><b> Make a Post </b>to Group { groupID } </p>\n            <p> Current User: { currentUser} </p>\n            <form onSubmit={ handleSubmit }>\n                <label> </label> \n                <input name= \"postCaption\" className = \"new-post-caption\" type=\"text\" value={ postCaption } onChange={handleChange} />\n                <p> &nbsp </p>\n                <input type=\"file\" id=\"myFile\" name=\"filename\"></input>\n                <button type=\"submit\"> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPost;\n*/"],"mappings":"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QAAA;QAAA;MAAA,QAAS,eAC9F;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACpC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GAlEQb,YAAY;EAAA,QAsCGd,cAAc,EACJD,WAAW;AAAA;AAAA,KAvCpCe,YAAY;AAoErB,eAAeA,YAAY;;AAK3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7EA;AAAA"},"metadata":{},"sourceType":"module"}