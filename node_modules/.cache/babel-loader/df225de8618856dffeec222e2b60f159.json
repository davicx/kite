{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/friends/actions/AcceptFriendInvite.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios';\n\n//PART 1: API Call\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function acceptFriendInviteAPI(acceptFriendInvite) {\n  const requestAPI = acceptFriendInvite.api;\n  const requestBody = acceptFriendInvite.acceptFriendInviteBody;\n  const acceptFriendInviteURL = \"http://localhost:3003/friend/accept/\";\n  const response = await requestAPI.post(acceptFriendInviteURL, requestBody);\n  //console.log(response.data)\n\n  return response.data;\n}\n\n//COMPONENT: Friend Request\nconst AcceptFriendInvite = _ref => {\n  _s();\n  let {\n    api,\n    currentUser,\n    friend\n  } = _ref;\n  const queryClient = useQueryClient();\n\n  //Button: Add a Friend on Button Click \n  const handleAcceptFriendInvite = (api, currentUser, friendName) => {\n    console.log(currentUser + \" wants to accept \" + friendName + \" as a friend!\");\n    var acceptFriendInviteBody = {\n      masterSite: \"kite\",\n      currentUser: currentUser,\n      friendName: friendName\n    };\n    var acceptFriendInvite = {\n      api: api,\n      acceptFriendInviteBody: acceptFriendInviteBody\n    };\n    mutate(acceptFriendInvite);\n  };\n\n  //Action: Use React Query to make call\n  const {\n    isLoading,\n    mutate\n  } = useMutation(acceptFriendInviteAPI, {\n    onSuccess: returnedData => {\n      queryClient.setQueryData(['all-users'], originalQueryData => {\n        var updatedQueryData = structuredClone(originalQueryData);\n        console.log(returnedData);\n        console.log(updatedQueryData);\n\n        /*\n        JUST NEEDS THIS = )\n        const statusCode = returnedData.statusCode\n        const currentUser = returnedData.data.currentUser\n        const newFriend = returnedData.data.friendName\n             //Loop over all the users and update the new friend to be request pending\n        for (let i = 0; i < updatedQueryData.data.length; i++) {\n            //console.log(updatedQueryData.data[i].friendName + \" \" + newFriend)\n            if(updatedQueryData.data[i].friendName.toUpperCase() === newFriend.toUpperCase()) {\n                updatedQueryData.data[i].friendshipKey = \"not_friends\"\n            }\n        }\n        \n        */\n        return updatedQueryData;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"\",\n      onClick: () => {\n        handleAcceptFriendInvite(api, currentUser, friend.friendName);\n      },\n      children: \"Accept\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(AcceptFriendInvite, \"sG6dR2SYHBppzfZZ0/U+hBJTR78=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = AcceptFriendInvite;\nexport default AcceptFriendInvite;\nvar _c;\n$RefreshReg$(_c, \"AcceptFriendInvite\");","map":{"version":3,"names":["React","useMutation","useQueryClient","axios","acceptFriendInviteAPI","acceptFriendInvite","requestAPI","api","requestBody","acceptFriendInviteBody","acceptFriendInviteURL","response","post","data","AcceptFriendInvite","currentUser","friend","queryClient","handleAcceptFriendInvite","friendName","console","log","masterSite","mutate","isLoading","onSuccess","returnedData","setQueryData","originalQueryData","updatedQueryData","structuredClone"],"sources":["/Users/david/Desktop/David/www/kite/src/components/friends/actions/AcceptFriendInvite.js"],"sourcesContent":["import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//PART 1: API Call\nasync function acceptFriendInviteAPI(acceptFriendInvite) {\n    const requestAPI = acceptFriendInvite.api\n    const requestBody = acceptFriendInvite.acceptFriendInviteBody\n\n    const acceptFriendInviteURL = \"http://localhost:3003/friend/accept/\"\n    const response = await requestAPI.post(acceptFriendInviteURL, requestBody);\n    //console.log(response.data)\n  \n    return response.data;\n} \n\n\n//COMPONENT: Friend Request\nconst AcceptFriendInvite = ({api, currentUser, friend}) => {\n    const queryClient = useQueryClient();\n\n    //Button: Add a Friend on Button Click \n    const handleAcceptFriendInvite = (api, currentUser, friendName) => {\n        console.log(currentUser + \" wants to accept \" + friendName + \" as a friend!\")\n        \n        var acceptFriendInviteBody = {\n            masterSite: \"kite\",\n            currentUser: currentUser,\n            friendName: friendName\n        }\n\n        var acceptFriendInvite = {\n            api: api,\n            acceptFriendInviteBody: acceptFriendInviteBody\n        }\n\n        mutate(acceptFriendInvite)\n       \n    }\n\n        //Action: Use React Query to make call\n        const { isLoading, mutate } = useMutation(acceptFriendInviteAPI, {\n            onSuccess: (returnedData) => {\n                queryClient.setQueryData(['all-users'], (originalQueryData) => {\n                var updatedQueryData = structuredClone(originalQueryData);\n                console.log(returnedData)\n                console.log(updatedQueryData)\n\n                /*\n                JUST NEEDS THIS = )\n                const statusCode = returnedData.statusCode\n                const currentUser = returnedData.data.currentUser\n                const newFriend = returnedData.data.friendName\n    \n                //Loop over all the users and update the new friend to be request pending\n                for (let i = 0; i < updatedQueryData.data.length; i++) {\n                    //console.log(updatedQueryData.data[i].friendName + \" \" + newFriend)\n                    if(updatedQueryData.data[i].friendName.toUpperCase() === newFriend.toUpperCase()) {\n                        updatedQueryData.data[i].friendshipKey = \"not_friends\"\n                    }\n                }\n                \n                */\n                return updatedQueryData;\n            \n        \n                })\n            \n            }\n        })\n\n            \n    return (     \n        <div className=\"\" >\n            <button type=\"submit\" className = \"\" onClick={() => { handleAcceptFriendInvite(api, currentUser, friend.friendName) }}>Accept</button>\n        </div>       \n        );\n    }  \n\nexport default AcceptFriendInvite;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AACzD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA;AACA,eAAeC,qBAAqB,CAACC,kBAAkB,EAAE;EACrD,MAAMC,UAAU,GAAGD,kBAAkB,CAACE,GAAG;EACzC,MAAMC,WAAW,GAAGH,kBAAkB,CAACI,sBAAsB;EAE7D,MAAMC,qBAAqB,GAAG,sCAAsC;EACpE,MAAMC,QAAQ,GAAG,MAAML,UAAU,CAACM,IAAI,CAACF,qBAAqB,EAAEF,WAAW,CAAC;EAC1E;;EAEA,OAAOG,QAAQ,CAACE,IAAI;AACxB;;AAGA;AACA,MAAMC,kBAAkB,GAAG,QAAgC;EAAA;EAAA,IAA/B;IAACP,GAAG;IAAEQ,WAAW;IAAEC;EAAM,CAAC;EAClD,MAAMC,WAAW,GAAGf,cAAc,EAAE;;EAEpC;EACA,MAAMgB,wBAAwB,GAAG,CAACX,GAAG,EAAEQ,WAAW,EAAEI,UAAU,KAAK;IAC/DC,OAAO,CAACC,GAAG,CAACN,WAAW,GAAG,mBAAmB,GAAGI,UAAU,GAAG,eAAe,CAAC;IAE7E,IAAIV,sBAAsB,GAAG;MACzBa,UAAU,EAAE,MAAM;MAClBP,WAAW,EAAEA,WAAW;MACxBI,UAAU,EAAEA;IAChB,CAAC;IAED,IAAId,kBAAkB,GAAG;MACrBE,GAAG,EAAEA,GAAG;MACRE,sBAAsB,EAAEA;IAC5B,CAAC;IAEDc,MAAM,CAAClB,kBAAkB,CAAC;EAE9B,CAAC;;EAEG;EACA,MAAM;IAAEmB,SAAS;IAAED;EAAO,CAAC,GAAGtB,WAAW,CAACG,qBAAqB,EAAE;IAC7DqB,SAAS,EAAGC,YAAY,IAAK;MACzBT,WAAW,CAACU,YAAY,CAAC,CAAC,WAAW,CAAC,EAAGC,iBAAiB,IAAK;QAC/D,IAAIC,gBAAgB,GAAGC,eAAe,CAACF,iBAAiB,CAAC;QACzDR,OAAO,CAACC,GAAG,CAACK,YAAY,CAAC;QACzBN,OAAO,CAACC,GAAG,CAACQ,gBAAgB,CAAC;;QAE7B;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAEgB,OAAOA,gBAAgB;MAGvB,CAAC,CAAC;IAEN;EACJ,CAAC,CAAC;EAGN,oBACI;IAAK,SAAS,EAAC,EAAE;IAAA,uBACb;MAAQ,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAG,EAAE;MAAC,OAAO,EAAE,MAAM;QAAEX,wBAAwB,CAACX,GAAG,EAAEQ,WAAW,EAAEC,MAAM,CAACG,UAAU,CAAC;MAAC,CAAE;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QACpI;AAEV,CAAC;AAAA,GA3DCL,kBAAkB;EAAA,QACAZ,cAAc,EAsBAD,WAAW;AAAA;AAAA,KAvB3Ca,kBAAkB;AA6DxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}