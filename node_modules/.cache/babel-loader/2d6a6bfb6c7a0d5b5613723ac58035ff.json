{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/groups/CreateGroup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from \"axios\";\n\n//TEMP \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar david = {\n  userID: 1,\n  userName: \"david\"\n};\nvar sam = {\n  userID: 2,\n  userName: \"sam\"\n};\nvar frodo = {\n  userID: 3,\n  userName: \"frodo\"\n};\nvar merry = {\n  userID: 4,\n  userName: \"merry\"\n};\nvar friendsArray = [david, sam, frodo, merry];\n\n//Function: New Group API\nasync function createGroupAPI(newGroup) {\n  const groupURL = \"http://localhost:3003/group/create/\";\n  //const response = await axios.post('')\n  const response = await axios.post(groupURL, newGroup);\n  //setMessage(response.data)\n  console.log(response.data);\n  return response.data;\n}\nfunction CreateGroup(_ref) {\n  _s();\n  let {\n    api,\n    currentUser\n  } = _ref;\n  const [groupName, setGroupName] = useState('New Group!');\n  const [availableFriends, updateAvailableFriends] = useState(friendsArray);\n  const [newGroupUsers, updateNewGroupUsers] = useState([]);\n\n  //FUNCTIONS: Change Functions\n  //Function: Handle Group Name Change\n  const handleNameChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setGroupName(value);\n  };\n\n  //Function: New Group Submit \n  const handleSubmit = event => {\n    event.preventDefault();\n    const newGroup = {\n      \"currentUser\": currentUser,\n      \"groupName\": groupName,\n      \"groupType\": \"kite\",\n      \"groupPrivate\": 1,\n      \"groupUsers\": [\"davey\", \"sam\", \"frodo\"],\n      \"notificationMessage\": currentUser + \" invited you to a new Group\",\n      \"notificationType\": \"group_invite\",\n      \"notificationLink\": \"http://localhost:3003/group/77\"\n    };\n    //mutate(newGroup)\n    console.log(newGroup);\n  };\n\n  //FUNCTIONS: Add or Remove Users\n  //Function: Add a new group User\n  const addGroupUser = userName => {\n    //Step 1: Add New Group User to Local Storage Pending Group\n    console.log(\"You are going to add \" + userName);\n    let updatedCurrentGroupUsersArray = [...currentGroupUsers];\n    let newUser = availableFriends.find(x => x.userName === userName);\n    updatedCurrentGroupUsersArray.push(newUser);\n    updateCurrentGroupUsers(updatedCurrentGroupUsersArray);\n\n    //Step 2: Remove User from Current available Friends\n    const updatedFriendsArray = availableFriends.filter(user => user.userName !== userName);\n    updateAvailableFriends(updatedFriendsArray);\n  };\n  //Function: Remove a new group User\n\n  //FUNCTIONS: React Query Functions\n  //Function: React Query Mutation\n  const queryClient = useQueryClient();\n  const {\n    isLoading,\n    mutate\n  } = useMutation(createGroupAPI, {\n    onSuccess: returnedData => {\n      queryClient.setQueryData(['user-groups', currentUser], originalQueryData => {\n        var updatedGroupData = structuredClone(originalQueryData);\n        let newGroup = {\n          \"groupID\": returnedData.data.groupID,\n          \"groupName\": returnedData.data.groupName\n        };\n        updatedGroupData.groups.push(newGroup);\n        console.log(updatedGroupData);\n        return updatedGroupData;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"group-name\",\n        className: \"loginInput\",\n        type: \"text\",\n        value: groupName,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", groupName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"loginButton\",\n        children: \" Create New Group \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" Group Users \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), newGroupUsers.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", user.userName, \" \"]\n    }, user.userID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateGroup, \"z0qZaWmseZkP+ahh98SynjmpLZk=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = CreateGroup;\nexport default CreateGroup;\nvar _c;\n$RefreshReg$(_c, \"CreateGroup\");","map":{"version":3,"names":["React","useState","useMutation","useQueryClient","axios","david","userID","userName","sam","frodo","merry","friendsArray","createGroupAPI","newGroup","groupURL","response","post","console","log","data","CreateGroup","api","currentUser","groupName","setGroupName","availableFriends","updateAvailableFriends","newGroupUsers","updateNewGroupUsers","handleNameChange","event","name","value","target","handleSubmit","preventDefault","addGroupUser","updatedCurrentGroupUsersArray","currentGroupUsers","newUser","find","x","push","updateCurrentGroupUsers","updatedFriendsArray","filter","user","queryClient","isLoading","mutate","onSuccess","returnedData","setQueryData","originalQueryData","updatedGroupData","structuredClone","groupID","groups","map"],"sources":["/Users/david/Desktop/David/www/kite/src/components/groups/CreateGroup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from \"axios\";\n\n//TEMP \nvar david = {\n  userID: 1,\n  userName: \"david\",\n}\nvar sam = {\n  userID: 2,\n  userName: \"sam\",\n}\nvar frodo = {\n  userID: 3,\n  userName: \"frodo\",\n}\nvar merry = {\n  userID: 4,\n  userName: \"merry\",\n}\n\nvar friendsArray = [david, sam, frodo, merry]\n\n//Function: New Group API\nasync function createGroupAPI(newGroup) {\n  const groupURL = \"http://localhost:3003/group/create/\";\n  //const response = await axios.post('')\n  const response = await axios.post(groupURL, newGroup);\n  //setMessage(response.data)\n  console.log(response.data)\n  return response.data;\n}\n\nfunction CreateGroup({api, currentUser}) {   \n   const [groupName, setGroupName] = useState('New Group!')\n   const [availableFriends, updateAvailableFriends] = useState(friendsArray)\n   const [newGroupUsers, updateNewGroupUsers] = useState([])\n\n\n  //FUNCTIONS: Change Functions\n  //Function: Handle Group Name Change\n  const handleNameChange = (event) => {\n      const { name, value } = event.target\n      setGroupName(value)\n  }\n\n  //Function: New Group Submit \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newGroup = {\n          \"currentUser\": currentUser,\n          \"groupName\": groupName,\n          \"groupType\": \"kite\",\n          \"groupPrivate\": 1,\n          \"groupUsers\": [\"davey\", \"sam\", \"frodo\"],\n          \"notificationMessage\": currentUser + \" invited you to a new Group\",  \n          \"notificationType\": \"group_invite\",\n          \"notificationLink\": \"http://localhost:3003/group/77\"   \n      }\n      //mutate(newGroup)\n      console.log(newGroup)   \n  }\n\n  //FUNCTIONS: Add or Remove Users\n  //Function: Add a new group User\n  const addGroupUser = (userName) => {\n    \n    //Step 1: Add New Group User to Local Storage Pending Group\n    console.log(\"You are going to add \" + userName)\n    let updatedCurrentGroupUsersArray = [...currentGroupUsers];\n    let newUser = availableFriends.find(x => x.userName === userName);\n\n    updatedCurrentGroupUsersArray.push(newUser);\n    updateCurrentGroupUsers(updatedCurrentGroupUsersArray);\n \n    //Step 2: Remove User from Current available Friends\n    const updatedFriendsArray = availableFriends.filter(user => user.userName !== userName);\n    updateAvailableFriends(updatedFriendsArray)  \n  \n  }\n  //Function: Remove a new group User\n\n  //FUNCTIONS: React Query Functions\n  //Function: React Query Mutation\n  const queryClient = useQueryClient();\n  const { isLoading, mutate } = useMutation(createGroupAPI, {\n      onSuccess: (returnedData) => {\n        queryClient.setQueryData(['user-groups', currentUser], (originalQueryData) => {\n              var updatedGroupData = structuredClone(originalQueryData);\n\n              let newGroup = {\n                  \"groupID\": returnedData.data.groupID,\n                  \"groupName\": returnedData.data.groupName\n              }\n              updatedGroupData.groups.push(newGroup)    \n\n              console.log(updatedGroupData)\n              return updatedGroupData;     \n          })\n      }\n    })\n\n\n    return (\n    <div className = \"login\">\n      <form onSubmit={ handleSubmit }>\n        <input name= \"group-name\" className=\"loginInput\" type=\"text\" value={ groupName } onChange={ handleNameChange } />\n        <p> { groupName } </p>\n        <button type=\"submit\" className=\"loginButton\" > Create New Group </button>\n      </form>\n      <h4> Group Users </h4>\n        { newGroupUsers.map(user => (\n            <p key={user.userID}> { user.userName } </p>\n          ))\n        }\n    </div>\n\n    );\n  }\n\nexport default CreateGroup;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}