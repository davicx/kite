{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/pages/GroupsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { LoginContext } from \"../functions/context/LoginContext\";\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport functions from \"../functions/functions\";\nimport Refresh from '../components/login/Refresh';\nimport Groups from '../components/groups/GroupList';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosRequest = axios.create({\n  withCredentials: true\n});\n\n//STATUS 200: Good Request \naxiosRequest.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  console.log(\"INTERCEPTOR: Looks good! \");\n  return response;\n}, function (error) {\n  console.log(error.response.status);\n  console.log(error.response);\n\n  //STATUS 498:  Need to get a access token\n  console.log(\"INTERCEPTOR: Need to get a access token or logout the user\");\n  if (error.response.status == 498) {\n    console.log(\"INTERCEPTOR 498: We got a 498 so we need a new access token. Will send refresh token \");\n    const refreshURL = \"http://localhost:3003/refresh/tokens\";\n\n    //const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\n    //const { data, error, isPending } = useRefreshToken(refreshURL);\n    const refreshOutcome = functions.refreshToken();\n    console.log(\"We refreshed the access token!\");\n  }\n\n  //STATUS 440: Logout User\n  if (error.response.status == 440) {\n    console.log(\"INTERCEPTOR 440: We got a 440 we couldn't refresh the access token because the refresh token was no good need to logout the user\");\n    localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\"));\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nfunction GroupsPage() {\n  _s();\n  console.log(\"PAGE: GroupsPage\");\n  const {\n    currentUser,\n    userLoggedIn\n  } = useLoginStatus();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Current User: \", currentUser]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Groups, {\n      currentUser: currentUser,\n      api: axiosRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(GroupsPage, \"sCJdjaKVKCqik25DeUhmSx2LHLQ=\", false, function () {\n  return [useLoginStatus];\n});\n_c = GroupsPage;\nexport default GroupsPage;\nvar _c;\n$RefreshReg$(_c, \"GroupsPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","LoginContext","useLoginStatus","functions","Refresh","Groups","axios","axiosRequest","create","withCredentials","interceptors","response","use","console","log","error","status","refreshURL","refreshOutcome","refreshToken","localStorage","setItem","JSON","stringify","window","location","href","Promise","reject","GroupsPage","currentUser","userLoggedIn"],"sources":["/Users/david/Desktop/David/www/kite/src/pages/GroupsPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate  } from \"react-router-dom\"\nimport { LoginContext } from \"../functions/context/LoginContext\";\nimport useLoginStatus from '../functions/hooks/useLoginStatus';\nimport functions from \"../functions/functions\";\n\nimport Refresh from '../components/login/Refresh';\nimport Groups from '../components/groups/GroupList';\n\nimport axios from 'axios'\n\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})  \n\n//STATUS 200: Good Request \naxiosRequest.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  console.log(\"INTERCEPTOR: Looks good! \")\n  return response;\n}, function (error) {\n  console.log(error.response.status)\n  console.log(error.response)\n  \n  //STATUS 498:  Need to get a access token\n  console.log(\"INTERCEPTOR: Need to get a access token or logout the user\")\n  if(error.response.status == 498) {\n    console.log(\"INTERCEPTOR 498: We got a 498 so we need a new access token. Will send refresh token \")\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n\n    //const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\n    //const { data, error, isPending } = useRefreshToken(refreshURL);\n    const refreshOutcome = functions.refreshToken();\n    console.log(\"We refreshed the access token!\")\n\n  } \n\n  //STATUS 440: Logout User\n  if(error.response.status == 440) {\n    console.log(\"INTERCEPTOR 440: We got a 440 we couldn't refresh the access token because the refresh token was no good need to logout the user\")  \n    localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\")); \n    window.location.href = '/login';\n  }\n  \n  return Promise.reject(error);\n  \n});\n\n\nfunction GroupsPage() {\n  console.log(\"PAGE: GroupsPage\")\n  const { currentUser, userLoggedIn  } = useLoginStatus();\n  \n  return (\n    <div className=\"user\">\n        <p> Current User: {currentUser}</p>\n        <Groups currentUser = { currentUser } api = { axiosRequest } />   \n        <Refresh /> \n    </div>\n  );\n}\n\nexport default GroupsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAS,kBAAkB;AAC/C,SAASC,YAAY,QAAQ,mCAAmC;AAChE,OAAOC,cAAc,MAAM,mCAAmC;AAC9D,OAAOC,SAAS,MAAM,wBAAwB;AAE9C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,MAAM,MAAM,gCAAgC;AAEnD,OAAOC,KAAK,MAAM,OAAO;AAAA;AAGzB,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAAC;EAChCC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAF,YAAY,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAUD,QAAQ,EAAE;EACzD;EACAE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,OAAOH,QAAQ;AACjB,CAAC,EAAE,UAAUI,KAAK,EAAE;EAClBF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACJ,QAAQ,CAACK,MAAM,CAAC;EAClCH,OAAO,CAACC,GAAG,CAACC,KAAK,CAACJ,QAAQ,CAAC;;EAE3B;EACAE,OAAO,CAACC,GAAG,CAAC,4DAA4D,CAAC;EACzE,IAAGC,KAAK,CAACJ,QAAQ,CAACK,MAAM,IAAI,GAAG,EAAE;IAC/BH,OAAO,CAACC,GAAG,CAAC,uFAAuF,CAAC;IACpG,MAAMG,UAAU,GAAG,sCAAsC;;IAEzD;IACA;IACA,MAAMC,cAAc,GAAGf,SAAS,CAACgB,YAAY,EAAE;IAC/CN,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAE/C;;EAEA;EACA,IAAGC,KAAK,CAACJ,QAAQ,CAACK,MAAM,IAAI,GAAG,EAAE;IAC/BH,OAAO,CAACC,GAAG,CAAC,kIAAkI,CAAC;IAC/IM,YAAY,CAACC,OAAO,CAAC,yBAAyB,EAAEC,IAAI,CAACC,SAAS,CAAC,MAAM,CAAC,CAAC;IACvEC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACb,KAAK,CAAC;AAE9B,CAAC,CAAC;AAGF,SAASc,UAAU,GAAG;EAAA;EACpBhB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/B,MAAM;IAAEgB,WAAW;IAAEC;EAAc,CAAC,GAAG7B,cAAc,EAAE;EAEvD,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAA,WAAG,iBAAe,EAAC4B,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACnC,QAAC,MAAM;MAAC,WAAW,EAAKA,WAAa;MAAC,GAAG,EAAKvB;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/D,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEV;AAAC,GAXQsB,UAAU;EAAA,QAEsB3B,cAAc;AAAA;AAAA,KAF9C2B,UAAU;AAanB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}