{"ast":null,"code":"var _jsxFileName = \"/Users/chavasqu/Desktop/David/www/kite/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Routes, Link, NavLink, useLocation } from 'react-router-dom'; //import { BrowserRouter, Link, Navigate, Route, Routes } from 'react-router-dom'\n\nimport { QueryClientProvider, QueryClient } from 'react-query'; //https://html5boilerplate.com/\n\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Groups from './pages/Groups';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\nimport PrivateRoutes from './functions/utils/PrivateRoutes.js'; //import { LoginContext } from \"./functions/context/LoginContext\";\n//import { sayHello } from './functions/functions';\n//STOP 39: Search Parameters \n\nimport './index.css';\nimport './style/style.css';\nimport './style/external/normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\n\nfunction App() {\n  _s();\n\n  const [currentUser, setLoginState] = useState('null');\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    console.log(\"APP useEffect \" + currentUserLoggedIn);\n    setLoginState(currentUserLoggedIn);\n  }, []);\n  var userLoggedIn = false;\n\n  if (currentUser == 'null') {\n    userLoggedIn = false;\n  } else {\n    userLoggedIn = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"3AgNPQ0t8MubFhGBwm7Fv14sljw=\");\n\n_c = App;\nexport default App;\n/*\n  <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n*/\n\n/*\n//WORKING\n   <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <BrowserRouter>\n\n            <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n\n          </BrowserRouter>\n        </QueryClientProvider>\n      </div>\n    </LoginContext.Provider>\nimport React, { useState, useEffect, createContext } from \"react\";\n//import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n//import { Index } from \"./pages\";\n//import { About } from \"./pages/about\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport Home from './components/Home'\n\n\nfunction App() {\n  var userLoggedIn = 'false'\n  const [currentUser, setLoginState] = useState('null');\n\n  if(currentUser == 'null') {\n    userLoggedIn = 'false'  \n  } else {\n    userLoggedIn = 'true' \n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  return (\n    <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div>\n        <p> Username {currentUser} </p>\n        <p> Login State {userLoggedIn} </p>\n        <Login />\n        <Logout />\n        <Home />\n      </div>\n    </LoginContext.Provider>\n\n  );\n}\n\nexport default App;\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chavasqu/Desktop/David/www/kite/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Routes","Link","NavLink","useLocation","QueryClientProvider","QueryClient","Login","Register","Groups","NotFound","IndividualGroup","PrivateRoutes","queryClient","App","currentUser","setLoginState","data","localStorage","getItem","currentUserLoggedIn","JSON","parse","console","log","userLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,IAAvC,EAA6CC,OAA7C,EAAsDC,WAAtD,QAAwE,kBAAxE,C,CACA;;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,aAAjD,C,CACA;;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,aAAP,MAA0B,oCAA1B,C,CACA;AACA;AACA;;AACA,OAAO,aAAP;AACA,OAAO,mBAAP;AACA,OAAO,gCAAP;;AAEA,MAAMC,WAAW,GAAG,IAAIP,WAAJ,EAApB;;AAEA,SAASQ,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BnB,QAAQ,CAAC,MAAD,CAA7C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAb;AACA,UAAMC,mBAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAA5B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBJ,mBAA/B;AACAJ,IAAAA,aAAa,CAACI,mBAAD,CAAb;AACD,GALQ,EAKN,EALM,CAAT;AAOA,MAAIK,YAAY,GAAG,KAAnB;;AAEA,MAAGV,WAAW,IAAI,MAAlB,EAA0B;AACtBU,IAAAA,YAAY,GAAG,KAAf;AACD,GAFH,MAES;AACLA,IAAAA,YAAY,GAAG,IAAf;AACD;;AAEH,sBAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,mBAAD;AAAqB,MAAA,MAAM,EAAEZ;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFJ;AAYD;;GA9BQC,G;;KAAAA,G;AAgCT,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Routes, Link, NavLink, useLocation} from 'react-router-dom'\n//import { BrowserRouter, Link, Navigate, Route, Routes } from 'react-router-dom'\nimport { QueryClientProvider, QueryClient } from 'react-query';\n//https://html5boilerplate.com/\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Groups from './pages/Groups';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\nimport PrivateRoutes from './functions/utils/PrivateRoutes.js';\n//import { LoginContext } from \"./functions/context/LoginContext\";\n//import { sayHello } from './functions/functions';\n//STOP 39: Search Parameters \nimport './index.css';\nimport './style/style.css';\nimport './style/external/normalize.css';\n\nconst queryClient = new QueryClient()\n\nfunction App() {\n  const [currentUser, setLoginState] = useState('null');\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    console.log(\"APP useEffect \" + currentUserLoggedIn)\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  var userLoggedIn = false\n\n  if(currentUser == 'null') {\n      userLoggedIn = false\n    } else {\n      userLoggedIn = true \n    }\n\n  return (\n    \n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n     \n\n        \n\n        </QueryClientProvider>\n      </div>\n\n  );\n}\n\nexport default App;\n\n/*\n  <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n*/\n\n\n\n/*\n//WORKING\n   <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <BrowserRouter>\n\n            <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n\n          </BrowserRouter>\n        </QueryClientProvider>\n      </div>\n    </LoginContext.Provider>\nimport React, { useState, useEffect, createContext } from \"react\";\n//import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n//import { Index } from \"./pages\";\n//import { About } from \"./pages/about\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport Home from './components/Home'\n\n\nfunction App() {\n  var userLoggedIn = 'false'\n  const [currentUser, setLoginState] = useState('null');\n\n  if(currentUser == 'null') {\n    userLoggedIn = 'false'  \n  } else {\n    userLoggedIn = 'true' \n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  return (\n    <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div>\n        <p> Username {currentUser} </p>\n        <p> Login State {userLoggedIn} </p>\n        <Login />\n        <Logout />\n        <Home />\n      </div>\n    </LoginContext.Provider>\n\n  );\n}\n\nexport default App;\n\n*/"]},"metadata":{},"sourceType":"module"}