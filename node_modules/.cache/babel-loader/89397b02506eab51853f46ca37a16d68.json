{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nconst api = axios.create({\n  withCredentials: true\n});\nconst useRefreshToken = refreshURL => {\n  _s();\n  const localData = localStorage.getItem(\"localStorageCurrentUser\");\n  const userName = JSON.parse(localData);\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      api.post(refreshURL, {\n        userName: userName,\n        refreshToken: \"dontneedheretoken\"\n      }).then(function (response) {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n        console.log(response.data);\n        return response.data;\n      }).catch(function (error) {\n        setIsPending(false);\n        setError(err.message);\n        //console.log(error);\n      });\n\n      ////\n      /*\n      fetch(refreshURL)\n      .then(res => {\n        if (!res.ok) { \n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch(err => {\n        setIsPending(false);\n        setError(err.message);\n      })\n      */\n      ////\n    }, 1000);\n  }, [refreshURL]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useRefreshToken, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useRefreshToken;\n\n/*useRefreshToken\nasync function refreshToken() {\n   const refreshURL = \"http://localhost:3003/refresh/tokens\"\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const userName = JSON.parse(data);\n    //console.log(\"REFRESH TOKEN: you are refreshing for\" + userName )\n    //STEP 1: Call Logout API\n    axiosRequest.post(refreshURL, {\n      userName: userName,\n      refreshToken: \"dontneedheretoken\"\n    })\n    .then(function (response) {\n      console.log(response.data)\n      return response.data;\n    })\n    .catch(function (error) {\n      //console.log(error);\n    });\n    \n}\n*/","map":{"version":3,"names":["axios","api","create","withCredentials","useRefreshToken","refreshURL","localData","localStorage","getItem","userName","JSON","parse","data","setData","useState","isPending","setIsPending","error","setError","useEffect","setTimeout","post","refreshToken","then","response","console","log","catch","err","message"],"sources":["/Users/david/Desktop/David/www/kite/src/functions/hooks/useRefreshToken.js"],"sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n    withCredentials: true\n})  \n\nconst useRefreshToken = (refreshURL) => {\n    const localData = localStorage.getItem(\"localStorageCurrentUser\");\n    const userName = JSON.parse(localData);\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n  \n    useEffect(() => {\n      setTimeout(() => {\n        api.post(refreshURL, {\n            userName: userName,\n            refreshToken: \"dontneedheretoken\"\n          })\n          .then(function (response) {\n            setIsPending(false);\n            setData(data);\n            setError(null);\n            console.log(response.data)\n            return response.data;\n          })\n          .catch(function (error) {\n            setIsPending(false);\n            setError(err.message);\n            //console.log(error);\n          });\n          \n        ////\n        /*\n        fetch(refreshURL)\n        .then(res => {\n          if (!res.ok) { \n            throw Error('could not fetch the data for that resource');\n          } \n          return res.json();\n        })\n        .then(data => {\n          setIsPending(false);\n          setData(data);\n          setError(null);\n        })\n        .catch(err => {\n          setIsPending(false);\n          setError(err.message);\n        })\n        */\n        ////\n\n      }, 1000);\n    }, [refreshURL])\n  \n    return { data, isPending, error };\n  }\n\nexport default useRefreshToken;\n\n  /*useRefreshToken\nasync function refreshToken() {\n\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const userName = JSON.parse(data);\n      //console.log(\"REFRESH TOKEN: you are refreshing for\" + userName )\n      //STEP 1: Call Logout API\n      axiosRequest.post(refreshURL, {\n        userName: userName,\n        refreshToken: \"dontneedheretoken\"\n      })\n      .then(function (response) {\n        console.log(response.data)\n        return response.data;\n      })\n      .catch(function (error) {\n        //console.log(error);\n      });\n      \n  }\n  */"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEF,MAAMC,eAAe,GAAIC,UAAU,IAAK;EAAA;EACpC,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,yBAAyB,CAAC;EACjE,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;EACtC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAExCK,SAAS,CAAC,MAAM;IACdC,UAAU,CAAC,MAAM;MACfnB,GAAG,CAACoB,IAAI,CAAChB,UAAU,EAAE;QACjBI,QAAQ,EAAEA,QAAQ;QAClBa,YAAY,EAAE;MAChB,CAAC,CAAC,CACDC,IAAI,CAAC,UAAUC,QAAQ,EAAE;QACxBR,YAAY,CAAC,KAAK,CAAC;QACnBH,OAAO,CAACD,IAAI,CAAC;QACbM,QAAQ,CAAC,IAAI,CAAC;QACdO,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACZ,IAAI,CAAC;QAC1B,OAAOY,QAAQ,CAACZ,IAAI;MACtB,CAAC,CAAC,CACDe,KAAK,CAAC,UAAUV,KAAK,EAAE;QACtBD,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;QACrB;MACF,CAAC,CAAC;;MAEJ;MACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACQ;IAEF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,CAACxB,UAAU,CAAC,CAAC;EAEhB,OAAO;IAAEO,IAAI;IAAEG,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAAA,GAnDGb,eAAe;AAqDrB,eAAeA,eAAe;;AAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}