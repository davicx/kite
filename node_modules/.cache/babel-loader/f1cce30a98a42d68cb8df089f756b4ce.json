{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/friends/actions/FriendRequest.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios';\n\n//PART 1: API Call\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function cancelFriendRequestAPI(cancelFriendRequest) {\n  const requestAPI = cancelFriendRequest.api;\n  const requestBody = cancelFriendRequest.cancelFriendRequestBody;\n  const cancelFriendRequestURL = \"http://localhost:3003/friend/cancel/\";\n  const response = await requestAPI.post(cancelFriendRequestURL, requestBody);\n  //console.log(response.data)\n\n  return response.data;\n}\n\n//COMPONENT: Friend Request\nconst FriendRequest = _ref => {\n  _s();\n  let {\n    api,\n    currentUser,\n    friend\n  } = _ref;\n  const queryClient = useQueryClient();\n\n  //Button: Add a Friend on Button Click \n  const handleCancelFriendRequest = (api, currentUser, friendName) => {\n    console.log(currentUser + \" wants to cancel \" + friend.friendName + \" as a friend!\");\n    var cancelFriendRequestBody = {\n      masterSite: \"kite\",\n      currentUser: currentUser,\n      friendName: friendName\n    };\n    var cancelFriendRequest = {\n      api: api,\n      cancelFriendRequestBody: cancelFriendRequestBody\n    };\n    mutate(cancelFriendRequest);\n  };\n\n  //Action: Use React Query to make call\n  const {\n    isLoading,\n    mutate\n  } = useMutation(cancelFriendRequestAPI, {\n    onSuccess: returnedData => {\n      queryClient.setQueryData(['all-users'], originalQueryData => {\n        var updatedQueryData = structuredClone(originalQueryData);\n        /*\n        {\n            \"data\": {\n                \"requestRemoved\": true,\n                \"requestType\": \"friend_request\",\n                \"currentUser\": \"davey\",\n                \"friendName\": \"sam\",\n                \"errors\": []\n            },\n            \"message\": \"davey removed the friend request to sam\",\n            \"success\": true,\n            \"statusCode\": 200,\n            \"errors\": [],\n            \"currentUser\": \"davey\"\n        }\n        */\n\n        /*\n        const statusCode = returnedData.statusCode\n        const currentUser = returnedData.data.currentUser\n        const newFriend = returnedData.data.friendName\n             //Loop over all the users and update the new friend to be request pending\n        for (let i = 0; i < updatedQueryData.data.length; i++) {\n            //console.log(updatedQueryData.data[i].friendName + \" \" + newFriend)\n            if(updatedQueryData.data[i].friendName.toUpperCase() === newFriend.toUpperCase()) {\n                //console.log(\"update this one!\")\n                updatedQueryData.data[i].friendshipKey = \"request_pending\"\n             }\n        }\n        */\n\n        return updatedQueryData;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Friend Request \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Friendship Request Pending (they have to response and you can cancel) - \\\"request_pending\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"\",\n      onClick: () => {\n        handleCancelFriendRequest(api, currentUser, friend.friendName);\n      },\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(FriendRequest, \"sG6dR2SYHBppzfZZ0/U+hBJTR78=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = FriendRequest;\nexport default FriendRequest;\nvar _c;\n$RefreshReg$(_c, \"FriendRequest\");","map":{"version":3,"names":["React","useMutation","useQueryClient","axios","cancelFriendRequestAPI","cancelFriendRequest","requestAPI","api","requestBody","cancelFriendRequestBody","cancelFriendRequestURL","response","post","data","FriendRequest","currentUser","friend","queryClient","handleCancelFriendRequest","friendName","console","log","masterSite","mutate","isLoading","onSuccess","returnedData","setQueryData","originalQueryData","updatedQueryData","structuredClone"],"sources":["/Users/david/Desktop/David/www/kite/src/components/friends/actions/FriendRequest.js"],"sourcesContent":["import React from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\n\nimport axios from 'axios'\n\n//PART 1: API Call\nasync function cancelFriendRequestAPI(cancelFriendRequest) {\n    const requestAPI = cancelFriendRequest.api\n    const requestBody = cancelFriendRequest.cancelFriendRequestBody\n\n    const cancelFriendRequestURL = \"http://localhost:3003/friend/cancel/\"\n    const response = await requestAPI.post(cancelFriendRequestURL, requestBody);\n    //console.log(response.data)\n  \n    return response.data;\n} \n\n//COMPONENT: Friend Request\nconst FriendRequest = ({api, currentUser, friend}) => {\n    const queryClient = useQueryClient();\n\n    //Button: Add a Friend on Button Click \n    const handleCancelFriendRequest = (api, currentUser, friendName) => {\n        console.log(currentUser + \" wants to cancel \" + friend.friendName + \" as a friend!\")\n        var cancelFriendRequestBody = {\n            masterSite: \"kite\",\n            currentUser: currentUser,\n            friendName: friendName\n        }\n\n        var cancelFriendRequest = {\n            api: api,\n            cancelFriendRequestBody: cancelFriendRequestBody\n        }\n\n        mutate(cancelFriendRequest)\n       \n    }\n\n    //Action: Use React Query to make call\n    const { isLoading, mutate } = useMutation(cancelFriendRequestAPI, {\n        onSuccess: (returnedData) => {\n            queryClient.setQueryData(['all-users'], (originalQueryData) => {\n            var updatedQueryData = structuredClone(originalQueryData);\n            /*\n            {\n                \"data\": {\n                    \"requestRemoved\": true,\n                    \"requestType\": \"friend_request\",\n                    \"currentUser\": \"davey\",\n                    \"friendName\": \"sam\",\n                    \"errors\": []\n                },\n                \"message\": \"davey removed the friend request to sam\",\n                \"success\": true,\n                \"statusCode\": 200,\n                \"errors\": [],\n                \"currentUser\": \"davey\"\n            }\n            */\n\n            /*\n            const statusCode = returnedData.statusCode\n            const currentUser = returnedData.data.currentUser\n            const newFriend = returnedData.data.friendName\n    \n            //Loop over all the users and update the new friend to be request pending\n            for (let i = 0; i < updatedQueryData.data.length; i++) {\n                //console.log(updatedQueryData.data[i].friendName + \" \" + newFriend)\n                if(updatedQueryData.data[i].friendName.toUpperCase() === newFriend.toUpperCase()) {\n                    //console.log(\"update this one!\")\n                    updatedQueryData.data[i].friendshipKey = \"request_pending\"\n\n                }\n            }\n            */\n            \n            return updatedQueryData;\n    \n            })\n        \n        }\n        })\n\n    return (     \n        <div className=\"\" >\n            <p> Friend Request </p>\n            <p> Friendship Request Pending (they have to response and you can cancel) - \"request_pending\"</p>\n            <button type=\"submit\" className = \"\" onClick={() => { handleCancelFriendRequest(api, currentUser, friend.friendName) }}>Cancel</button>\n        </div>       \n        );\n    }  \n\nexport default FriendRequest;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AAEzD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA;AACA,eAAeC,sBAAsB,CAACC,mBAAmB,EAAE;EACvD,MAAMC,UAAU,GAAGD,mBAAmB,CAACE,GAAG;EAC1C,MAAMC,WAAW,GAAGH,mBAAmB,CAACI,uBAAuB;EAE/D,MAAMC,sBAAsB,GAAG,sCAAsC;EACrE,MAAMC,QAAQ,GAAG,MAAML,UAAU,CAACM,IAAI,CAACF,sBAAsB,EAAEF,WAAW,CAAC;EAC3E;;EAEA,OAAOG,QAAQ,CAACE,IAAI;AACxB;;AAEA;AACA,MAAMC,aAAa,GAAG,QAAgC;EAAA;EAAA,IAA/B;IAACP,GAAG;IAAEQ,WAAW;IAAEC;EAAM,CAAC;EAC7C,MAAMC,WAAW,GAAGf,cAAc,EAAE;;EAEpC;EACA,MAAMgB,yBAAyB,GAAG,CAACX,GAAG,EAAEQ,WAAW,EAAEI,UAAU,KAAK;IAChEC,OAAO,CAACC,GAAG,CAACN,WAAW,GAAG,mBAAmB,GAAGC,MAAM,CAACG,UAAU,GAAG,eAAe,CAAC;IACpF,IAAIV,uBAAuB,GAAG;MAC1Ba,UAAU,EAAE,MAAM;MAClBP,WAAW,EAAEA,WAAW;MACxBI,UAAU,EAAEA;IAChB,CAAC;IAED,IAAId,mBAAmB,GAAG;MACtBE,GAAG,EAAEA,GAAG;MACRE,uBAAuB,EAAEA;IAC7B,CAAC;IAEDc,MAAM,CAAClB,mBAAmB,CAAC;EAE/B,CAAC;;EAED;EACA,MAAM;IAAEmB,SAAS;IAAED;EAAO,CAAC,GAAGtB,WAAW,CAACG,sBAAsB,EAAE;IAC9DqB,SAAS,EAAGC,YAAY,IAAK;MACzBT,WAAW,CAACU,YAAY,CAAC,CAAC,WAAW,CAAC,EAAGC,iBAAiB,IAAK;QAC/D,IAAIC,gBAAgB,GAAGC,eAAe,CAACF,iBAAiB,CAAC;QACzD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;QAEY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;QAIY,OAAOC,gBAAgB;MAEvB,CAAC,CAAC;IAEN;EACA,CAAC,CAAC;EAEN,oBACI;IAAK,SAAS,EAAC,EAAE;IAAA,wBACb;MAAA,UAAG;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAI,eACvB;MAAA,UAAG;IAA0F;MAAA;MAAA;MAAA;IAAA,QAAI,eACjG;MAAQ,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAG,EAAE;MAAC,OAAO,EAAE,MAAM;QAAEX,yBAAyB,CAACX,GAAG,EAAEQ,WAAW,EAAEC,MAAM,CAACG,UAAU,CAAC;MAAC,CAAE;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACrI;AAEV,CAAC;AAAA,GAzECL,aAAa;EAAA,QACKZ,cAAc,EAqBJD,WAAW;AAAA;AAAA,KAtBvCa,aAAa;AA2EnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}