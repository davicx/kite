{"ast":null,"code":"var _jsxFileName = \"/Users/chavasqu/Desktop/David/www/kite/src/components/posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios';\nimport IndividualPost from './IndividualPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getPosts = async groupID => {\n  const {\n    data\n  } = await axios.get(`http://localhost:3003/posts/group/${groupID}`);\n  console.log(\"_______\");\n  console.log(data);\n  console.log(\"_______\");\n  return data;\n};\n\nconst Posts = props => {\n  _s();\n\n  const groupID = props.groupID;\n  const postErrorURL = \"/posts/group/error\";\n  const postURL = 'http://localhost:3003/posts/group/' + groupID; //const currentPosts = data;\n  //const { isLoading, isError, data, error } = useQuery(['todos'], fetchTodoList)\n  //const {isLoading, data } = useQuery('group-posts', () => {\n\n  const {\n    isLoading,\n    isError,\n    data,\n    error\n  } = useQuery(['group-posts', groupID], () => getPosts(groupID));\n  console.log(isLoading);\n  console.log(isError);\n  console.log(data);\n  console.log(error);\n  /*\n  const {isLoading, isError, data, error } = useQuery('group-posts', () => {\n      return axios.get(postURL)\n    })\n    */\n\n  /*\n  if (isError) {\n  return <span>Error: {error.message}</span>\n  }\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Posts \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this), data && /*#__PURE__*/_jsxDEV(IndividualPost, {\n      posts: data,\n      title: \"The posts!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), console.log(data)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Posts, \"JmhKT4liv6RgRiQDEV2I5A0zeas=\", false, function () {\n  return [useQuery];\n});\n\n_c = Posts;\nexport default Posts;\n/*\nconst fetchPosts = async (groupID) => {\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;\n  const res = await fetch(postURL);\n  console.log(\"fetchPosts for \" + groupID);\n  return res.json();\n}\n*/\n\n/*\nasync function fetchPosts(groupID){\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;\n  const {data} = await axios.get(postURL)    \n  return data\n}\n\nconst Posts = (props) => {\n  const groupID = props.groupID;\n  const postErrorURL = \"/posts/group/error\";\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;\n\n  //\n  //const { isLoading, isError, data, error  } = fetchPosts(groupID);\n  const {data, error, isError, isLoading } = useQuery('posts', fetchPosts(groupID)) \n   \n  console.log(data);\n\n  //\n  //const currentPosts = data;\n  //const { isLoading, isError, data, error } = useQuery(['todos'], fetchTodoList)\n  \n  //const {isLoading, data } = useQuery('group-posts', () => {\n    \n  const {isLoading, isError, data, error } = useQuery('group-posts', () => {\n      return axios.get(postURL)\n    })\n    \n\n  return (\n  <div className=\"posts\">\n       <p> Posts </p>\n      { isLoading && <div> loading... </div>}\n      { data && <IndividualPost posts = { data.data } title=\"The posts!\" />}\n      {console.log(data)}\n  </div>\n  );\n  }\n  */\n//WORKS\n\n/*\nconst Posts = (props) => {\n    const groupID = props.groupID;\n    const postErrorURL = \"/posts/group/error\";\n    const postURL = 'http://localhost:3003/posts/group/' + groupID;\n\n    //const currentPosts = data;\n    //const { isLoading, isError, data, error } = useQuery(['todos'], fetchTodoList)\n    \n    //const {isLoading, data } = useQuery('group-posts', () => {\n    const {isLoading, isError, data, error } = useQuery('group-posts', () => {\n        return axios.get(postURL)\n      })\n      /*\n    if (isError) {\n      return <span>Error: {error.message}</span>\n    }\n    */\n\n/*\n return (\n<div className=\"posts\">\n     <p> Posts </p>\n    { isLoading && <div> loading... </div>}\n    { data && <IndividualPost posts = { data.data } title=\"The posts!\" />}\n    {console.log(data)}\n</div>\n);\n}\n*/\n\n/*\n   <div className=\"posts\">\n     <p> Posts </p>\n      { data?.data.map((post) => (\n            <div className=\"post\" key={ post.postID }>\n                <p className = \"post-text\"> { post.postCaption } </p>\n                <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>                                  \n            </div>\n        ))}\n</div>\n*/\n//NET\n\n/*\n\nconst fetchPlanets = async () => {\n  const res = await fetch('http://swapi.dev/api/planets/');\n  return res.json();\n}\n\nconst Planets = () => {\n  const { data, status } = useQuery('planets', fetchPlanets);\n  console.log(data);\n\n  return (\n    <div>\n      <h2>Planets</h2>\n\n      {status === 'loading' && (\n        <div>Loading data</div>\n      )}\n\n      {status === 'error' && (\n        <div>Error fetching data</div>\n      )}\n\n      {status === 'success' && (\n        <div>\n          { data.results.map(planet => <Planet key={planet.name} planet={planet} /> ) }\n        </div>\n      )} \n    </div>\n  );\n}\n*/\n\n/*\n/*\nconst IndividualGroup = () => {\n  const { groupID } = useParams()\n  var groupsURL = \"http://localhost:3003/posts/group/\" + groupID\n\n  const {isLoading, data } = useQuery('group-posts', () => {\n    return axios.get(groupsURL)\n  })\n\n  if(isLoading) {\n    return <h4>loading...</h4>\n  }\n\n  return (\n      <div>\n          <p> Your on a group!!! </p>\n          <p> Group ID { groupID } </p>\n          <p> Posts </p>\n          { data?.data.map((post) => (\n                <div className=\"post\" key={ post.postID }>\n                    <p className = \"post-text\"> { post.postCaption } </p>\n                    <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>                                  \n                </div>\n            ))}\n      </div>\n  )\n}\n*/\n\n/*\nimport React from 'react';\nimport IndividualPost from './IndividualPost';\nimport fetchPosts from './../../functions/useFetchPosts';\n\nconst Posts = (props) => {\n    const groupID = props.groupID;\n    const postURL = 'http://localhost:3003/posts/group/' + groupID;\n\n    const { data, isPending, error } = fetchPosts(postURL)\n    const currentPosts = data;\n\n    return (\n    <div className=\"posts\">\n        { error && <div> { error } </div>}\n        { isPending && <div> loading... </div>}\n        { currentPosts && <IndividualPost posts = { currentPosts } title=\"The posts!\" />}\n    </div>\n    );\n    }\n  \nexport default Posts;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/chavasqu/Desktop/David/www/kite/src/components/posts/Posts.js"],"names":["React","useQuery","axios","IndividualPost","getPosts","groupID","data","get","console","log","Posts","props","postErrorURL","postURL","isLoading","isError","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAOC,OAAP,IAAmB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,GAAN,CAAW,qCAAoCF,OAAQ,EAAvD,CAAvB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAOH,IAAP;AACD,CAND;;AAQA,MAAMI,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMN,OAAO,GAAGM,KAAK,CAACN,OAAtB;AACA,QAAMO,YAAY,GAAG,oBAArB;AACA,QAAMC,OAAO,GAAG,uCAAuCR,OAAvD,CAHuB,CAKvB;AACA;AACA;;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBT,IAAAA,IAAtB;AAA4BU,IAAAA;AAA5B,MAAuCf,QAAQ,CAAC,CAAC,aAAD,EAAgBI,OAAhB,CAAD,EAA2B,MAAMD,QAAQ,CAACC,OAAD,CAAzC,CAArD;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACA;AACF;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;;AAEE,sBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,EAEMF,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFnB,EAGMR,IAAI,iBAAI,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAKA,IAA1B;AAAiC,MAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHd,EAIKE,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAQC,CAhCH;;GAAMI,K;UAQyCT,Q;;;KARzCS,K;AAiCN,eAAeA,KAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { useQuery } from \"react-query\";\nimport axios from 'axios'\nimport IndividualPost from './IndividualPost';\n\nconst getPosts = async (groupID) => {\n  const { data } = await axios.get(`http://localhost:3003/posts/group/${groupID}`)\n  console.log(\"_______\")\n  console.log(data)\n  console.log(\"_______\")\n  return data\n}\n\nconst Posts = (props) => {\n  const groupID = props.groupID;\n  const postErrorURL = \"/posts/group/error\";\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;\n\n  //const currentPosts = data;\n  //const { isLoading, isError, data, error } = useQuery(['todos'], fetchTodoList)\n  //const {isLoading, data } = useQuery('group-posts', () => {\n  const { isLoading, isError, data, error  } = useQuery(['group-posts', groupID], () => getPosts(groupID))\n  console.log(isLoading)\n  console.log(isError)\n  console.log(data)\n  console.log(error)\n  /*\n  const {isLoading, isError, data, error } = useQuery('group-posts', () => {\n      return axios.get(postURL)\n    })\n    */\n    /*\n  if (isError) {\n    return <span>Error: {error.message}</span>\n  }\n  */\n\n  return (\n  <div className=\"posts\">\n       <p> Posts </p>\n      { isLoading && <div> loading... </div>}\n      { data && <IndividualPost posts = { data } title=\"The posts!\" />}\n      {console.log(data)}\n  </div>\n  );\n  }\nexport default Posts;\n\n\n/*\nconst fetchPosts = async (groupID) => {\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;\n  const res = await fetch(postURL);\n  console.log(\"fetchPosts for \" + groupID);\n  return res.json();\n}\n*/\n\n/*\nasync function fetchPosts(groupID){\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;\n  const {data} = await axios.get(postURL)    \n  return data\n}\n\nconst Posts = (props) => {\n  const groupID = props.groupID;\n  const postErrorURL = \"/posts/group/error\";\n  const postURL = 'http://localhost:3003/posts/group/' + groupID;\n\n  //\n  //const { isLoading, isError, data, error  } = fetchPosts(groupID);\n  const {data, error, isError, isLoading } = useQuery('posts', fetchPosts(groupID)) \n   \n  console.log(data);\n\n  //\n  //const currentPosts = data;\n  //const { isLoading, isError, data, error } = useQuery(['todos'], fetchTodoList)\n  \n  //const {isLoading, data } = useQuery('group-posts', () => {\n    \n  const {isLoading, isError, data, error } = useQuery('group-posts', () => {\n      return axios.get(postURL)\n    })\n    \n\n  return (\n  <div className=\"posts\">\n       <p> Posts </p>\n      { isLoading && <div> loading... </div>}\n      { data && <IndividualPost posts = { data.data } title=\"The posts!\" />}\n      {console.log(data)}\n  </div>\n  );\n  }\n  */\n \n//WORKS\n\n/*\nconst Posts = (props) => {\n    const groupID = props.groupID;\n    const postErrorURL = \"/posts/group/error\";\n    const postURL = 'http://localhost:3003/posts/group/' + groupID;\n\n    //const currentPosts = data;\n    //const { isLoading, isError, data, error } = useQuery(['todos'], fetchTodoList)\n    \n    //const {isLoading, data } = useQuery('group-posts', () => {\n    const {isLoading, isError, data, error } = useQuery('group-posts', () => {\n        return axios.get(postURL)\n      })\n      /*\n    if (isError) {\n      return <span>Error: {error.message}</span>\n    }\n    */\n\n    /*\n\n    return (\n    <div className=\"posts\">\n         <p> Posts </p>\n        { isLoading && <div> loading... </div>}\n        { data && <IndividualPost posts = { data.data } title=\"The posts!\" />}\n        {console.log(data)}\n    </div>\n    );\n    }\n    */\n\n    /*\n       <div className=\"posts\">\n         <p> Posts </p>\n          { data?.data.map((post) => (\n                <div className=\"post\" key={ post.postID }>\n                    <p className = \"post-text\"> { post.postCaption } </p>\n                    <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>                                  \n                </div>\n            ))}\n    </div>\n    */\n  \n\n\n//NET\n/*\n\nconst fetchPlanets = async () => {\n  const res = await fetch('http://swapi.dev/api/planets/');\n  return res.json();\n}\n\nconst Planets = () => {\n  const { data, status } = useQuery('planets', fetchPlanets);\n  console.log(data);\n\n  return (\n    <div>\n      <h2>Planets</h2>\n\n      {status === 'loading' && (\n        <div>Loading data</div>\n      )}\n\n      {status === 'error' && (\n        <div>Error fetching data</div>\n      )}\n\n      {status === 'success' && (\n        <div>\n          { data.results.map(planet => <Planet key={planet.name} planet={planet} /> ) }\n        </div>\n      )} \n    </div>\n  );\n}\n*/\n\n/*\n/*\nconst IndividualGroup = () => {\n  const { groupID } = useParams()\n  var groupsURL = \"http://localhost:3003/posts/group/\" + groupID\n\n  const {isLoading, data } = useQuery('group-posts', () => {\n    return axios.get(groupsURL)\n  })\n\n  if(isLoading) {\n    return <h4>loading...</h4>\n  }\n\n  return (\n      <div>\n          <p> Your on a group!!! </p>\n          <p> Group ID { groupID } </p>\n          <p> Posts </p>\n          { data?.data.map((post) => (\n                <div className=\"post\" key={ post.postID }>\n                    <p className = \"post-text\"> { post.postCaption } </p>\n                    <p className = \"post-text\"> { post.postID } |  { post.postFrom } | { post.postTo} | { post.groupID }</p>                                  \n                </div>\n            ))}\n      </div>\n  )\n}\n*/\n\n\n/*\nimport React from 'react';\nimport IndividualPost from './IndividualPost';\nimport fetchPosts from './../../functions/useFetchPosts';\n\nconst Posts = (props) => {\n    const groupID = props.groupID;\n    const postURL = 'http://localhost:3003/posts/group/' + groupID;\n\n    const { data, isPending, error } = fetchPosts(postURL)\n    const currentPosts = data;\n\n    return (\n    <div className=\"posts\">\n        { error && <div> { error } </div>}\n        { isPending && <div> loading... </div>}\n        { currentPosts && <IndividualPost posts = { currentPosts } title=\"The posts!\" />}\n    </div>\n    );\n    }\n  \nexport default Posts;\n*/\n\n"]},"metadata":{},"sourceType":"module"}