{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Route, Routes, Link } from 'react-router-dom';\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport './style/style.css';\nimport './style/external/normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}\n\n_c = App;\nexport default App;\n/*\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter,Navigate,  Route, Routes, Link, NavLink, useLocation, useNavigate} from 'react-router-dom'\n//import { BrowserRouter, Link, Navigate, Route, Routes } from 'react-router-dom'\nimport { QueryClientProvider, QueryClient } from 'react-query';\n//https://html5boilerplate.com/\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Groups from './pages/Groups';\nimport Profile from './pages/Profile';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\n//import PrivateRoutes from './functions/hooks/PrivateRoutes.js';\nimport { LoggedInContext } from \"./functions/context/LoggedInContext\";\nimport { LoginContext } from \"./functions/context/LoginContext\";\nimport RequireAuth from './components/login/RequireAuth';\n//import Layout from './components/Layout';\n\n\n//CURRENT\n//import { sayHello } from './functions/functions';\n//STOP: 20\n\nimport './index.css';\nimport './style/style.css';\nimport './style/external/normalize.css';\n\nconst queryClient = new QueryClient()\n//Put user in user Context \n\nfunction App() {\n  const [currentUser, setLoginState] = useState('null');\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  useEffect(() => {\n   console.log(\"Page reloaded \");\n   const data = localStorage.getItem(\"localStorageCurrentUser\");\n   const currentUserLoggedIn = JSON.parse(data);\n   setLoginState(currentUserLoggedIn);\n   if(currentUserLoggedIn == 'null') {\n    setUserLoggedIn(false);\n    console.log(\"userLoggedIn = false\")\n  } else {\n    setUserLoggedIn(true);\n    console.log(\"userLoggedIn = true\")\n  }\n  }, []);\n  \n\n  return (\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <LoginContext.Provider value={{currentUser, setLoginState}}>\n          <LoggedInContext.Provider value = {{userLoggedIn, setUserLoggedIn}}> \n        \n          <nav>\n            <Link className=\"loginInput\" to=\"/login\">Login </Link>\n            <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n            <Link className=\"loginInput\" to=\"/profile\"> Profile </Link>\n          </nav>\n       \n          <Routes> \n                    \n                <Route path=\"/login\" element={<Login/>} />\n                <Route path=\"/groups\" element={<Groups/>} />\n\n                <Route path = \"/group/:groupID\" element = {<IndividualGroup />} />   \n                \n                  <Route path=\"/profile\" element={<Profile/>} />\n    \n                <Route path=\"*\" element={ <NotFound /> } />       \n     \n          </Routes>\n\n          <p> Current User: { currentUser } </p>\n          <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n          </LoggedInContext.Provider>\n          </LoginContext.Provider>  \n        </QueryClientProvider>\n      </div>\n\n  );\n}\n\nexport default App;\n*/\n\n/*\n\n\n          \n          \n\n\n  //New\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUserLoggedIn = JSON.parse(data);\n    console.log(\"APP useEffect \" + currentUserLoggedIn)\n    console.log(currentUser)\n    if(currentUser == 'null') {\n      setUserLoggedIn(false);\n      console.log(\"userLoggedIn = false\")\n    } else {\n      setUserLoggedIn(true);\n      console.log(\"userLoggedIn = true\")\n    }\n    setLoginState(currentUserLoggedIn)\n  }, []);\n  \n  //const   = localStorage.getItem(\"location\");\n  //const location = localStorage.getItem(\"location\");\n  //const navigate = useNavigate();\n  const history = {\n    currentLocation: \"groups\",\n    previousLocation: \"groups2\",\n  }\n  const location = useLocation();\n  //const currentLocation = localStorage.getItem(\"currentLocation\");\n  //console.log(\"currentLocation \" + currentLocation)\n  //localStorage.setItem('previousLocation', JSON.stringify(currentLocation));\n  localStorage.setItem('currentLocation', JSON.stringify(history));\n\n\n\n  //<button onClick={() => navigate(-1)}>go back</button>\n\n\n  //New\n           <Route path =\"/login\" element = { userLoggedIn ? <Navigate to=\"/login\" /> : <Navigate to=\"/groups\" /> } />\n           \n  <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n*/\n\n/*\n//WORKING\n   <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <BrowserRouter>\n\n            <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n\n          </BrowserRouter>\n        </QueryClientProvider>\n      </div>\n    </LoginContext.Provider>\n\n\nimport React, { useState, useEffect, createContext } from \"react\";\n//import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n//import { Index } from \"./pages\";\n//import { About } from \"./pages/about\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport Home from './components/Home'\n\n\nfunction App() {\n  var userLoggedIn = 'false'\n  const [currentUser, setLoginState] = useState('null');\n\n  if(currentUser == 'null') {\n    userLoggedIn = 'false'  \n  } else {\n    userLoggedIn = 'true' \n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  return (\n    <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div>\n        <p> Username {currentUser} </p>\n        <p> Login State {userLoggedIn} </p>\n        <Login />\n        <Logout />\n        <Home />\n      </div>\n    </LoginContext.Provider>\n\n  );\n}\n\nexport default App;\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/david/Desktop/David/www/kite/src/App.js"],"names":["React","useState","useEffect","Route","Routes","Link","QueryClientProvider","QueryClient","queryClient","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,kBAApC;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,aAAjD;AAEA,OAAO,mBAAP;AACA,OAAO,gCAAP;;AAEA,MAAMC,WAAW,GAAG,IAAID,WAAJ,EAApB;;AAEA,SAASE,GAAT,GAAe;AAEb,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,mBAAD;AAAqB,MAAA,MAAM,EAAED;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD;;KAVQC,G;AAYT,eAAeA,GAAfsourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Routes, Link } from 'react-router-dom'\nimport { QueryClientProvider, QueryClient } from 'react-query';\n\nimport './style/style.css';\nimport './style/external/normalize.css';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  \n  return (\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n         \n        </QueryClientProvider>\n      </div>\n\n  );\n}\n\nexport default App;\n\n\n/*\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter,Navigate,  Route, Routes, Link, NavLink, useLocation, useNavigate} from 'react-router-dom'\n//import { BrowserRouter, Link, Navigate, Route, Routes } from 'react-router-dom'\nimport { QueryClientProvider, QueryClient } from 'react-query';\n//https://html5boilerplate.com/\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Groups from './pages/Groups';\nimport Profile from './pages/Profile';\nimport NotFound from './pages/NotFound';\nimport IndividualGroup from './pages/IndividualGroup';\n//import PrivateRoutes from './functions/hooks/PrivateRoutes.js';\nimport { LoggedInContext } from \"./functions/context/LoggedInContext\";\nimport { LoginContext } from \"./functions/context/LoginContext\";\nimport RequireAuth from './components/login/RequireAuth';\n//import Layout from './components/Layout';\n\n\n//CURRENT\n//import { sayHello } from './functions/functions';\n//STOP: 20\n\nimport './index.css';\nimport './style/style.css';\nimport './style/external/normalize.css';\n\nconst queryClient = new QueryClient()\n//Put user in user Context \n\nfunction App() {\n  const [currentUser, setLoginState] = useState('null');\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  useEffect(() => {\n   console.log(\"Page reloaded \");\n   const data = localStorage.getItem(\"localStorageCurrentUser\");\n   const currentUserLoggedIn = JSON.parse(data);\n   setLoginState(currentUserLoggedIn);\n   if(currentUserLoggedIn == 'null') {\n    setUserLoggedIn(false);\n    console.log(\"userLoggedIn = false\")\n  } else {\n    setUserLoggedIn(true);\n    console.log(\"userLoggedIn = true\")\n  }\n  }, []);\n  \n\n  return (\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <LoginContext.Provider value={{currentUser, setLoginState}}>\n          <LoggedInContext.Provider value = {{userLoggedIn, setUserLoggedIn}}> \n        \n          <nav>\n            <Link className=\"loginInput\" to=\"/login\">Login </Link>\n            <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n            <Link className=\"loginInput\" to=\"/profile\"> Profile </Link>\n          </nav>\n       \n          <Routes> \n                    \n                <Route path=\"/login\" element={<Login/>} />\n                <Route path=\"/groups\" element={<Groups/>} />\n\n                <Route path = \"/group/:groupID\" element = {<IndividualGroup />} />   \n                \n                  <Route path=\"/profile\" element={<Profile/>} />\n    \n                <Route path=\"*\" element={ <NotFound /> } />       \n     \n          </Routes>\n\n          <p> Current User: { currentUser } </p>\n          <p> User Logged In: { userLoggedIn ? 'yep!' : 'nooo' } </p>\n          </LoggedInContext.Provider>\n          </LoginContext.Provider>  \n        </QueryClientProvider>\n      </div>\n\n  );\n}\n\nexport default App;\n*/\n/*\n\n\n          \n          \n\n\n  //New\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const currentUserLoggedIn = JSON.parse(data);\n    console.log(\"APP useEffect \" + currentUserLoggedIn)\n    console.log(currentUser)\n    if(currentUser == 'null') {\n      setUserLoggedIn(false);\n      console.log(\"userLoggedIn = false\")\n    } else {\n      setUserLoggedIn(true);\n      console.log(\"userLoggedIn = true\")\n    }\n    setLoginState(currentUserLoggedIn)\n  }, []);\n  \n  //const   = localStorage.getItem(\"location\");\n  //const location = localStorage.getItem(\"location\");\n  //const navigate = useNavigate();\n  const history = {\n    currentLocation: \"groups\",\n    previousLocation: \"groups2\",\n  }\n  const location = useLocation();\n  //const currentLocation = localStorage.getItem(\"currentLocation\");\n  //console.log(\"currentLocation \" + currentLocation)\n  //localStorage.setItem('previousLocation', JSON.stringify(currentLocation));\n  localStorage.setItem('currentLocation', JSON.stringify(history));\n\n\n\n  //<button onClick={() => navigate(-1)}>go back</button>\n\n\n  //New\n           <Route path =\"/login\" element = { userLoggedIn ? <Navigate to=\"/login\" /> : <Navigate to=\"/groups\" /> } />\n           \n  <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n*/\n\n\n\n/*\n//WORKING\n   <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <BrowserRouter>\n\n            <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n              <Link className=\"loginInput\" to=\"/test\"> Test </Link>\n              <Link className=\"loginInput\" to=\"/register\"> Register </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n            <NavLink to=\"/login\" state=\"hi\"> Login </NavLink>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n                  <Route path=\"/test\" element={<Groups/>} />\n                  <Route path = \"/group/:groupID\" element = {<IndividualGroup />} /> \n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n              <Route path=\"/register\" element={<Register/>} />\n\n              <Route path=\"*\" element={ <NotFound /> } />\n             </Routes>\n\n          </BrowserRouter>\n        </QueryClientProvider>\n      </div>\n    </LoginContext.Provider>\n\n\nimport React, { useState, useEffect, createContext } from \"react\";\n//import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n//import { Index } from \"./pages\";\n//import { About } from \"./pages/about\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport Home from './components/Home'\n\n\nfunction App() {\n  var userLoggedIn = 'false'\n  const [currentUser, setLoginState] = useState('null');\n\n  if(currentUser == 'null') {\n    userLoggedIn = 'false'  \n  } else {\n    userLoggedIn = 'true' \n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  return (\n    <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div>\n        <p> Username {currentUser} </p>\n        <p> Login State {userLoggedIn} </p>\n        <Login />\n        <Logout />\n        <Home />\n      </div>\n    </LoginContext.Provider>\n\n  );\n}\n\nexport default App;\n\n*/"]},"metadata":{},"sourceType":"module"}