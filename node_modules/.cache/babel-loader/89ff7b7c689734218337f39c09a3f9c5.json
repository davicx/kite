{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nasync function useRefreshToken(axiosRequest) {\n  _s();\n  const [refreshReponse, setRefreshReponse] = useState('trying to refresh token');\n  console.log(\"ATTEMPTING TO REFRESH TOKEN: refreshToken()\");\n  const refreshURL = \"http://localhost:3003/refresh/tokens\";\n  const data = localStorage.getItem(\"localStorageCurrentUser\");\n  const userName = JSON.parse(data);\n  console.log(\"refreshToken: you are refreshing for\" + userName);\n  axiosRequest.post(refreshURL, {\n    userName: userName,\n    refreshToken: \"dontneedheretoken\"\n  }).then(function (response) {\n    console.log(\"refreshToken(): We got a new access token!\");\n    setRefreshReponse(refreshReponse);\n    return refreshReponse;\n  }).catch(function (error) {\n    console.log(\"refreshToken(): We failed to get a new access token!\");\n    setRefreshReponse(\"error\");\n    return refreshReponse;\n  });\n}\n_s(useRefreshToken, \"nzRMrqBR+9DVEzywowzbmGX/598=\");\nexport default useRefreshToken;","map":{"version":3,"names":["useEffect","useState","useRefreshToken","axiosRequest","refreshReponse","setRefreshReponse","console","log","refreshURL","data","localStorage","getItem","userName","JSON","parse","post","refreshToken","then","response","catch","error"],"sources":["/Users/david/Desktop/David/www/kite/src/hooks/useRefreshToken.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nasync function useRefreshToken(axiosRequest) {\n    const [refreshReponse, setRefreshReponse] = useState('trying to refresh token')\n\n    console.log(\"ATTEMPTING TO REFRESH TOKEN: refreshToken()\")\n      const refreshURL = \"http://localhost:3003/refresh/tokens\"\n        const data = localStorage.getItem(\"localStorageCurrentUser\");\n        const userName = JSON.parse(data);\n        console.log(\"refreshToken: you are refreshing for\" + userName)\n        \n        axiosRequest.post(refreshURL, {\n          userName: userName,\n          refreshToken: \"dontneedheretoken\"\n        })\n        .then(function (response) {\n          console.log(\"refreshToken(): We got a new access token!\")\n          setRefreshReponse(refreshReponse)\n          \n          return refreshReponse;\n        })\n        .catch(function (error) {\n          console.log(\"refreshToken(): We failed to get a new access token!\")\n          setRefreshReponse(\"error\")\n          return refreshReponse\n        });\n\n}\n\nexport default useRefreshToken\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAeC,eAAe,CAACC,YAAY,EAAE;EAAA;EACzC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGJ,QAAQ,CAAC,yBAAyB,CAAC;EAE/EK,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;EACxD,MAAMC,UAAU,GAAG,sCAAsC;EACvD,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,yBAAyB,CAAC;EAC5D,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC;EACjCH,OAAO,CAACC,GAAG,CAAC,sCAAsC,GAAGK,QAAQ,CAAC;EAE9DT,YAAY,CAACY,IAAI,CAACP,UAAU,EAAE;IAC5BI,QAAQ,EAAEA,QAAQ;IAClBI,YAAY,EAAE;EAChB,CAAC,CAAC,CACDC,IAAI,CAAC,UAAUC,QAAQ,EAAE;IACxBZ,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IACzDF,iBAAiB,CAACD,cAAc,CAAC;IAEjC,OAAOA,cAAc;EACvB,CAAC,CAAC,CACDe,KAAK,CAAC,UAAUC,KAAK,EAAE;IACtBd,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;IACnEF,iBAAiB,CAAC,OAAO,CAAC;IAC1B,OAAOD,cAAc;EACvB,CAAC,CAAC;AAEV;AAAC,GAzBcF,eAAe;AA2B9B,eAAeA,eAAe"},"metadata":{},"sourceType":"module"}