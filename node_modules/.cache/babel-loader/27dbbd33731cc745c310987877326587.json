{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleUserSearch.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from \"react-query\";\n//import useLoginStatus from '../../functions/hooks/useLoginStatus';\n//import SimpleProfile from '../users/display/SimpleProfile';\n\n//http://localhost:3003/search/user/davey/string/fro\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function searchUsersAPI(api, currentUser, searchString) {\n  //http://localhost:3003/search/user/davey/string/fro\n  //const getSimpleUsersURL = \"http://localhost:3003/simple/users/\" + currentUser; \n  const simpleSearchURL = \"http://localhost:3003/search/user/\" + currentUser + \"/string/\" + searchString;\n  //console.log(simpleSearchURL) \n  //const getSimpleUsersURL = \"http://localhost:3003/search/user/davey/string/fro\"; \n  const {\n    data\n  } = await api.get(simpleSearchURLs);\n  return data;\n}\nconst SimpleUserSearch = _ref => {\n  _s();\n  let {\n    api,\n    currentUser,\n    searchString\n  } = _ref;\n  const {\n    isLoading,\n    data,\n    isError,\n    error\n  } = useQuery(['simple-get-users', currentUser], () => searchUsersAPI(api, currentUser, searchString), {\n    refetchInterval: 10000000\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 30\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" There was an error fetching the posts \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 28\n    }, this), data && console.log(data)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this);\n};\n_s(SimpleUserSearch, \"20VnH7aHnyusuHUg2Uycf4IaPvo=\", false, function () {\n  return [useQuery];\n});\n_c = SimpleUserSearch;\nexport default SimpleUserSearch;\n\n/*\n        {data && data.data.map((user) => (\n                console.log()\n             ))}\nimport React from 'react';\nimport { useQuery } from \"react-query\";\n//import useLoginStatus from '../../functions/hooks/useLoginStatus';\nimport SimpleProfile from '../users/display/SimpleProfile';\n\n\nasync function getUserFriends(currentUser, friendName, api) { \n  const getFriendsURL = \"http://localhost:3003/friend/\" + friendName + \"/user/\" + currentUser; \n  const { data } = await api.get(getFriendsURL)\n\n  //console.log(data.data)\n\n  return data\n} \n\n\nconst FriendList = ({ currentUser, friendName, api }) => {\n    const { isLoading, data, isError, error  } = useQuery(['user-friends', friendName], () => getUserFriends(currentUser, friendName, api), \n        { refetchInterval: 10000000 }\n    )\n\n    return (\n        <div>\n            { isLoading && <div> loading... </div>}\n            { isError && <div> There was an error fetching the posts { error.message } </div>}\n\n            {data && data.data.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.friendID }/>\n             ))}\n        </div>\n    )\n}\n\nexport default FriendList;\n\n\n\n*/\nvar _c;\n$RefreshReg$(_c, \"SimpleUserSearch\");","map":{"version":3,"names":["React","useQuery","searchUsersAPI","api","currentUser","searchString","simpleSearchURL","data","get","simpleSearchURLs","SimpleUserSearch","isLoading","isError","error","refetchInterval","message","console","log"],"sources":["/Users/david/Desktop/David/www/kite/src/components/playground/SimpleUserSearch.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from \"react-query\";\n//import useLoginStatus from '../../functions/hooks/useLoginStatus';\n//import SimpleProfile from '../users/display/SimpleProfile';\n\n\n//http://localhost:3003/search/user/davey/string/fro\nasync function searchUsersAPI(api, currentUser, searchString) { \n    //http://localhost:3003/search/user/davey/string/fro\n    //const getSimpleUsersURL = \"http://localhost:3003/simple/users/\" + currentUser; \n    const simpleSearchURL = \"http://localhost:3003/search/user/\" + currentUser + \"/string/\" + searchString;\n    //console.log(simpleSearchURL) \n    //const getSimpleUsersURL = \"http://localhost:3003/search/user/davey/string/fro\"; \n    const { data } = await api.get(simpleSearchURLs)\n  \n    return data\n  } \n  \n  const SimpleUserSearch = ({ api, currentUser, searchString }) => {\n\n      const { isLoading, data, isError, error  } = useQuery(['simple-get-users', currentUser], () => searchUsersAPI(api, currentUser, searchString), \n          { refetchInterval: 10000000 }\n      )\n      \n      return (\n          <div>\n              { isLoading && <div> loading... </div>}\n              { isError && <div> There was an error fetching the posts { error.message } </div>}   \n              {data && console.log(data)}\n          </div>\n      )\n  }\n  \n  export default SimpleUserSearch;\n  \n\n\n\n/*\n        {data && data.data.map((user) => (\n                console.log()\n             ))}\nimport React from 'react';\nimport { useQuery } from \"react-query\";\n//import useLoginStatus from '../../functions/hooks/useLoginStatus';\nimport SimpleProfile from '../users/display/SimpleProfile';\n\n\nasync function getUserFriends(currentUser, friendName, api) { \n  const getFriendsURL = \"http://localhost:3003/friend/\" + friendName + \"/user/\" + currentUser; \n  const { data } = await api.get(getFriendsURL)\n\n  //console.log(data.data)\n\n  return data\n} \n\n\nconst FriendList = ({ currentUser, friendName, api }) => {\n    const { isLoading, data, isError, error  } = useQuery(['user-friends', friendName], () => getUserFriends(currentUser, friendName, api), \n        { refetchInterval: 10000000 }\n    )\n\n    return (\n        <div>\n            { isLoading && <div> loading... </div>}\n            { isError && <div> There was an error fetching the posts { error.message } </div>}\n\n            {data && data.data.map((friend) => (\n                <SimpleProfile api = { api } friend = { friend } currentUser = {currentUser} key = { friend.friendID }/>\n             ))}\n        </div>\n    )\n}\n\nexport default FriendList;\n\n\n\n*/"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC;AACA;;AAGA;AAAA;AACA,eAAeC,cAAc,CAACC,GAAG,EAAEC,WAAW,EAAEC,YAAY,EAAE;EAC1D;EACA;EACA,MAAMC,eAAe,GAAG,oCAAoC,GAAGF,WAAW,GAAG,UAAU,GAAGC,YAAY;EACtG;EACA;EACA,MAAM;IAAEE;EAAK,CAAC,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAACC,gBAAgB,CAAC;EAEhD,OAAOF,IAAI;AACb;AAEA,MAAMG,gBAAgB,GAAG,QAAwC;EAAA;EAAA,IAAvC;IAAEP,GAAG;IAAEC,WAAW;IAAEC;EAAa,CAAC;EAExD,MAAM;IAAEM,SAAS;IAAEJ,IAAI;IAAEK,OAAO;IAAEC;EAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,kBAAkB,EAAEG,WAAW,CAAC,EAAE,MAAMF,cAAc,CAACC,GAAG,EAAEC,WAAW,EAAEC,YAAY,CAAC,EACzI;IAAES,eAAe,EAAE;EAAS,CAAC,CAChC;EAED,oBACI;IAAA,WACMH,SAAS,iBAAI;MAAA,UAAK;IAAY;MAAA;MAAA;MAAA;IAAA,QAAM,EACpCC,OAAO,iBAAI;MAAA,WAAK,yCAAuC,EAAEC,KAAK,CAACE,OAAO,EAAE,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EAChFR,IAAI,IAAIS,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAEd,CAAC;AAAA,GAbKG,gBAAgB;EAAA,QAE2BT,QAAQ;AAAA;AAAA,KAFnDS,gBAAgB;AAetB,eAAeA,gBAAgB;;AAKjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;AAAA"},"metadata":{},"sourceType":"module"}