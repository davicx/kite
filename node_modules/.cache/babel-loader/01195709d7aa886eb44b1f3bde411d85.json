{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/notifications/NotificationList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport IndividualNotification from './IndividualNotification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getNotifications(currentUser, api) {\n  const notificationURL = \"http://localhost:3003/notifications/user/\" + currentUser;\n  const {\n    data\n  } = await api.get(notificationURL);\n  return data;\n}\nconst GroupList = props => {\n  _s();\n  const currentUser = props.currentUser;\n  const api = props.api;\n  console.log(\"Get Notifications for \" + currentUser);\n  const {\n    isLoading,\n    data,\n    isError,\n    error\n  } = useQuery(['notifications', currentUser], () => getNotifications(currentUser, api), {\n    refetchInterval: 10000000\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groups\",\n    children: [data && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" Notifications: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" There was an error fetching the posts \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this), data && console.log(data.notificationData.notificationArray), data && data.notificationData.notificationArray.map(notification => console.log(notification)), data && data.notificationData.notificationArray.map(notification => /*#__PURE__*/_jsxDEV(IndividualNotification, {\n      api: api,\n      notification: notification,\n      currentUser: currentUser\n    }, notification.notificationID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n_s(GroupList, \"20VnH7aHnyusuHUg2Uycf4IaPvo=\", false, function () {\n  return [useQuery];\n});\n_c = GroupList;\nexport default GroupList;\n\n//    { data && console.log(data.notificationData.notificationArray)}\n\n/*\n<IndividualNotification api = { api } notification = { notification }  currentUser = {currentUser} key = { notification.notificationID }/>\n      {data && data.notificationData.notificationArray.map((notification) => (\n            <IndividualNotification api = { api } notification = { notification }  currentUser = {currentUser} key = { notification.notificationID }/>\n     ))}\n\n  <div className=\"groups\">\n        {data && groups.groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n          </div>\n      ))}\n\n  </div>\n*/\nvar _c;\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"names":["React","useQuery","IndividualNotification","getNotifications","currentUser","api","notificationURL","data","get","GroupList","props","console","log","isLoading","isError","error","refetchInterval","message","notificationData","notificationArray","map","notification","notificationID"],"sources":["/Users/david/Desktop/David/www/kite/src/components/notifications/NotificationList.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from \"react-query\";\nimport IndividualNotification from './IndividualNotification';\n\n\n\nasync function getNotifications(currentUser, api) {\n  const notificationURL = \"http://localhost:3003/notifications/user/\" + currentUser; \n  const { data } = await api.get(notificationURL)\n\n  return data\n} \n\n\nconst GroupList = (props) => {\n  const currentUser = props.currentUser;\n  const api = props.api;\n  console.log(\"Get Notifications for \" + currentUser)\n\n  const { isLoading, data, isError, error  } = useQuery(['notifications', currentUser], () => getNotifications(currentUser, api), \n    { refetchInterval: 10000000 }\n  )\n\n  return (\n  <div className=\"groups\">\n    {data && <h4> Notifications: </h4> }\n    \n      { isLoading && <div> loading... </div>}\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\n      { data && console.log(data.notificationData.notificationArray)}\n      {data && data.notificationData.notificationArray.map((notification) => (\n            console.log(notification)\n     ))}\n    {data && data.notificationData.notificationArray.map((notification) => (\n        <IndividualNotification api = { api } notification = { notification }  currentUser = {currentUser} key = { notification.notificationID }/>\n     ))}\n  </div>\n  );\n  }\n  \nexport default GroupList;\n\n//    { data && console.log(data.notificationData.notificationArray)}\n\n\n/*\n<IndividualNotification api = { api } notification = { notification }  currentUser = {currentUser} key = { notification.notificationID }/>\n      {data && data.notificationData.notificationArray.map((notification) => (\n            <IndividualNotification api = { api } notification = { notification }  currentUser = {currentUser} key = { notification.notificationID }/>\n     ))}\n\n  <div className=\"groups\">\n        {data && groups.groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n          </div>\n      ))}\n\n  </div>\n*/\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,sBAAsB,MAAM,0BAA0B;AAAC;AAI9D,eAAeC,gBAAgB,CAACC,WAAW,EAAEC,GAAG,EAAE;EAChD,MAAMC,eAAe,GAAG,2CAA2C,GAAGF,WAAW;EACjF,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMF,GAAG,CAACG,GAAG,CAACF,eAAe,CAAC;EAE/C,OAAOC,IAAI;AACb;AAGA,MAAME,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAMN,WAAW,GAAGM,KAAK,CAACN,WAAW;EACrC,MAAMC,GAAG,GAAGK,KAAK,CAACL,GAAG;EACrBM,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAGR,WAAW,CAAC;EAEnD,MAAM;IAAES,SAAS;IAAEN,IAAI;IAAEO,OAAO;IAAEC;EAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,eAAe,EAAEG,WAAW,CAAC,EAAE,MAAMD,gBAAgB,CAACC,WAAW,EAAEC,GAAG,CAAC,EAC5H;IAAEW,eAAe,EAAE;EAAS,CAAC,CAC9B;EAED,oBACA;IAAK,SAAS,EAAC,QAAQ;IAAA,WACpBT,IAAI,iBAAI;MAAA,UAAI;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAK,EAE9BM,SAAS,iBAAI;MAAA,UAAK;IAAY;MAAA;MAAA;MAAA;IAAA,QAAM,EACpCC,OAAO,iBAAI;MAAA,WAAK,yCAAuC,EAAEC,KAAK,CAACE,OAAO,EAAE,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EAC/EV,IAAI,IAAII,OAAO,CAACC,GAAG,CAACL,IAAI,CAACW,gBAAgB,CAACC,iBAAiB,CAAC,EAC7DZ,IAAI,IAAIA,IAAI,CAACW,gBAAgB,CAACC,iBAAiB,CAACC,GAAG,CAAEC,YAAY,IAC5DV,OAAO,CAACC,GAAG,CAACS,YAAY,CAC9B,CAAC,EACFd,IAAI,IAAIA,IAAI,CAACW,gBAAgB,CAACC,iBAAiB,CAACC,GAAG,CAAEC,YAAY,iBAC9D,QAAC,sBAAsB;MAAC,GAAG,EAAKhB,GAAK;MAAC,YAAY,EAAKgB,YAAc;MAAE,WAAW,EAAIjB;IAAY,GAASiB,YAAY,CAACC,cAAc;MAAA;MAAA;MAAA;IAAA,QACxI,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEN,CAAC;AAAA,GAxBGb,SAAS;EAAA,QAKgCR,QAAQ;AAAA;AAAA,KALjDQ,SAAS;AA0Bf,eAAeA,SAAS;;AAExB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA"},"metadata":{},"sourceType":"module"}