{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nasync function useGetLoggedInUser() {\n  _s();\n  console.log(\"useGetLoggedInUser\");\n  const [name, setName] = useState('name');\n  useEffect(() => {\n    async function fetchData() {\n      const userData = localStorage.getItem(\"localStorageCurrentUser\");\n      const currentUser = JSON.parse(userData);\n      setName(currentUser);\n      //console.log(\"data \" + currentUser)\n    }\n\n    fetchData();\n  }, []);\n  return name;\n}\n_s(useGetLoggedInUser, \"MZKeIWRQ8zBNZhQnKs3bZhFmy5g=\");\nexport default useGetLoggedInUser;\n\n/*\nlet dataIsLoading = true;\n\npromise\n  .then(data => {\n    // do something with data\n  })\n  .catch(error => {\n   // do something with error\n  })\n  .finally(() => {\n    dataIsLoading = false;\n  })\n\n*/\n\n/*\nimport { useDebugValue, useEffect, useState } from 'react'\n\nfunction useDisplayName() {\n  console.log(useDisplayName)\n    const [name, setName] = useState('name')\n\n    useEffect(() => {\n      async function fetchData() {\n        const data = \"davey\";\n        console.log(\"data\" + data)\n        return data\n\n      }\n\n      fetchData();\n      //const dataName = \"Frodo from database\"\n      //setName(dataName)\n    }, []);\n\n    return name\n}\n\nexport default useDisplayName\n\n\n*/","map":{"version":3,"names":["useEffect","useState","useGetLoggedInUser","console","log","name","setName","fetchData","userData","localStorage","getItem","currentUser","JSON","parse"],"sources":["/Users/david/Desktop/David/www/kite/src/functions/hooks/useGetLoggedInUser.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nasync function useGetLoggedInUser() {\n  console.log(\"useGetLoggedInUser\")\n    const [name, setName] = useState('name')\n\n    useEffect(() => {\n      async function fetchData() {\n        const userData = localStorage.getItem(\"localStorageCurrentUser\");\n        const currentUser = JSON.parse(userData);\n\n        setName(currentUser)\n        //console.log(\"data \" + currentUser)\n\n      }\n\n      fetchData();\n      \n    }, []);\n\n    return name;\n}\n\nexport default useGetLoggedInUser\n\n\n/*\nlet dataIsLoading = true;\n\npromise\n  .then(data => {\n    // do something with data\n  })\n  .catch(error => {\n   // do something with error\n  })\n  .finally(() => {\n    dataIsLoading = false;\n  })\n\n*/\n\n/*\nimport { useDebugValue, useEffect, useState } from 'react'\n\nfunction useDisplayName() {\n  console.log(useDisplayName)\n    const [name, setName] = useState('name')\n\n    useEffect(() => {\n      async function fetchData() {\n        const data = \"davey\";\n        console.log(\"data\" + data)\n        return data\n\n      }\n\n      fetchData();\n      //const dataName = \"Frodo from database\"\n      //setName(dataName)\n    }, []);\n\n    return name\n}\n\nexport default useDisplayName\n\n\n*/\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAeC,kBAAkB,GAAG;EAAA;EAClCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,MAAM,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,eAAeO,SAAS,GAAG;MACzB,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,yBAAyB,CAAC;MAChE,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;MAExCF,OAAO,CAACK,WAAW,CAAC;MACpB;IAEF;;IAEAJ,SAAS,EAAE;EAEb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,IAAI;AACf;AAAC,GAnBcH,kBAAkB;AAqBjC,eAAeA,kBAAkB;;AAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}