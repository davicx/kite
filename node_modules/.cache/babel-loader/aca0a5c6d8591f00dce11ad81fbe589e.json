{"ast":null,"code":"import axios from 'axios';\nconst axiosRequest = axios.create({\n  withCredentials: true\n});\n\n/* \nFUNCTIONS A: Login Functions \n\t1) Function A1: Login a User \n\t2) Function A2: Logout a User  \n\t3) Function A3: Get Login Status \n\t4) Function A4: Request new Refresh Token\n\n*/\n\n//FUNCTIONS A: Login Functions \n//Function A1: Login a User \nfunction loginUser(userName) {\n  console.log(\"login \" + userName);\n}\n\n//Function A2: Logout a User \nfunction logoutUser() {\n  //const navigate = useNavigate();\n  console.log(\"logout \");\n\n  //Step 2A: Set local storage  \n  localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\"));\n\n  //Step 2B: Redirect to Login\n  //navigate(\"/login\");\n}\n\n//Function A3: Get Login Status \nfunction loginStatus(userName) {\n  let userStatus = {\n    isAuthenticated: false,\n    user: userName\n  };\n  if (userName == 'null') {\n    userStatus.isAuthenticated = false;\n  } else {\n    userStatus.isAuthenticated = true;\n  }\n  return userStatus;\n}\nfunction sayHello(userName) {\n  console.log(\"hello \" + userName);\n}\n\n//Function A4: Request new Refresh Token\nasync function refreshToken() {\n  console.log(\"ATTEMPTING TO REFRESH TOKEN: refreshToken()\");\n  const refreshURL = \"http://localhost:3003/refresh/tokens\";\n  const data = localStorage.getItem(\"localStorageCurrentUser\");\n  const userName = JSON.parse(data);\n  console.log(\"refreshToken: you are refreshing for\" + userName);\n  //STEP 1: Call Logout API\n  axiosRequest.post(refreshURL, {\n    userName: userName,\n    refreshToken: \"dontneedheretoken\"\n  }).then(function (response) {\n    console.log(\"refreshToken(): We got a new access token!\");\n    return response.data;\n  }).catch(function (error) {\n    console.log(\"refreshToken(): We failed to get a new access token!\");\n    //console.log(error);\n  });\n}\n\nexport default {\n  loginUser,\n  logoutUser,\n  loginStatus,\n  refreshToken,\n  sayHello\n};","map":{"version":3,"names":["axios","axiosRequest","create","withCredentials","loginUser","userName","console","log","logoutUser","localStorage","setItem","JSON","stringify","loginStatus","userStatus","isAuthenticated","user","sayHello","refreshToken","refreshURL","data","getItem","parse","post","then","response","catch","error"],"sources":["/Users/david/Desktop/David/www/kite/src/functions/functions.js"],"sourcesContent":["import axios from 'axios'\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})  \n\n/* \nFUNCTIONS A: Login Functions \n\t1) Function A1: Login a User \n\t2) Function A2: Logout a User  \n\t3) Function A3: Get Login Status \n\t4) Function A4: Request new Refresh Token\n\n*/\n\n//FUNCTIONS A: Login Functions \n//Function A1: Login a User \nfunction loginUser(userName) {\n    console.log(\"login \" + userName)\n}\n\n//Function A2: Logout a User \nfunction logoutUser() {\n    //const navigate = useNavigate();\n    console.log(\"logout \")\n\n    //Step 2A: Set local storage  \n    localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\"));   \n\n    //Step 2B: Redirect to Login\n    //navigate(\"/login\");\n}\n\n//Function A3: Get Login Status \nfunction loginStatus(userName) {\n    let userStatus = {\n        isAuthenticated: false,\n        user: userName,\n    };\n\n    if(userName == 'null') {\n        userStatus.isAuthenticated = false;\n      } else {\n        userStatus.isAuthenticated = true;\n      }\n\n      return userStatus;\n}\n\nfunction sayHello(userName) {\n    console.log(\"hello \" + userName)\n}\n\n//Function A4: Request new Refresh Token\nasync function refreshToken() {\n  console.log(\"ATTEMPTING TO REFRESH TOKEN: refreshToken()\")\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n      const data = localStorage.getItem(\"localStorageCurrentUser\");\n      const userName = JSON.parse(data);\n      console.log(\"refreshToken: you are refreshing for\" + userName)\n      //STEP 1: Call Logout API\n      axiosRequest.post(refreshURL, {\n        userName: userName,\n        refreshToken: \"dontneedheretoken\"\n      })\n      .then(function (response) {\n        console.log(\"refreshToken(): We got a new access token!\")\n        return response.data;\n      })\n      .catch(function (error) {\n        console.log(\"refreshToken(): We failed to get a new access token!\")\n        //console.log(error);\n      });\n  \n  }\n\n\nexport default { loginUser, logoutUser, loginStatus, refreshToken, sayHello };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAAC;EAChCC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAASC,SAAS,CAACC,QAAQ,EAAE;EACzBC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGF,QAAQ,CAAC;AACpC;;AAEA;AACA,SAASG,UAAU,GAAG;EAClB;EACAF,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;;EAEtB;EACAE,YAAY,CAACC,OAAO,CAAC,yBAAyB,EAAEC,IAAI,CAACC,SAAS,CAAC,MAAM,CAAC,CAAC;;EAEvE;EACA;AACJ;;AAEA;AACA,SAASC,WAAW,CAACR,QAAQ,EAAE;EAC3B,IAAIS,UAAU,GAAG;IACbC,eAAe,EAAE,KAAK;IACtBC,IAAI,EAAEX;EACV,CAAC;EAED,IAAGA,QAAQ,IAAI,MAAM,EAAE;IACnBS,UAAU,CAACC,eAAe,GAAG,KAAK;EACpC,CAAC,MAAM;IACLD,UAAU,CAACC,eAAe,GAAG,IAAI;EACnC;EAEA,OAAOD,UAAU;AACvB;AAEA,SAASG,QAAQ,CAACZ,QAAQ,EAAE;EACxBC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGF,QAAQ,CAAC;AACpC;;AAEA;AACA,eAAea,YAAY,GAAG;EAC5BZ,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;EACxD,MAAMY,UAAU,GAAG,sCAAsC;EACvD,MAAMC,IAAI,GAAGX,YAAY,CAACY,OAAO,CAAC,yBAAyB,CAAC;EAC5D,MAAMhB,QAAQ,GAAGM,IAAI,CAACW,KAAK,CAACF,IAAI,CAAC;EACjCd,OAAO,CAACC,GAAG,CAAC,sCAAsC,GAAGF,QAAQ,CAAC;EAC9D;EACAJ,YAAY,CAACsB,IAAI,CAACJ,UAAU,EAAE;IAC5Bd,QAAQ,EAAEA,QAAQ;IAClBa,YAAY,EAAE;EAChB,CAAC,CAAC,CACDM,IAAI,CAAC,UAAUC,QAAQ,EAAE;IACxBnB,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IACzD,OAAOkB,QAAQ,CAACL,IAAI;EACtB,CAAC,CAAC,CACDM,KAAK,CAAC,UAAUC,KAAK,EAAE;IACtBrB,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;IACnE;EACF,CAAC,CAAC;AAEN;;AAGF,eAAe;EAAEH,SAAS;EAAEI,UAAU;EAAEK,WAAW;EAAEK,YAAY;EAAED;AAAS,CAAC"},"metadata":{},"sourceType":"module"}