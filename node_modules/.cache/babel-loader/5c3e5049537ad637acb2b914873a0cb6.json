{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleParent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SimpleChild from './SimpleChild';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleClickParent = () => {\n  _s();\n  let david = {\n    userID: 1,\n    userName: \"david\"\n  };\n  let sam = {\n    userID: 2,\n    userName: \"sam\"\n  };\n  let frodo = {\n    userID: 3,\n    userName: \"frodo\"\n  };\n  let usersArray = [david, sam, frodo];\n  const [users, addUser] = useState(usersArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" hi \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(SimpleChild, {\n      user: user\n    }, user.userID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_s(SimpleClickParent, \"vI2iBAhDG9zFkVwSJkAaCufeX+k=\");\n_c = SimpleClickParent;\nexport default SimpleClickParent;\nvar _c;\n$RefreshReg$(_c, \"SimpleClickParent\");","map":{"version":3,"names":["React","useState","SimpleChild","SimpleClickParent","david","userID","userName","sam","frodo","usersArray","users","addUser","map","user"],"sources":["/Users/david/Desktop/David/www/kite/src/components/playground/SimpleParent.js"],"sourcesContent":["import React, { useState } from 'react'\n\nimport SimpleChild from './SimpleChild'\n\nconst SimpleClickParent = () => {\n    let david = {\n        userID: 1,\n        userName: \"david\",\n      }\n      let sam = {\n        userID: 2,\n        userName: \"sam\",\n      }\n      let frodo = {\n        userID: 3,\n        userName: \"frodo\",\n      }\n    \n      let usersArray = [david, sam, frodo]\n    \n      const [users, addUser] = useState(usersArray)\n    \n\n  return (\n      <div>\n          <p> hi </p>\n          {users.map((user) => (\n              <SimpleChild key = { user.userID } user = {user}/>\n          ))} \n      </div>\n  )\n}\n\nexport default SimpleClickParent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,WAAW,MAAM,eAAe;AAAA;AAEvC,MAAMC,iBAAiB,GAAG,MAAM;EAAA;EAC5B,IAAIC,KAAK,GAAG;IACRC,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE;EACZ,CAAC;EACD,IAAIC,GAAG,GAAG;IACRF,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE;EACZ,CAAC;EACD,IAAIE,KAAK,GAAG;IACVH,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE;EACZ,CAAC;EAED,IAAIG,UAAU,GAAG,CAACL,KAAK,EAAEG,GAAG,EAAEC,KAAK,CAAC;EAEpC,MAAM,CAACE,KAAK,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACQ,UAAU,CAAC;EAGjD,oBACI;IAAA,wBACI;MAAA,UAAG;IAAI;MAAA;MAAA;MAAA;IAAA,QAAI,EACVC,KAAK,CAACE,GAAG,CAAEC,IAAI,iBACZ,QAAC,WAAW;MAAuB,IAAI,EAAIA;IAAK,GAA3BA,IAAI,CAACR,MAAM;MAAA;MAAA;MAAA;IAAA,QACnC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEZ,CAAC;AAAA,GA3BKF,iBAAiB;AAAA,KAAjBA,iBAAiB;AA6BvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}