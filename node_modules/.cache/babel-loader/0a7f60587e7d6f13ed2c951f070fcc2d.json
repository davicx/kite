{"ast":null,"code":"var _jsxFileName = \"/Users/chavasqu/Desktop/David/www/kite/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Routes, Link } from 'react-router-dom'; //import { BrowserRouter, Link, Navigate, Route, Routes } from 'react-router-dom'\n\nimport { QueryClientProvider, QueryClient } from 'react-query'; //https://html5boilerplate.com/\n\nimport Login from './pages/Login'; //import Register from './pages/Register';\n\nimport Groups from './pages/Groups';\nimport PrivateRoutes from './functions/utils/PrivateRoutes.js';\nimport { LoginContext } from \"./functions/context/LoginContext\"; //import { sayHello } from './functions/functions';\n\nimport './index.css';\nimport './style/style.css';\nimport './style/external/normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\n\nfunction App() {\n  _s();\n\n  const [currentUser, setLoginState] = useState('null');\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn);\n  }, []);\n  var userLoggedIn = false;\n\n  if (currentUser == 'null') {\n    userLoggedIn = false;\n  } else {\n    userLoggedIn = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      currentUser,\n      setLoginState\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n        client: queryClient,\n        children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n          children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              className: \"loginInput\",\n              to: \"/login\",\n              children: \"Login \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"loginInput\",\n              to: \"/groups\",\n              children: \" Groups \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Current User: \", currentUser, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              element: /*#__PURE__*/_jsxDEV(PrivateRoutes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 31\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/groups\",\n                element: /*#__PURE__*/_jsxDEV(Groups, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 50\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3AgNPQ0t8MubFhGBwm7Fv14sljw=\");\n\n_c = App;\nexport default App;\n/*\nimport React, { useState, useEffect, createContext } from \"react\";\n//import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n//import { Index } from \"./pages\";\n//import { About } from \"./pages/about\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport Home from './components/Home'\n\n\nfunction App() {\n  var userLoggedIn = 'false'\n  const [currentUser, setLoginState] = useState('null');\n\n  if(currentUser == 'null') {\n    userLoggedIn = 'false'  \n  } else {\n    userLoggedIn = 'true' \n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  return (\n    <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div>\n        <p> Username {currentUser} </p>\n        <p> Login State {userLoggedIn} </p>\n        <Login />\n        <Logout />\n        <Home />\n      </div>\n    </LoginContext.Provider>\n\n  );\n}\n\nexport default App;\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chavasqu/Desktop/David/www/kite/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Routes","Link","QueryClientProvider","QueryClient","Login","Groups","PrivateRoutes","LoginContext","queryClient","App","currentUser","setLoginState","data","localStorage","getItem","currentUserLoggedIn","JSON","parse","userLoggedIn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Routes, Link } from 'react-router-dom'\n//import { BrowserRouter, Link, Navigate, Route, Routes } from 'react-router-dom'\nimport { QueryClientProvider, QueryClient } from 'react-query';\n//https://html5boilerplate.com/\nimport Login from './pages/Login';\n//import Register from './pages/Register';\nimport Groups from './pages/Groups';\nimport PrivateRoutes from './functions/utils/PrivateRoutes.js';\nimport { LoginContext } from \"./functions/context/LoginContext\";\n//import { sayHello } from './functions/functions';\n\nimport './index.css';\nimport './style/style.css';\nimport './style/external/normalize.css';\n\nconst queryClient = new QueryClient()\n\nfunction App() {\n  const [currentUser, setLoginState] = useState('null');\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  var userLoggedIn = false\n\n  if(currentUser == 'null') {\n      userLoggedIn = false\n    } else {\n      userLoggedIn = true \n    }\n\n  return (\n    <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div className=\"App\">\n        <QueryClientProvider client={queryClient}>\n          <BrowserRouter>\n            <nav>\n              <Link className=\"loginInput\" to=\"/login\">Login </Link>\n              <Link className=\"loginInput\" to=\"/groups\"> Groups </Link>\n            </nav>\n            <p> Current User: { currentUser } </p>\n\n            <Routes>\n              <Route element={<PrivateRoutes />}>\n                  <Route path=\"/groups\" element={<Groups/>} />\n              </Route>\n              <Route path=\"/login\" element={<Login/>} />\n             </Routes>\n\n          </BrowserRouter>\n        </QueryClientProvider>\n      </div>\n    </LoginContext.Provider>\n\n  );\n}\n\nexport default App;\n\n\n\n/*\nimport React, { useState, useEffect, createContext } from \"react\";\n//import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n//import { Index } from \"./pages\";\n//import { About } from \"./pages/about\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport Home from './components/Home'\n\n\nfunction App() {\n  var userLoggedIn = 'false'\n  const [currentUser, setLoginState] = useState('null');\n\n  if(currentUser == 'null') {\n    userLoggedIn = 'false'  \n  } else {\n    userLoggedIn = 'true' \n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"currentUserLoggedIn\");\n    const currentUserLoggedIn = JSON.parse(data);\n    setLoginState(currentUserLoggedIn)\n  }, []);\n\n  return (\n    <LoginContext.Provider value={{currentUser, setLoginState}}>\n      <div>\n        <p> Username {currentUser} </p>\n        <p> Login State {userLoggedIn} </p>\n        <Login />\n        <Logout />\n        <Home />\n      </div>\n    </LoginContext.Provider>\n\n  );\n}\n\nexport default App;\n\n*/"]},"metadata":{},"sourceType":"module"}