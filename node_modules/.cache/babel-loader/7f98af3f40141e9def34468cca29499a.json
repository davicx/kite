{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/LikePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({});\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\";\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data);\n  return response.data;\n}\nfunction LikePost(props) {\n  _s();\n  const currentUser = props.currentUser;\n  const postUserLikesArray = props.post.likedByUsernameArray;\n  const postID = props.post.postID;\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n      postID: postID,\n      currentUser: currentUser\n    };\n    mutate(likedPost);\n  };\n  const {\n    isLoading,\n    mutate\n  } = useMutation(likePostAPI, {\n    onSuccess: returnedData => {\n      queryClient.setQueryData(['group-posts', groupID], originalQueryData => {\n        //STEP 1: Get post ID of updated post and new like array \n        var updatedQueryData = structuredClone(originalQueryData);\n        const postID = returnedData.postID;\n        const currentUser = returnedData.currentUser;\n        for (let i = 0; i < updatedQueryData.length; i++) {\n          if (updatedQueryData[i].postID == postID) {\n            console.log(\"Change this post! \" + postID);\n            var postLike = {\n              postLikeID: returnedData.postLikeID,\n              postID: postID,\n              likedByUserName: currentUser,\n              likedByImage: \"frodo.jpg\",\n              likedByFirstName: \"sam gamgee\",\n              likedByLastName: \"sam gamgee\",\n              timestamp: \"2023-02-21T00:42:33.000Z\"\n            };\n\n            //Create the new array of users who have liked this\n            updatedQueryData[i].postLikesArray.push(postLike);\n            updatedQueryData[i].simpleLikesArray.push(currentUser);\n            updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length;\n          }\n        }\n        return updatedQueryData;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"\",\n      onClick: () => {\n        handleLikePost(postID, currentUser);\n      },\n      children: \"Like Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(LikePost, \"6589G+UgUsfTd+3FPdlmO2lpbZs=\", false, function () {\n  return [useMutation];\n});\n_c = LikePost;\nexport default LikePost;\n/*\n        { postUserLikesArray.includes(currentUser) ? \n            <button type=\"submit\" className = \"post-liked\" onClick={() => { handleLikePost(postID, currentUser) }}>UnLike Me! </button>: \n            <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}> Like Me!</button>\n        }\n \n */\n\n//<LikePost likes = { postUserLikesArray } currentUser = {currentUser} />\nvar _c;\n$RefreshReg$(_c, \"LikePost\");","map":{"version":3,"names":["React","useState","useMutation","useQueryClient","axios","api","create","likePostAPI","likedPost","postURL","response","post","console","log","data","LikePost","props","currentUser","postUserLikesArray","likedByUsernameArray","postID","handleLikePost","mutate","isLoading","onSuccess","returnedData","queryClient","setQueryData","groupID","originalQueryData","updatedQueryData","structuredClone","i","length","postLike","postLikeID","likedByUserName","likedByImage","likedByFirstName","likedByLastName","timestamp","postLikesArray","push","simpleLikesArray","totalLikes"],"sources":["/Users/david/Desktop/David/www/kite/src/components/posts/actions/like/LikePost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\nconst api = axios.create({\n\n})\n\n\nasync function likePostAPI(likedPost) {\n  const postURL = \"http://localhost:3003/post/like\"\n  const response = await axios.post(postURL, likedPost);\n  console.log(response.data)\n\n  return response.data;\n} \n\n\nfunction LikePost(props) {\n  const currentUser = props.currentUser;\n  const postUserLikesArray = props.post.likedByUsernameArray;\n  const postID = props.post.postID;\n\n\n  const handleLikePost = (postID, currentUser) => {\n    var likedPost = {\n        postID: postID,\n        currentUser: currentUser   \n    }\n\n    mutate(likedPost)\n\n  }\n\n  const { isLoading, mutate } = useMutation(likePostAPI, {\n    onSuccess: (returnedData) => {\n      queryClient.setQueryData(['group-posts', groupID], (originalQueryData) => {\n\n        //STEP 1: Get post ID of updated post and new like array \n        var updatedQueryData = structuredClone(originalQueryData);\n        const postID = returnedData.postID;\n        const currentUser = returnedData.currentUser;\n\n        for (let i = 0; i < updatedQueryData.length; i++) {\n\n            if(updatedQueryData[i].postID == postID) {\n                console.log(\"Change this post! \" + postID)\n\n                var postLike = {\n                    postLikeID: returnedData.postLikeID,\n                    postID: postID,\n                    likedByUserName: currentUser,\n                    likedByImage: \"frodo.jpg\",\n                    likedByFirstName: \"sam gamgee\",\n                    likedByLastName: \"sam gamgee\",\n                    timestamp: \"2023-02-21T00:42:33.000Z\"\n\n                }\n\n                //Create the new array of users who have liked this\n                updatedQueryData[i].postLikesArray.push(postLike)\n                updatedQueryData[i].simpleLikesArray.push(currentUser)\n                updatedQueryData[i].totalLikes = updatedQueryData[i].simpleLikesArray.length\n\n            }\n        }\n\n            return updatedQueryData;\n\n        })\n            \n    }\n  })\n\n  return (\n    <div className=\"\">\n        <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}>Like Me</button>\n\n    </div>\n  );\n}\n\n\nexport default LikePost;\n/*\n        { postUserLikesArray.includes(currentUser) ? \n            <button type=\"submit\" className = \"post-liked\" onClick={() => { handleLikePost(postID, currentUser) }}>UnLike Me! </button>: \n            <button type=\"submit\" className = \"\" onClick={() => { handleLikePost(postID, currentUser) }}> Like Me!</button>\n        }\n \n */\n\n//<LikePost likes = { postUserLikesArray } currentUser = {currentUser} />"],"mappings":"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"},"metadata":{},"sourceType":"module"}