{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/notifications/NotificationList.js\";\nimport React from 'react';\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getNotifications(currentUser, api) {\n  if (currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser;\n  const {\n    data\n  } = await api.get(groupURL);\n  return data;\n}\nconst GroupList = props => {\n  const currentUser = props.currentUser;\n  const api = props.api;\n  console.log(\"Get Notifications for \" + currentUser);\n\n  /*\n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser, api), \n    { refetchInterval: 10000000 }\n  )\n   var groups = data;\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groups\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" hi! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_c = GroupList;\nexport default GroupList;\n\n/*\n  <div className=\"groups\">\n  \n      { isLoading && <div> loading... </div>}\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\n      { data && console.log(data)}\n      {data && groups.groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n          </div>\n      ))}\n  </div>\n*/\nvar _c;\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"names":["React","useQuery","getNotifications","currentUser","api","groupURL","data","get","GroupList","props","console","log"],"sources":["/Users/david/Desktop/David/www/kite/src/components/notifications/NotificationList.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from \"react-query\";\n\nasync function getNotifications(currentUser, api) {\n  if(currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n   \n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser; \n  const { data } = await api.get(groupURL)\n\n  return data\n} \n\n\nconst GroupList = (props) => {\n  const currentUser = props.currentUser;\n  const api = props.api;\n  console.log(\"Get Notifications for \" + currentUser)\n  \n  /*\n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser, api), \n    { refetchInterval: 10000000 }\n  )\n\n  var groups = data;\n  */\n\n  return (\n  <div className=\"groups\">\n    <p> hi! </p>\n      \n  </div>\n  );\n  }\n  \nexport default GroupList;\n\n\n/*\n  <div className=\"groups\">\n  \n      { isLoading && <div> loading... </div>}\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\n      { data && console.log(data)}\n      {data && groups.groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n          </div>\n      ))}\n  </div>\n*/\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAAC;AAEvC,eAAeC,gBAAgB,CAACC,WAAW,EAAEC,GAAG,EAAE;EAChD,IAAGD,WAAW,IAAIA,WAAW,IAAI,IAAI,EAAE;IACrC;EAAA;EAGF,MAAME,QAAQ,GAAG,oCAAoC,GAAGF,WAAW;EACnE,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMF,GAAG,CAACG,GAAG,CAACF,QAAQ,CAAC;EAExC,OAAOC,IAAI;AACb;AAGA,MAAME,SAAS,GAAIC,KAAK,IAAK;EAC3B,MAAMN,WAAW,GAAGM,KAAK,CAACN,WAAW;EACrC,MAAMC,GAAG,GAAGK,KAAK,CAACL,GAAG;EACrBM,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAGR,WAAW,CAAC;;EAEnD;AACF;AACA;AACA;AACA;AACA;;EAGE,oBACA;IAAK,SAAS,EAAC,QAAQ;IAAA,uBACrB;MAAA,UAAG;IAAK;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QAER;AAEN,CAAC;AAAA,KAnBGK,SAAS;AAqBf,eAAeA,SAAS;;AAGxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA"},"metadata":{},"sourceType":"module"}