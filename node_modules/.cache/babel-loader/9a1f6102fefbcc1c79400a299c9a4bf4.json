{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/groups/actions/NewGroup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//import useLocalStorage from '../../hooks/useLocalStorage';\n//import IndividualGroupUser from './IndividualGroupUser';\n//import NewGroupUser from './NewGroupUser';\n\nimport FriendSearch from '../../search/FriendSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewGroup = _ref => {\n  _s();\n  let {\n    currentUser,\n    api\n  } = _ref;\n  const searchString = \"frodo\";\n  const friendSearchURL = \"http://localhost:3003/search/user/\" + currentUser + \"/string/\" + searchString;\n  const {\n    data: friends,\n    isPending,\n    error\n  } = useFetch(friendSearchURL);\n\n  //Friend Search\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simple-border sixty\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" NewGroup \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 32\n        }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 36\n        }, this), friends && console.log(friends)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(NewGroup, \"Gq1tJwazheZdDT9AunB/5cGL0Ts=\", true);\n_c = NewGroup;\nexport default NewGroup;\n\n/*\n                <FriendSearch api = { api } currentUser = { \"davey\" } />\nfunction MyAPI() {\n    const { data: posts, isPending, error } = useFetch(\"http://localhost:3003/simple/posts\")\n\n    return (\n        <div> \n            <ul> \n              { error && <div>{ error }</div> }\n              { isPending && <div>Loading...</div> }\n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\n*/\n\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//FUNCTION 1: Search for Friends API\nasync function friendSearchAPI(currentUser,searchString) {   \n    if (searchString.length > 0) {\n        const friendSearchURL = \"http://localhost:3003/search/user/\" + currentUser + \"/string/\" + searchString; \n        const { data } = await axios.get(friendSearchURL)\n\n        return data\n    } \n\n} \n\nfunction FriendSearch({ api, currentUser }) {\n    const [searchString, setSearchString] = useState('')\n\n    //FUNCTION 2: Handle user typing\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setSearchString(value);\n    }\n\n     //FUNCTION 3: React Query \n    const { isLoading, data, isError, error  } = useQuery(['friend-search', searchString], () => friendSearchAPI(currentUser, searchString), \n        {  staleTime: 60000 }\n    )\n\n    return (\n        <div className=\"new-post\">\n            <p className = \"single-line\">Friend Name</p>\n            \n            { data && console.log(data.data)}\n            {data && data.data.map(user => (\n                console.log(user.friendName)\n            ))}\n\n            <input name= \"group-name\" className=\"friend-search-input-box\" type=\"text\" value={ searchString } onChange={ handleChange} />\n            <p className = \"single-line\"> Typed { searchString } </p>\n        </div>\n    );\n}\n\nexport default FriendSearch;\nexport default FriendSearch;\n*/\nvar _c;\n$RefreshReg$(_c, \"NewGroup\");","map":{"version":3,"names":["React","useState","useEffect","FriendSearch","NewGroup","currentUser","api","searchString","friendSearchURL","data","friends","isPending","error","useFetch","console","log"],"sources":["/Users/david/Desktop/David/www/kite/src/components/groups/actions/NewGroup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n//import useLocalStorage from '../../hooks/useLocalStorage';\n//import IndividualGroupUser from './IndividualGroupUser';\n//import NewGroupUser from './NewGroupUser';\n\nimport FriendSearch from '../../search/FriendSearch'\n\n\nconst NewGroup= ({ currentUser, api }) => {\n    const searchString = \"frodo\"\n    const friendSearchURL = \"http://localhost:3003/search/user/\" + currentUser + \"/string/\" + searchString; \n    const { data: friends, isPending, error } = useFetch(friendSearchURL)\n\n    //Friend Search\n\n    return (\n        <div> \n            <div className='simple-border sixty'>\n                <p> NewGroup </p>\n                <ul> \n                    { error && <div>{ error }</div> }\n                    { isPending && <div>Loading...</div> }\n                    {friends && console.log(friends) }\n                </ul>\n\n            </div>\n\n        </div>\n    );\n}\n\n\nexport default NewGroup;\n\n/*\n                <FriendSearch api = { api } currentUser = { \"davey\" } />\nfunction MyAPI() {\n    const { data: posts, isPending, error } = useFetch(\"http://localhost:3003/simple/posts\")\n\n    return (\n        <div> \n            <ul> \n              { error && <div>{ error }</div> }\n              { isPending && <div>Loading...</div> }\n              {posts && <PostList posts = {posts}/> }\n            </ul>\n        </div>\n    );\n}\n\n*/\n\n\n\n/*\nimport React, { useState } from 'react';\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport axios from 'axios'\n\n//FUNCTION 1: Search for Friends API\nasync function friendSearchAPI(currentUser,searchString) {   \n    if (searchString.length > 0) {\n        const friendSearchURL = \"http://localhost:3003/search/user/\" + currentUser + \"/string/\" + searchString; \n        const { data } = await axios.get(friendSearchURL)\n\n        return data\n    } \n\n} \n\nfunction FriendSearch({ api, currentUser }) {\n    const [searchString, setSearchString] = useState('')\n\n    //FUNCTION 2: Handle user typing\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setSearchString(value);\n    }\n\n     //FUNCTION 3: React Query \n    const { isLoading, data, isError, error  } = useQuery(['friend-search', searchString], () => friendSearchAPI(currentUser, searchString), \n        {  staleTime: 60000 }\n    )\n\n    return (\n        <div className=\"new-post\">\n            <p className = \"single-line\">Friend Name</p>\n            \n            { data && console.log(data.data)}\n            {data && data.data.map(user => (\n                console.log(user.friendName)\n            ))}\n\n            <input name= \"group-name\" className=\"friend-search-input-box\" type=\"text\" value={ searchString } onChange={ handleChange} />\n            <p className = \"single-line\"> Typed { searchString } </p>\n        </div>\n    );\n}\n\nexport default FriendSearch;\nexport default FriendSearch;\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA;AACA;;AAEA,OAAOC,YAAY,MAAM,2BAA2B;AAAA;AAGpD,MAAMC,QAAQ,GAAE,QAA0B;EAAA;EAAA,IAAzB;IAAEC,WAAW;IAAEC;EAAI,CAAC;EACjC,MAAMC,YAAY,GAAG,OAAO;EAC5B,MAAMC,eAAe,GAAG,oCAAoC,GAAGH,WAAW,GAAG,UAAU,GAAGE,YAAY;EACtG,MAAM;IAAEE,IAAI,EAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGC,QAAQ,CAACL,eAAe,CAAC;;EAErE;;EAEA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBAChC;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI,eACjB;QAAA,WACMI,KAAK,iBAAI;UAAA,UAAOA;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,EAC7BD,SAAS,iBAAI;UAAA,UAAK;QAAU;UAAA;UAAA;UAAA;QAAA,QAAM,EACnCD,OAAO,IAAII,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/B;IAAA;MAAA;MAAA;MAAA;IAAA;EAEH;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd,CAAC;AAAA,GArBKN,QAAQ;AAAA,KAARA,QAAQ;AAwBd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAAA"},"metadata":{},"sourceType":"module"}