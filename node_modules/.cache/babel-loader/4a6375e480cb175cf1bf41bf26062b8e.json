{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/groups/GroupList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport functions from \"../../functions/functions\";\n//import { LoginContext } from \"../../functions/context/LoginContext\";\nimport useHello from '../../functions/hooks/useHello';\n//import useRefreshToken from '../../functions/hooks/useRefreshToken';\n\n//import axios from 'axios'\n\n/*\nasync function refreshToken() {\n  const refreshURL = \"http://localhost:3003/refresh/tokens\"\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const userName = JSON.parse(data);\n    //console.log(\"REFRESH TOKEN: you are refreshing for\" + userName )\n    //STEP 1: Call Logout API\n    axiosRequest.post(refreshURL, {\n      userName: userName,\n      refreshToken: \"dontneedheretoken\"\n    })\n    .then(function (response) {\n      console.log(response.data)\n      return response.data;\n    })\n    .catch(function (error) {\n      //console.log(error);\n    });\n}\n*/\n\n/*\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})  \n\n\n//STATUS 200: Good Request \naxiosRequest.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  console.log(\"INTERCEPTOR: Looks good! \")\n  return response;\n}, function (error) {\n  \n  //STATUS 498:  Need to get a access token\n  console.log(\"INTERCEPTOR: Need to get a access token or logout the user\")\n  if(error.response.status == 498) {\n    console.log(\"INTERCEPTOR 498: We got a 498 so we need a new access token. Will send refresh token \")\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n\n    //const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\n    //const { data, error, isPending } = useRefreshToken(refreshURL);\n    const refreshOutcome = functions.refreshToken();\n    console.log(\"Got a 498: Here is the status if we could get a new refresh token!\")\n\n  } \n\n  //STATUS 440: Logout User\n  if(error.response.status == 440) {\n    console.log(\"INTERCEPTOR 440: We got a 440 we couldn't refresh the access token because the refresh token was no good need to logout the user\")  \n    localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\")); \n    window.location.href = '/login';\n  }\n  \n  return Promise.reject(error);\n  \n});\n\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getGroups(currentUser, axiosRequest) {\n  if (currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser;\n  const {\n    data\n  } = await axiosRequest.get(groupURL);\n  return data;\n}\nconst Groups = props => {\n  _s();\n  console.log(\"COMPONENT: GroupsList\");\n  const currentUser = props.currentUser;\n  const api = props.api;\n  const {\n    hello\n  } = useHello();\n  console.log(\"HELLO: \" + hello);\n  const {\n    isLoading,\n    data,\n    isError,\n    error\n  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser, api), {\n    refetchInterval: 10000000\n  });\n  var groups = data;\n  //console.log(groups + \" \" + isError + \" \" + error)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groups\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 22\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" There was an error fetching the posts \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 20\n    }, this), data && console.log(data), data && groups.groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/group/${group.groupID}`,\n        children: [group.groupID, \" | \", group.groupName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, group.groupID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 3\n  }, this);\n};\n_s(Groups, \"uAxjRVq9Zwh+oSBWQWiuUecH6Gs=\", false, function () {\n  return [useHello, useQuery];\n});\n_c = Groups;\nexport default Groups;\nvar _c;\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useQuery","Link","useNavigate","functions","useHello","getGroups","currentUser","axiosRequest","groupURL","data","get","Groups","props","console","log","api","hello","isLoading","isError","error","refetchInterval","groups","message","map","group","groupID","groupName"],"sources":["/Users/david/Desktop/David/www/kite/src/components/groups/GroupList.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useQuery } from \"react-query\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport  functions from \"../../functions/functions\";\n//import { LoginContext } from \"../../functions/context/LoginContext\";\nimport useHello from '../../functions/hooks/useHello';\n//import useRefreshToken from '../../functions/hooks/useRefreshToken';\n\n//import axios from 'axios'\n\n\n/*\nasync function refreshToken() {\n  const refreshURL = \"http://localhost:3003/refresh/tokens\"\n    const data = localStorage.getItem(\"localStorageCurrentUser\");\n    const userName = JSON.parse(data);\n    //console.log(\"REFRESH TOKEN: you are refreshing for\" + userName )\n    //STEP 1: Call Logout API\n    axiosRequest.post(refreshURL, {\n      userName: userName,\n      refreshToken: \"dontneedheretoken\"\n    })\n    .then(function (response) {\n      console.log(response.data)\n      return response.data;\n    })\n    .catch(function (error) {\n      //console.log(error);\n    });\n}\n*/\n\n/*\n\nconst axiosRequest = axios.create({\n  withCredentials: true\n})  \n\n\n//STATUS 200: Good Request \naxiosRequest.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  console.log(\"INTERCEPTOR: Looks good! \")\n  return response;\n}, function (error) {\n  \n  //STATUS 498:  Need to get a access token\n  console.log(\"INTERCEPTOR: Need to get a access token or logout the user\")\n  if(error.response.status == 498) {\n    console.log(\"INTERCEPTOR 498: We got a 498 so we need a new access token. Will send refresh token \")\n    const refreshURL = \"http://localhost:3003/refresh/tokens\"\n\n    //const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\n    //const { data, error, isPending } = useRefreshToken(refreshURL);\n    const refreshOutcome = functions.refreshToken();\n    console.log(\"Got a 498: Here is the status if we could get a new refresh token!\")\n\n  } \n\n  //STATUS 440: Logout User\n  if(error.response.status == 440) {\n    console.log(\"INTERCEPTOR 440: We got a 440 we couldn't refresh the access token because the refresh token was no good need to logout the user\")  \n    localStorage.setItem('localStorageCurrentUser', JSON.stringify(\"null\")); \n    window.location.href = '/login';\n  }\n  \n  return Promise.reject(error);\n  \n});\n\n*/\n\n\nasync function getGroups(currentUser, axiosRequest) {\n  if(currentUser && currentUser != null) {\n    //console.log(\"getGroups: \" + currentUser)\n  }\n   \n  const groupURL = \"http://localhost:3003/groups/user/\" + currentUser; \n  const { data } = await axiosRequest.get(groupURL)\n\n  return data\n} \n\n\nconst Groups = (props) => {\n  console.log(\"COMPONENT: GroupsList\")  \n  const currentUser = props.currentUser;\n  const api = props.api;\n  const { hello} = useHello();\n  console.log(\"HELLO: \" + hello)\n\n\n  const { isLoading, data, isError, error  } = useQuery(['user-groups', currentUser], () => getGroups(currentUser, api), \n    { refetchInterval: 10000000 }\n  )\n\n  var groups = data;\n  //console.log(groups + \" \" + isError + \" \" + error)\n\n  return (\n  <div className=\"groups\">\n      { isLoading && <div> loading... </div>}\n      { isError && <div> There was an error fetching the posts { error.message } </div>}\n      { data && console.log(data)}\n      {data && groups.groups.map(group => (\n          <div className=\"group\" key={ group.groupID } >\n            <Link to={`/group/${group.groupID}`}>{ group.groupID } | {group.groupName } </Link>\n          </div>\n      ))}\n  </div>\n  );\n  }\n  \nexport default Groups;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAQC,SAAS,MAAM,2BAA2B;AAClD;AACA,OAAOC,QAAQ,MAAM,gCAAgC;AACrD;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAyCA,eAAeC,SAAS,CAACC,WAAW,EAAEC,YAAY,EAAE;EAClD,IAAGD,WAAW,IAAIA,WAAW,IAAI,IAAI,EAAE;IACrC;EAAA;EAGF,MAAME,QAAQ,GAAG,oCAAoC,GAAGF,WAAW;EACnE,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMF,YAAY,CAACG,GAAG,CAACF,QAAQ,CAAC;EAEjD,OAAOC,IAAI;AACb;AAGA,MAAME,MAAM,GAAIC,KAAK,IAAK;EAAA;EACxBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpC,MAAMR,WAAW,GAAGM,KAAK,CAACN,WAAW;EACrC,MAAMS,GAAG,GAAGH,KAAK,CAACG,GAAG;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGZ,QAAQ,EAAE;EAC3BS,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGE,KAAK,CAAC;EAG9B,MAAM;IAAEC,SAAS;IAAER,IAAI;IAAES,OAAO;IAAEC;EAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC,aAAa,EAAEM,WAAW,CAAC,EAAE,MAAMD,SAAS,CAACC,WAAW,EAAES,GAAG,CAAC,EACnH;IAAEK,eAAe,EAAE;EAAS,CAAC,CAC9B;EAED,IAAIC,MAAM,GAAGZ,IAAI;EACjB;;EAEA,oBACA;IAAK,SAAS,EAAC,QAAQ;IAAA,WACjBQ,SAAS,iBAAI;MAAA,UAAK;IAAY;MAAA;MAAA;MAAA;IAAA,QAAM,EACpCC,OAAO,iBAAI;MAAA,WAAK,yCAAuC,EAAEC,KAAK,CAACG,OAAO,EAAE,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EAC/Eb,IAAI,IAAII,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC,EAC1BA,IAAI,IAAIY,MAAM,CAACA,MAAM,CAACE,GAAG,CAACC,KAAK,iBAC5B;MAAK,SAAS,EAAC,OAAO;MAAA,uBACpB,QAAC,IAAI;QAAC,EAAE,EAAG,UAASA,KAAK,CAACC,OAAQ,EAAE;QAAA,WAAGD,KAAK,CAACC,OAAO,EAAE,KAAG,EAACD,KAAK,CAACE,SAAS,EAAE,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IAAO,GADxDF,KAAK,CAACC,OAAO;MAAA;MAAA;MAAA;IAAA,QAG7C,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEN,CAAC;AAAA,GA3BGd,MAAM;EAAA,QAIOP,QAAQ,EAIoBJ,QAAQ;AAAA;AAAA,KARjDW,MAAM;AA6BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}