{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/David/www/kite/src/components/playground/SimpleAddGroupUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport IndividualGroupUser from './IndividualGroupUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleAddGroupUsers = _ref => {\n  _s();\n  let {\n    currentUser,\n    api\n  } = _ref;\n  /*\n  let newGroupUsersLocalStorage = [\"sam\", \"frodo\"] \n  let string = JSON.stringify(students) \n  localStorage.setItem(\"students\", string) \n  */\n  //PART 1: Local Storage Users \n  const [newGroupUser, setNewGroupUser] = useLocalStorage('newGroupUser', '[]');\n\n  //PART 2: Current Friends (you can add to new group)\n  let david = {\n    userID: 1,\n    userName: \"david\"\n  };\n  let sam = {\n    userID: 2,\n    userName: \"sam\"\n  };\n  let frodo = {\n    userID: 3,\n    userName: \"frodo\"\n  };\n  let usersArray = [david, sam, frodo];\n  const [users, addUser] = useState(usersArray);\n\n  //PART 3: Actions \n  //Part 3A: Add  a Friend to a new Group\n  const addNewGroupUser = userName => {\n    console.log(\"You are going to add \" + userName);\n\n    //Step 1: Add New Group User to Local Storage Array \n    let currentGroupUserArrayString = newGroupUser;\n    let currentGroupUserArray = JSON.parse(newGroupUser);\n    console.log(currentGroupUserArray);\n\n    /*\n    let retString = localStorage.getItem(\"students\") \n    let retArray = JSON.parse(retString) \n    console.log(retArray); \n    console.log(oldGroupUserArray);\n    oldGroupUserArray.push(userName);\n     let newGroupUserArray = oldGroupUserArray;\n    console.log(newGroupUserArray);\n    setNewGroupUser(newGroupUserArray)\n    */\n\n    //Step 2: Remove User from Current available Friends\n    const newUsers = users.filter(user => user.userName !== userName);\n    addUser(newUsers);\n  };\n\n  //Part 3B: Add a friend from the new group \n  const removeNewGroupUser = userID => {\n    console.log(\"You will remove \" + userID);\n    //Step 1: Remove New Group User from Local Storage Array \n    localStorage.getItem(\"temp\");\n\n    //Step 2: Add User back to available Friends\n  };\n\n  //localStorage.setItem(\"newGroupUser\", '');\n  //localStorage.getItem(\"temp\");\n  //console.log(theTemp)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simple-border\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Friends you can Add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(IndividualGroupUser, {\n        addNewGroupUser: addNewGroupUser,\n        removeNewGroupUser: removeNewGroupUser,\n        user: user\n      }, user.userName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" New Group Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simple-border\",\n      children: newGroupUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n};\n_s(SimpleAddGroupUsers, \"/dYjYuC8yzNNXSX5nc0OkGufXrQ=\", false, function () {\n  return [useLocalStorage];\n});\n_c = SimpleAddGroupUsers;\nexport default SimpleAddGroupUsers;\n\n//APPENDIX\n/*\nconst SimpleAddLocalStorage = () => {\n    const [isChecked, setIsChecked] = useState(false);\n  \n    //POST AREA\n    const handleChange = (event) => {\n      const { name, value } = event.target\n      console.log(value)\n      console.log(name)\n  \n      setIsChecked(!isChecked);\n    }\n  \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"hi\")\n    }\n  \n    return (\n      <div className=\"user\">\n          <form onSubmit={ handleSubmit }>\n          <div className=\"topping\">\n          <input type=\"checkbox\" id=\"user\" name=\"user\" value=\"Sam\" checked={isChecked} onChange={handleChange} /> Sam\n        </div>\n            <p> is checked: {isChecked ? \"checked\" : \"un-checked\"}</p>\n            <button type=\"submit\"> Submit </button>\n          </form>\n      </div>\n    );\n}\n\nexport default SimpleAddLocalStorage;\n*/\nvar _c;\n$RefreshReg$(_c, \"SimpleAddGroupUsers\");","map":{"version":3,"names":["React","useState","useLocalStorage","IndividualGroupUser","SimpleAddGroupUsers","currentUser","api","newGroupUser","setNewGroupUser","david","userID","userName","sam","frodo","usersArray","users","addUser","addNewGroupUser","console","log","currentGroupUserArrayString","currentGroupUserArray","JSON","parse","newUsers","filter","user","removeNewGroupUser","localStorage","getItem","map"],"sources":["/Users/david/Desktop/David/www/kite/src/components/playground/SimpleAddGroupUser.js"],"sourcesContent":["import React, { useState } from 'react'\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport IndividualGroupUser from './IndividualGroupUser';\n\nconst SimpleAddGroupUsers= ({ currentUser, api }) => {\n  /*\n  let newGroupUsersLocalStorage = [\"sam\", \"frodo\"] \n  let string = JSON.stringify(students) \n  localStorage.setItem(\"students\", string) \n  */\n  //PART 1: Local Storage Users \n  const [newGroupUser, setNewGroupUser] = useLocalStorage('newGroupUser', '[]')\n\n  //PART 2: Current Friends (you can add to new group)\n  let david = {\n    userID: 1,\n    userName: \"david\",\n  }\n  let sam = {\n    userID: 2,\n    userName: \"sam\",\n  }\n  let frodo = {\n    userID: 3,\n    userName: \"frodo\",\n  }\n\n  let usersArray = [david, sam, frodo]\n\n  const [users, addUser] = useState(usersArray)\n  \n  //PART 3: Actions \n  //Part 3A: Add  a Friend to a new Group\n  const addNewGroupUser = (userName) => {\n    console.log(\"You are going to add \" + userName)\n    \n    //Step 1: Add New Group User to Local Storage Array \n    let currentGroupUserArrayString = newGroupUser;\n    let currentGroupUserArray = JSON.parse(newGroupUser);\n    console.log(currentGroupUserArray); \n    \n    /*\n    let retString = localStorage.getItem(\"students\") \n    let retArray = JSON.parse(retString) \n    console.log(retArray); \n    console.log(oldGroupUserArray);\n    oldGroupUserArray.push(userName);\n\n    let newGroupUserArray = oldGroupUserArray;\n    console.log(newGroupUserArray);\n    setNewGroupUser(newGroupUserArray)\n    */\n\n    //Step 2: Remove User from Current available Friends\n    const newUsers = users.filter(user => user.userName !== userName);\n    addUser(newUsers)  \n    \n\n  }\n\n  //Part 3B: Add a friend from the new group \n  const removeNewGroupUser = (userID) => {\n      console.log(\"You will remove \" + userID)\n      //Step 1: Remove New Group User from Local Storage Array \n      localStorage.getItem(\"temp\");\n\n      //Step 2: Add User back to available Friends\n  \n  }\n\n\n  //localStorage.setItem(\"newGroupUser\", '');\n  //localStorage.getItem(\"temp\");\n  //console.log(theTemp)\n\n  return (\n      <div> \n          <div className='simple-border'>\n          <h4> Friends you can Add </h4>\n            {users.map((user) => (\n                <IndividualGroupUser key = { user.userName } addNewGroupUser = {addNewGroupUser} removeNewGroupUser = {removeNewGroupUser} user = {user} />\n            ))} \n          </div>\n          <h4> New Group Users</h4>\n          <div className='simple-border'>\n            { newGroupUser }\n            </div>\n\n      </div>\n  );\n}\n\n\nexport default SimpleAddGroupUsers;\n\n\n\n\n//APPENDIX\n/*\nconst SimpleAddLocalStorage = () => {\n    const [isChecked, setIsChecked] = useState(false);\n  \n    //POST AREA\n    const handleChange = (event) => {\n      const { name, value } = event.target\n      console.log(value)\n      console.log(name)\n  \n      setIsChecked(!isChecked);\n    }\n  \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"hi\")\n    }\n  \n    return (\n      <div className=\"user\">\n          <form onSubmit={ handleSubmit }>\n          <div className=\"topping\">\n          <input type=\"checkbox\" id=\"user\" name=\"user\" value=\"Sam\" checked={isChecked} onChange={handleChange} /> Sam\n        </div>\n            <p> is checked: {isChecked ? \"checked\" : \"un-checked\"}</p>\n            <button type=\"submit\"> Submit </button>\n          </form>\n      </div>\n    );\n}\n\nexport default SimpleAddLocalStorage;\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC;AAExD,MAAMC,mBAAmB,GAAE,QAA0B;EAAA;EAAA,IAAzB;IAAEC,WAAW;IAAEC;EAAI,CAAC;EAC9C;AACF;AACA;AACA;AACA;EACE;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,eAAe,CAAC,cAAc,EAAE,IAAI,CAAC;;EAE7E;EACA,IAAIO,KAAK,GAAG;IACVC,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE;EACZ,CAAC;EACD,IAAIC,GAAG,GAAG;IACRF,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE;EACZ,CAAC;EACD,IAAIE,KAAK,GAAG;IACVH,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE;EACZ,CAAC;EAED,IAAIG,UAAU,GAAG,CAACL,KAAK,EAAEG,GAAG,EAAEC,KAAK,CAAC;EAEpC,MAAM,CAACE,KAAK,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACa,UAAU,CAAC;;EAE7C;EACA;EACA,MAAMG,eAAe,GAAIN,QAAQ,IAAK;IACpCO,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGR,QAAQ,CAAC;;IAE/C;IACA,IAAIS,2BAA2B,GAAGb,YAAY;IAC9C,IAAIc,qBAAqB,GAAGC,IAAI,CAACC,KAAK,CAAChB,YAAY,CAAC;IACpDW,OAAO,CAACC,GAAG,CAACE,qBAAqB,CAAC;;IAElC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGI;IACA,MAAMG,QAAQ,GAAGT,KAAK,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACf,QAAQ,KAAKA,QAAQ,CAAC;IACjEK,OAAO,CAACQ,QAAQ,CAAC;EAGnB,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAIjB,MAAM,IAAK;IACnCQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGT,MAAM,CAAC;IACxC;IACAkB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;IAE5B;EAEJ,CAAC;;EAGD;EACA;EACA;;EAEA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC9B;QAAA,UAAI;MAAqB;QAAA;QAAA;QAAA;MAAA,QAAK,EAC3Bd,KAAK,CAACe,GAAG,CAAEJ,IAAI,iBACZ,QAAC,mBAAmB;QAAyB,eAAe,EAAIT,eAAgB;QAAC,kBAAkB,EAAIU,kBAAmB;QAAC,IAAI,EAAID;MAAK,GAA3GA,IAAI,CAACf,QAAQ;QAAA;QAAA;QAAA;MAAA,QAC7C,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAA,UAAI;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAK,eACzB;MAAK,SAAS,EAAC,eAAe;MAAA,UAC1BJ;IAAY;MAAA;MAAA;MAAA;IAAA,QACR;EAAA;IAAA;IAAA;IAAA;EAAA,QAEN;AAEZ,CAAC;AAAA,GAtFKH,mBAAmB;EAAA,QAOiBF,eAAe;AAAA;AAAA,KAPnDE,mBAAmB;AAyFzB,eAAeA,mBAAmB;;AAKlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAAA"},"metadata":{},"sourceType":"module"}